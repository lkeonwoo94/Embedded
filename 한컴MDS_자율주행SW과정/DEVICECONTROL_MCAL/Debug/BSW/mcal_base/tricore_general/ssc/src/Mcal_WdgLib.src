	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v4.2r2 Build 744.1.1"
	.compiler_invocation	"ctc -f cc3500a -c90 --dep-file=BSW\\mcal_base\\tricore_general\\ssc\\src\\.Mcal_WdgLib.o.d -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x -F --uchar -D_TASKING_C_TRICORE_ -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\ASW -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\ecum_infineon_tricore\\ssc\\inc -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\general\\inc -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\general\\tricore\\compiler -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\general\\tricore\\inc -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\general\\tricore\\inc\\TC27xC -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\integration_general\\inc -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\irq_infineon_tricore\\ssc\\inc -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\mcu_infineon_tricore\\ssc\\inc -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\port_infineon_tricore\\ssc\\inc -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\tricore_general\\ssc\\inc -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_gen\\Demo_Aurix -IC:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_gen\\inc -g --make-target=BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.o -t4 --language=+comments,-gcc,-volatile,+strings --default-near-size=8 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto -o BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.src ..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c"
	.compiler_name		"ctc"
	.name	"Mcal_WdgLib"

	
$TC16X
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_lCpuPwSequence')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     1  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     2  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     3  ** Copyright (C) Infineon Technologies (2013)                                 **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     4  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     5  ** All rights reserved.                                                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     6  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     7  ** This document contains proprietary information belonging to Infineon       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     8  ** Technologies. Passing on and copying of this document, and communication   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	     9  ** of its contents is not permitted without prior written authorization.      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    10  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    11  ********************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    12  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    13  **   $FILENAME   : Mcal_WdgLib.c $                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    14  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    15  **   $CC VERSION : \main\41 $                                                 **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    16  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    17  **   $DATE       : 2015-10-16 $                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    18  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    19  **   AUTHOR      : DL-AUTOSAR-Engineering                                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    20  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    21  **   VENDOR      : Infineon Technologies                                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    22  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    23  **   DESCRIPTION : This file contains Mcal Wdg library routines               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    24  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    25  **   SPECIFICATION(S) :    NA                                                 **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    26  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    27  **   MAY BE CHANGED BY USER [yes/no]: no                                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    28  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    29  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    30  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    31  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    32  **                      Includes                                              **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    33  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    34  #include "Std_Types.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    35  #include "IfxScu_reg.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    36  #include "IfxCpu_reg.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    37  #include "IfxSrc_reg.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    38  /* Own header file */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    39  #include "Mcal.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    40  #include "Mcal_TcLib.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    41  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    42  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    43  **                      File Inclusion Check                                  **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    44  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    45  #ifndef MCAL_SW_MAJOR_VERSION
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    46  #error "MCAL_SW_MAJOR_VERSION is not defined. "
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    47  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    48  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    49  #ifndef MCAL_SW_MINOR_VERSION
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    50    #error "MCAL_SW_MINOR_VERSION is not defined. "
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    51  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    52  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    53  #ifndef MCAL_SW_PATCH_VERSION
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    54  #error "MCAL_SW_PATCH_VERSION is not defined. "
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    55  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    56  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    57  #if ( MCAL_SW_MAJOR_VERSION != 1 )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    58    #error "MCAL_SW_MAJOR_VERSION does not match. "
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    59  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    60  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    61  #if ( MCAL_SW_MINOR_VERSION != 0 )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    62    #error "MCAL_SW_MINOR_VERSION does not match. "
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    63  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    64  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    65  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    66  **                      Private Macro Definitions                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    67  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    68  /* max number of watch dogs (Safety, CPU0, CPU1 CPU2) */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    69  #if ( MCAL_NO_OF_CORES == 3U )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    70  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    71  #define MCAL_WDT_MAX_CPUWDT           ( 4u )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    72  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    73  #elif (MCAL_NO_OF_CORES == 2U)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    74  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    75  #define MCAL_WDT_MAX_CPUWDT           ( 3u )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    76  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    77  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    78  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    79  #define MCAL_WDT_MAX_CPUWDT           ( 2u )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    80  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    81  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    82  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    83  /* mask for password Bits 2-7 */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    84  #define MCAL_WDT_PASSWORD_LOWER_MASK  ( 0x000000FCu )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    85  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    86  /* mask for password Bits 8-15 */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    87  #define MCAL_WDT_PASSWORD_UPPER_MASK  ( 0x0000FF00u )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    88  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    89  /* mask for password bits */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    90  #define MCAL_WDT_PASSWORD_MASK        ( MCAL_WDT_PASSWORD_LOWER_MASK | \ 
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    91                                              MCAL_WDT_PASSWORD_UPPER_MASK)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    92  /* mask for reload bits */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    93  #define MCAL_WDT_RELOAD_MASK          ( 0xFFFF0000u )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    94  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    95  /* mask for LCK and ENDINIT status bits */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    96  #define MCAL_WDT_STATUS_MASK          ( 0x00000003u )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    97  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    98  /* Reload value for watch dog in timeout mode */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	    99  #define SDWT_TIMEOUT_MODE_RELOAD      ( 0xFFFC0000u )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   100  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   101  /** \\brief  F0, Safety WDT Control Register 0 */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   102  #define MCAL_SCU_WDTS_CON0 /* lint --e(923)*/ \ 
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   103                      (*(volatile Ifx_SCU_WDTCPU_CON0*)0xF00360F0u)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   104  /** \\brief  F8, Safety WDT Status Register */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   105  #define MCAL_SCU_WDTS_SR /* lint --e(923)*/ \ 
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   106                            (*(volatile Ifx_SCU_WDTCPU_SR*)0xF00360F8u)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   107  #define MCAL_CORE_ID_MASK   (0x7U)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   108  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   109  **                      Private Type Definitions                              **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   110  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   111  /* list element for generic watchdog access */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   112  typedef struct ScuWdtPtrType
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   113  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   114    /* pointer to WDTCON0 of this watch dog */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   115    volatile Ifx_SCU_WDTCPU_CON0*   Wdtcon0Ptr;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   116    /* pointer to WDTSSR  of this watch dog */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   117    volatile Ifx_SCU_WDTCPU_SR*     WdtssrPtr;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   118    /* Pointer to saved timer reload during timeout mode */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   119    uint32*                 WdtSaveValuePtr;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   120  } ScuWdtPtrType;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   121  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   122  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   123  **                      Private Variable Definitions                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   124  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   125  /*
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   126   * To be used for all global or static variables
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   127   * that are never  initialized.
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   128   */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   129  #if (IFX_MCAL_USED == STD_ON)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   130  #define MCAL_WDGLIB_START_SEC_VAR_INIT_32BIT
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   131  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   132   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   133  #include "MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   134  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   135  #define IFX_MCAL_WDGLIB_START_SEC_VAR_NONZERO_INIT_32BIT_ASIL_B
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   136  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   137   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   138  #include "Ifx_MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   139  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   140  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   141  /* used for nesting ENDINIT management */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   142  #if ( MCAL_NO_OF_CORES == 3U )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   143  static volatile uint32 Mcal_ResetEndInitCounter[MCAL_NO_OF_CORES] = {0U,0U,0U};
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   144  static volatile uint32 Mcal_ResetEndInitCounterRedn[MCAL_NO_OF_CORES] =
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   145                                              {0xFFFFFFFFU,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   146                                               0xFFFFFFFFU,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   147                                               0xFFFFFFFFU};
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   148  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   149  #elif ( MCAL_NO_OF_CORES == 2U )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   150  static volatile uint32 Mcal_ResetEndInitCounter[MCAL_NO_OF_CORES] = {0U,0U};
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   151  static volatile uint32 Mcal_ResetEndInitCounterRedn[MCAL_NO_OF_CORES] =
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   152                                              {0xFFFFFFFFU,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   153                                               0xFFFFFFFFU};
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   154  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   155  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   156  static volatile uint32 Mcal_ResetEndInitCounter[MCAL_NO_OF_CORES] = {0U};
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   157  static volatile uint32 Mcal_ResetEndInitCounterRedn[MCAL_NO_OF_CORES] =
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   158                                              {0xFFFFFFFFU};
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   159  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   160  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   161  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   162  static uint32 Mcal_SafetyResetEndInitCounter = 0U;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   163  static uint32 Mcal_SafetyResetEndInitCounterRedn = 0xFFFFFFFFU;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   164  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   165  /* Safety Endinit Semaphore */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   166  static uint32 Mcal_WdgSafetyEndInitSem = 0U;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   167  static uint32 Mcal_WdgSafetyEndInitSemRedn = 0xFFFFFFFFU;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   168  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   169  /* used as temporarily variables for each watch dog, no external change
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   170   * required! */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   171  /* will hold the current timer value when switching to Timeout-Mode
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   172   * (Reset/SetEndinit Sequence) this value will be used to restore as next reload
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   173   * value, assuming that the original reload value will be setup again with the
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   174   * expected modify access to service the watch dog regularly
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   175   */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   176  #if (IFX_MCAL_USED == STD_ON)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   177  #define MCAL_WDGLIB_STOP_SEC_VAR_INIT_32BIT
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   178  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   179   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   180  #include "MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   181  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   182  #define IFX_MCAL_WDGLIB_STOP_SEC_VAR_NONZERO_INIT_32BIT_ASIL_B
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   183  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   184   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   185  #include "Ifx_MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   186  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   187  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   188  #if (IFX_MCAL_USED == STD_ON)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   189  #define MCAL_WDGLIB_START_SEC_VAR_32BIT
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   190  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   191   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   192  #include "MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   193  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   194  #define IFX_MCAL_WDGLIB_START_SEC_VAR_32BIT_ASIL_B
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   195  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   196   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   197  #include "Ifx_MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   198  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   199  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   200  static uint32 Swdt_TimValue;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   201  static uint32 Wdt0_TimValue;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   202  #if ( MCAL_NO_OF_CORES > 1U )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   203  static uint32 Wdt1_TimValue;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   204  #if ( MCAL_NO_OF_CORES == 3U )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   205  static uint32 Wdt2_TimValue;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   206  #endif /* ( MCAL_NO_OF_CORES == 3U ) */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   207  #endif /* ( MCAL_NO_OF_CORES > 1U ) */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   208  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   209  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   210  #if (IFX_MCAL_USED == STD_ON)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   211  #define MCAL_WDGLIB_STOP_SEC_VAR_32BIT
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   212  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   213   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   214  #include "MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   215  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   216  #define IFX_MCAL_WDGLIB_STOP_SEC_VAR_32BIT_ASIL_B
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   217  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   218   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   219  #include "Ifx_MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   220  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   221  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   222  #if (IFX_MCAL_USED == STD_ON)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   223  #define MCAL_WDGLIB_START_SEC_CONST_32BIT
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   224  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   225   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   226  #include "MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   227  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   228  #define IFX_MCAL_WDGLIB_START_SEC_CONST_32BIT_ASIL_B
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   229  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   230   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   231  #include "Ifx_MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   232  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   233  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   234  /* access table for watch dog and local timer variables */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   235  /*IFX_MISRA_RULE_11_01_STATUS=integer to pointer typecasting is done for the
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   236  the Safety WDTS_CON0 SFR for watchdog access*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   237  /*IFX_MISRA_RULE_11_01_STATUS=integer to pointer typecasting is done for the
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   238  the Safety WDTS_SR SFR for watchdog access*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   239  /*IFX_MISRA_RULE_11_03_STATUS=integer to pointer typecasting is done for the
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   240  the Safety WDTS_CON0 SFR for watchdog access*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   241  /*IFX_MISRA_RULE_11_03_STATUS=integer to pointer typecasting is done for the
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   242  the Safety WDTS_SR SFR for watchdog access*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   243  static const ScuWdtPtrType ScuWdtPtrList[MCAL_WDT_MAX_CPUWDT] =
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   244  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   245    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   246      &MCAL_SCU_WDTS_CON0,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   247      &MCAL_SCU_WDTS_SR,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   248      &Swdt_TimValue
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   249    },
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   250    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   251      &SCU_WDTCPU0_CON0,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   252      &SCU_WDTCPU0_SR,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   253      &Wdt0_TimValue
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   254    #if ( MCAL_NO_OF_CORES > 1U )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   255    },
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   256    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   257      &SCU_WDTCPU1_CON0,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   258      &SCU_WDTCPU1_SR,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   259      &Wdt1_TimValue
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   260    #if ( MCAL_NO_OF_CORES == 3U )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   261    },
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   262    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   263      &SCU_WDTCPU2_CON0,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   264      &SCU_WDTCPU2_SR,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   265      &Wdt2_TimValue
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   266    #endif /* #if ( MCAL_NO_OF_CORES == 3U ) */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   267    #endif /* #if ( MCAL_NO_OF_CORES > 1U ) */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   268    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   269  };
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   270  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   271  #if (IFX_MCAL_USED == STD_ON)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   272  #define MCAL_WDGLIB_STOP_SEC_CONST_32BIT
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   273  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   274   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   275  #include "MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   276  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   277  #define IFX_MCAL_WDGLIB_STOP_SEC_CONST_32BIT_ASIL_B
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   278  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   279   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   280  #include "Ifx_MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   281  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   282  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   283  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   284  **                      Global Constant Definitions                           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   285  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   286  #if (IFX_MCAL_USED == STD_ON)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   287  /*Memory Map of the Code*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   288  #define MCAL_WDGLIB_START_SEC_CODE
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   289  /*
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   290    Allows to map variables, constants and code of modules to individual
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   291    memory sections.
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   292  */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   293  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   294   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   295  #include "MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   296  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   297  #define IFX_MCAL_WDGLIB_START_SEC_CODE_ASIL_B
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   298  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   299   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   300  #include "Ifx_MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   301  #endif
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   302  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   303  **                      Private Function Declarations                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   304  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   305  static uint32  Mcal_lCpuPwSequence
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   306  (
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   307  const sint8 wdt,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   308  const uint32 Password
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   309  );
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   310  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   311  static uint32 Mcal_lCpuRelValue
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   312  (
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   313  const sint8 wdt,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   314  const uint32 TimReload
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   315  );
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   316  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   317  static void Mcal_lCpuModifyAccess
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   318  (
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   319  const sint8 wdt,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   320  const uint32 NewPassword,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   321  const uint32 NewReload
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   322  );
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   323  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   324  static void Mcal_lCpuCheckAccess
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   325  (
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   326  const sint8 wdt,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   327  const uint32 CheckPassword,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   328  const uint32 CheckTimer
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   329  );
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   330  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   331  static void Mcal_lSetSafetyENDINIT( void );
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   332  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   333  static void Mcal_lResetSafetyENDINIT( void );
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   334  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   335  **                       Private Function Definitions                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   336  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   337  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   338  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   339  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   340  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   341  ** Syntax           : Mcal_CpuPwSequence (const sint8 wdt,                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   342  **                      const uint32 Password)                                **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   343  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   344  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   345  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   346  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   347  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   348  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   349  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   350  ** Parameters(in)   : wdt: WDG index                                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   351  **                    Password: Current value of WDTxCON0                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   352  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   353  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   354  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   355  ** Return value     : Result:Next password                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   356  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   357  ** Description      :  create expected password reload                        **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   358  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   359  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   360  static uint32  Mcal_lCpuPwSequence (const sint8 wdt, const uint32 Password)
; Function Mcal_lCpuPwSequence
.L29:
Mcal_lCpuPwSequence:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   361  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   362    uint32 Result = Password & MCAL_WDT_PASSWORD_MASK;
	mov.u	d15,#65532
.L297:
	and	d5,d15
.L296:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   363  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   364    volatile Ifx_SCU_WDTCPU_SR* ScuSsrPtr = ScuWdtPtrList[wdt+1].WdtssrPtr;
	mul	d15,d4,#12
.L573:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L574:
	addsc.a	a15,a15,d15,#0
.L575:
	ld.a	a15,[a15]16
.L299:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   365  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   366    /* first generate proper password write value
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   367       (include PW Bit8-15 and inverted PW Bit 2-7) */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   368    Result = ( Result & MCAL_WDT_PASSWORD_UPPER_MASK) |
	mov.u	d0,#65280
.L576:
	and	d0,d5
.L577:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   369               ((~(Result & MCAL_WDT_PASSWORD_LOWER_MASK))
	and	d15,d5,#252
.L578:
	mov	d1,#-1
	xor	d15,d1
.L579:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   370               & MCAL_WDT_PASSWORD_LOWER_MASK );
	and	d15,#252
.L580:
	or	d2,d0,d15
.L298:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   371  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   372    /* additionally auto sequence password enabled ? */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   373    if (ScuSsrPtr->B.PAS != 0u)
	ld.bu	d15,[a15]
.L581:
	jz.t	d15:7,.L2
.L256:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   374    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   375       /*  modify password with expected password by calculating new 14-bit LFSR
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   376        *  with characteristic polynomial x14+x13+x12+x2+1.
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   377        */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   378      uint32 lfsr = Result;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   379      uint32 bit  = ( (lfsr>>1) ^ (lfsr>>11) ^ (lfsr>>12) ^ (lfsr>>13) )
	sh	d15,d2,#-1
.L582:
	sh	d0,d2,#-11
.L583:
	xor	d15,d0
.L584:
	sh	d0,d2,#-12
.L585:
	xor	d15,d0
.L586:
	sh	d0,d2,#-13
.L587:
	xor	d15,d0
.L301:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   380                      & 0x0004u;
	and	d15,#4
.L588:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   381      Result      = (((lfsr << 1) | bit ) & MCAL_WDT_PASSWORD_MASK);
	sh	d2,#1
.L300:
	or	d15,d2
.L302:
	mov.u	d2,#65532
.L303:
	and	d2,d15
.L2:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   382    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   383    return (Result);
	j	.L3

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   384  }
.L3:
	ret
.L249:
	
__Mcal_lCpuPwSequence_function_end:
	.size	Mcal_lCpuPwSequence,__Mcal_lCpuPwSequence_function_end-Mcal_lCpuPwSequence
.L132:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_lCpuRelValue')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   385  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   386  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   387  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   388  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   389  ** Syntax           : Mcal_lCpuRelValue (const sint8 wdt,                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   390  **                      const uint32 TimReload)                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   391  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   392  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   393  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   394  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   395  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   396  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   397  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   398  ** Parameters(in)   : wdt: WDG index                                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   399  **                    TimReload: Current value of WDTxCON0                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   400  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   401  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   402  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   403  ** Return value     : Result: Expected timer reload value                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   404  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   405  ** Description      : create expected timer reload value                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   406  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   407  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   408  static uint32 Mcal_lCpuRelValue(const sint8 wdt, const uint32 TimReload)
; Function Mcal_lCpuRelValue
.L31:
Mcal_lCpuRelValue:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   409  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   410    uint32 Result = TimReload & MCAL_WDT_RELOAD_MASK;
	insert	d2,d5,#0,#0,#16
.L304:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   411  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   412    volatile Ifx_SCU_WDTCPU_SR* ScuSsrPtr = ScuWdtPtrList[wdt+1].WdtssrPtr;
	mul	d15,d4,#12
.L593:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L594:
	addsc.a	a15,a15,d15,#0
.L595:
	ld.a	a15,[a15]16
.L305:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   413  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   414    /* timer check enabled ? */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   415    if (ScuSsrPtr->B.TCS != 0u)
	ld.bu	d15,[a15]1
.L596:
	jz.t	d15:0,.L4
.L597:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   416    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   417        Result = ((uint32)~(uint32)ScuSsrPtr->B.TIM) << 16u;
	ld.hu	d15,[a15]2
.L598:
	mov	d0,#-1
	xor	d15,d0
.L599:
	sh	d2,d15,#16
.L4:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   418    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   419    return (Result);
	j	.L5

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   420  }
.L5:
	ret
.L259:
	
__Mcal_lCpuRelValue_function_end:
	.size	Mcal_lCpuRelValue,__Mcal_lCpuRelValue_function_end-Mcal_lCpuRelValue
.L137:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_ResetCpuENDINIT')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_ResetCpuENDINIT

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   421  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   422  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   423  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   424  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   425  ** Syntax           : void Mcal_ResetCpuENDINIT(const sint8 wdt)              **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   426  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   427  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   428  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   429  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   430  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   431  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   432  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   433  ** Parameters(in)   : wdt: WDG index                                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   434  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   435  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   436  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   437  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   438  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   439  ** Description      : Interrupts must be disabled prior to this call and      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   440  **                    can be enabled after setting of endinit  bit only       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   441  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   442  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   443  void Mcal_ResetCpuENDINIT(const sint8 wdt)
; Function Mcal_ResetCpuENDINIT
.L33:
Mcal_ResetCpuENDINIT:	.type	func
	sub.a	a10,#8
.L306:
	mov	d8,d4
.L308:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   444  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   445    uint32 NewValCon0;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   446    uint32 NewPw;                   /* next password to be used */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   447    uint32 NewRel;                  /* next reload value to be used */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   448    uint32 Temp;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   449    volatile uint32 dummy;          /* ensure readback */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   450  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   451    volatile Ifx_SCU_WDTCPU_CON0* ScuWdtcon0Ptr
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   452                                = ScuWdtPtrList[wdt+1].Wdtcon0Ptr;
	mul	d15,d8,#12
.L491:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L492:
	addsc.a	a15,a15,d15,#0
.L493:
	ld.a	a12,[a15]12
.L309:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   453    volatile Ifx_SCU_WDTCPU_SR*   ScuSsrPtr
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   454                                = ScuWdtPtrList[wdt+1].WdtssrPtr;
	mul	d15,d8,#12
.L494:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L495:
	addsc.a	a15,a15,d15,#0
.L496:
	ld.a	a13,[a15]16
.L310:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   455    uint32* WdtTimPwSavePtr     = ScuWdtPtrList[wdt+1].WdtSaveValuePtr;
	mul	d15,d8,#12
.L497:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L498:
	addsc.a	a15,a15,d15,#0
.L499:
	ld.a	a15,[a15]20
.L311:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   456  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   457    /* save old value */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   458    NewValCon0  = ScuWdtcon0Ptr->U;
	ld.w	d9,[a12]
.L312:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   459  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   460    /* get valid next password */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   461    NewPw  = Mcal_lCpuPwSequence(wdt, NewValCon0);
	mov	e4,d9,d8
.L307:
	call	Mcal_lCpuPwSequence
.L314:
	mov	d15,d2
.L316:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   462  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   463    /* get valid next timer reload */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   464    NewRel = Mcal_lCpuRelValue(wdt, NewValCon0);
	mov	e4,d9,d8
	call	Mcal_lCpuRelValue
.L315:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   465  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   466    /* build required password WDTCON0 value */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   467    NewValCon0 =  ( (NewRel) |              /* new reload value  */
	or	d2,d15
.L317:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   468                    (NewPw)  |              /* new Password */
	or	d15,d2,#1
.L313:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   469                    (1u) );                 /* Clear LCK, keep ENDINIT set */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   470  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   471    /* Read and save current timer and password to be restored with SetENDINIT*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   472    Temp = (uint32)ScuWdtcon0Ptr->U & (uint32)MCAL_WDT_PASSWORD_MASK;
	ld.w	d0,[a12]
.L500:
	mov.u	d1,#65532
.L319:
	and	d0,d1
.L501:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   473    Temp |= (uint32)ScuSsrPtr->U & (uint32)MCAL_WDT_RELOAD_MASK;
	ld.w	d1,[a13]
.L502:
	insert	d1,d1,#0,#0,#16
.L503:
	or	d0,d1
.L504:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   474    *WdtTimPwSavePtr = Temp;
	st.w	[a15],d0
.L505:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   475  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   476    ScuWdtcon0Ptr->U  = NewValCon0;        /* password access to unlock */
	st.w	[a12],d15
.L506:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   477  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   478    NewValCon0 &= ~MCAL_WDT_STATUS_MASK;   /* clear ENDINIT and LCK Bit */
	insert	d15,d15,#0,#0,#2
.L507:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   479    NewValCon0 |= 0x2u;                    /* set LCK Bit */
	or	d15,#2
.L508:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   480  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   481    ScuWdtcon0Ptr->U = NewValCon0; /* write access and lock for Timeout mode */
	st.w	[a12],d15
.L509:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   482  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   483    /* read back to ensure protection release is executed */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   484    dummy = ScuWdtcon0Ptr->U;
	ld.w	d15,[a12]
.L318:
	st.w	[a10],d15
.L510:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   485    UNUSED_PARAMETER(dummy)
	ld.w	d15,[a10]
	jeq	d15,#0,.L6
.L6:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   486  }
	ret
.L219:
	
__Mcal_ResetCpuENDINIT_function_end:
	.size	Mcal_ResetCpuENDINIT,__Mcal_ResetCpuENDINIT_function_end-Mcal_ResetCpuENDINIT
.L112:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_SetCpuENDINIT')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_SetCpuENDINIT

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   487  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   488  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   489  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   490  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   491  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   492  ** Syntax           : void Mcal_SetCpuENDINIT(const sint8 wdt)                **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   493  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   494  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   495  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   496  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   497  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   498  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   499  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   500  ** Parameters(in)   : wdt: WDG index                                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   501  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   502  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   503  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   504  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   505  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   506  ** Description      : Interrupts must be disabled prior to this call and      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   507  **                    can be enabled after setting of endinit  bit only       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   508  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   509  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   510  void Mcal_SetCpuENDINIT(const sint8 wdt)
; Function Mcal_SetCpuENDINIT
.L35:
Mcal_SetCpuENDINIT:	.type	func
	sub.a	a10,#8
.L320:
	mov	d8,d4
.L322:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   511  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   512    uint32 NewValCon0;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   513    uint32 NewPw;                   /* next password to be used */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   514    uint32 NewRel;                  /* next timer reload to be used */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   515    volatile uint32 dummy;          /* ensure readback */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   516  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   517    volatile Ifx_SCU_WDTCPU_CON0* ScuWdtcon0Ptr
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   518                                    = ScuWdtPtrList[wdt+1].Wdtcon0Ptr;
	mul	d15,d8,#12
.L515:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L516:
	addsc.a	a15,a15,d15,#0
.L517:
	ld.a	a12,[a15]12
.L323:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   519    volatile Ifx_SCU_WDTCPU_SR*   ScuSsrPtr
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   520                                    = ScuWdtPtrList[wdt+1].WdtssrPtr;
	mul	d15,d8,#12
.L518:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L519:
	addsc.a	a15,a15,d15,#0
.L520:
	ld.a	a13,[a15]16
.L324:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   521    uint32* WdtTimPwSavePtr         = ScuWdtPtrList[wdt+1].WdtSaveValuePtr;
	mul	d15,d8,#12
.L521:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L522:
	addsc.a	a15,a15,d15,#0
.L523:
	ld.a	a15,[a15]20
.L325:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   522  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   523    /* save old value */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   524    NewValCon0  = ScuWdtcon0Ptr->U;
	ld.w	d9,[a12]
.L326:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   525  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   526    /* get valid next password */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   527    NewPw  = Mcal_lCpuPwSequence(wdt, NewValCon0);
	mov	e4,d9,d8
.L321:
	call	Mcal_lCpuPwSequence
.L328:
	mov	d15,d2
.L330:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   528  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   529    /* get valid next timer reload */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   530    NewRel = Mcal_lCpuRelValue(wdt, NewValCon0);
	mov	e4,d9,d8
	call	Mcal_lCpuRelValue
.L329:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   531  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   532    /* build required password WDTCON0 value */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   533    NewValCon0  =  ( (NewRel) |             /* new reload value  */
	or	d2,d15
.L331:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   534                    (NewPw)   |             /* new Password */
	or	d15,d2,#1
.L327:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   535                    (1u) );                 /* Clear LCK, keep ENDINIT set */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   536  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   537    ScuWdtcon0Ptr->U  = NewValCon0;         /*  unlock with password access */
	st.w	[a12],d15
.L524:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   538  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   539    /* clear timer reload and restore saved and corrected reload value */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   540    NewValCon0 &= ~MCAL_WDT_RELOAD_MASK;
	insert	d0,d15,#0,#16,#16
.L332:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   541  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   542    /* set timer value back to prior value and add ticks during timeout mode */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   543    NewValCon0 |= ( *WdtTimPwSavePtr +
	ld.w	d15,[a15]
.L525:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   544                    (((uint32)ScuSsrPtr->U & MCAL_WDT_RELOAD_MASK) -
	ld.w	d1,[a13]
.L526:
	insert	d1,d1,#0,#0,#16
.L527:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   545                      SDWT_TIMEOUT_MODE_RELOAD)
	movh	d2,#65532
.L528:
	sub	d1,d2
.L529:
	add	d15,d1
.L530:
	or	d0,d15
.L531:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   546                  );
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   547  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   548    /* prepare old password to be restored with modify access*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   549    NewValCon0 &= ~MCAL_WDT_PASSWORD_MASK;
	insert	d0,d0,#0,#2,#14
.L532:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   550    NewValCon0 |= (*WdtTimPwSavePtr & MCAL_WDT_PASSWORD_UPPER_MASK) |
	ld.w	d1,[a15]
.L533:
	mov.u	d15,#65280
.L534:
	and	d1,d15
.L535:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   551                  ((~(*WdtTimPwSavePtr & MCAL_WDT_PASSWORD_LOWER_MASK))
	ld.w	d15,[a15]
.L536:
	and	d15,#252
.L537:
	mov	d2,#-1
	xor	d15,d2
.L538:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   552                   & MCAL_WDT_PASSWORD_LOWER_MASK);
	and	d15,#252
.L539:
	or	d1,d15
.L540:
	or	d0,d1
.L541:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   553  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   554    /* prepare modify & lock access */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   555    NewValCon0 |= 3u;                      /* set LCK and ENDINIT Bit */
	or	d15,d0,#3
.L333:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   556    ScuWdtcon0Ptr->U = NewValCon0;         /* write modify access and lock */
	st.w	[a12],d15
.L542:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   557  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   558    /* read back to ensure protection release is executed */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   559    dummy = ScuWdtcon0Ptr->U;
	ld.w	d15,[a12]
.L334:
	st.w	[a10],d15
.L543:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   560    UNUSED_PARAMETER(dummy)
	ld.w	d15,[a10]
	jeq	d15,#0,.L7
.L7:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   561  }
	ret
.L234:
	
__Mcal_SetCpuENDINIT_function_end:
	.size	Mcal_SetCpuENDINIT,__Mcal_SetCpuENDINIT_function_end-Mcal_SetCpuENDINIT
.L117:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_lCpuModifyAccess')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   562  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   563  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   564  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   565  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   566  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   567  ** Syntax           : static void Mcal_CpuModifyAccess(const sint8 wdt, const **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   568  **                      uint32 NewPassword, const uint32 NewReload)           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   569  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   570  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   571  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   572  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   573  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   574  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   575  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   576  ** Parameters(in)   : wdt: WDG index                                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   577  **                    NewPassword:New password for WDTxCON0 register          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   578  **                    NewReload:New reload value for WDTxCON0 register        **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   579  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   580  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   581  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   582  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   583  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   584  ** Description      :                                                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   585  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   586  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   587  static void Mcal_lCpuModifyAccess
; Function Mcal_lCpuModifyAccess
.L37:
Mcal_lCpuModifyAccess:	.type	func
	sub.a	a10,#8
.L335:
	mov	d11,d4
.L337:
	mov	d12,d5
.L338:
	mov	d14,d6
.L339:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   588  (
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   589  const sint8 wdt,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   590  const uint32 NewPassword,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   591  const uint32 NewReload
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   592  )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   593  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   594    uint32 NewValCon0;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   595    uint32 NewPw;               /* next password to be used */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   596    uint32 NewRel;              /* next timer reload to be used */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   597    uint32 NewTimer;            /* new timer to be setup */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   598    uint32 NewPwd;             /* new password to be setup */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   599    uint32 CurrState;           /* current state of LCK, ENDINIT */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   600    volatile uint32 dummy;      /* ensure readback */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   601  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   602    volatile Ifx_SCU_WDTCPU_CON0* ScuWdtcon0Ptr
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   603                                      = ScuWdtPtrList[wdt+1].Wdtcon0Ptr;
	mul	d15,d11,#12
.L604:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L605:
	addsc.a	a15,a15,d15,#0
.L606:
	ld.a	a15,[a15]12
.L340:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   604  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   605    /* Interrupts shall be disabled to avoid any other software using unlocked
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   606     * watch dog / modify with different values */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   607    Mcal_SuspendAllInterrupts();
	call	Mcal_SuspendAllInterrupts
.L336:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   608  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   609    NewValCon0 = ScuWdtcon0Ptr->U;                   /* save old value */
	ld.w	d15,[a15]
.L341:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   610    CurrState  = NewValCon0 & MCAL_WDT_STATUS_MASK; /* save get current state */
	and	d10,d15,#3
.L343:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   611    NewTimer   = NewValCon0 & MCAL_WDT_RELOAD_MASK; /* save current value */
	insert	d13,d15,#0,#0,#16
.L345:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   612    NewPwd     = NewValCon0 & MCAL_WDT_PASSWORD_MASK;/* save current pwd value*/
	mov.u	d8,#65532
.L346:
	and	d8,d15
.L607:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   613  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   614    /* get valid next password */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   615    NewPw  = Mcal_lCpuPwSequence(wdt, NewValCon0);
	mov	e4,d15,d11
	call	Mcal_lCpuPwSequence
.L347:
	mov	d9,d2
.L349:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   616  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   617    /* get valid next timer reload */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   618    NewRel = Mcal_lCpuRelValue(wdt, NewValCon0);
	mov	e4,d15,d11
	call	Mcal_lCpuRelValue
.L348:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   619  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   620    /* build required new WDTCON0 value */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   621    NewValCon0 =  ( (NewRel) |              /* new reload value  */
	or	d2,d9
.L350:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   622                    (NewPw)  |              /* new Password */
	or	d15,d2,#1
.L608:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   623                    (1u) );                 /* Clear LCK, keep ENDINIT set */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   624  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   625    ScuWdtcon0Ptr->U  = NewValCon0;           /* unlock access */
	st.w	[a15],d15
.L609:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   626  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   627    /* modify reload value requested? */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   628    if (NewReload <= MCAL_WDT_RELOAD_MAX)
	mov.u	d0,#65535
.L610:
	jlt.u	d0,d14,.L8
.L611:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   629    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   630        NewTimer = NewReload << 16u;          /* yes, use new value */
	sh	d13,d14,#16
.L8:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   631    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   632  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   633    /* modify password requested? */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   634    if (NewPassword <= MCAL_WDT_PASSWORD_MAX)
	mov.u	d0,#65535
.L612:
	jlt.u	d0,d12,.L9
.L613:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   635    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   636        NewPwd = NewPassword;
	mov	d8,d12
.L9:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   637    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   638  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   639    /* clear timer reload and restore saved value or setup new values */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   640    NewValCon0 &= ~MCAL_WDT_RELOAD_MASK;
	insert	d15,d15,#0,#16,#16
.L351:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   641    NewValCon0 |= NewTimer;     /* set (new) timer value */
	or	d13,d15
.L342:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   642  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   643  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   644    /* clear password and restore saved value or setup new values */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   645    NewValCon0 &= ~MCAL_WDT_PASSWORD_MASK;   /* clear old bits */
	insert	d0,d13,#0,#2,#14
.L352:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   646    /* adjust to valid bits only and prepare write value */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   647    NewValCon0 |= (NewPwd & MCAL_WDT_PASSWORD_UPPER_MASK) |
	mov.u	d1,#65280
.L614:
	and	d1,d8
.L615:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   648                  ((~(NewPwd & MCAL_WDT_PASSWORD_LOWER_MASK))
	and	d15,d8,#252
.L616:
	mov	d2,#-1
	xor	d15,d2
.L617:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   649                  & MCAL_WDT_PASSWORD_LOWER_MASK);
	and	d15,#252
.L618:
	or	d1,d15
.L619:
	or	d0,d1
.L620:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   650  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   651    /* restore LCK and ENDINIT settings */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   652    NewValCon0 &= ~MCAL_WDT_STATUS_MASK;         /* clear LCK and ENDINIT */
	insert	d15,d0,#0,#0,#2
.L353:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   653    NewValCon0 |= CurrState;
	or	d10,d15
.L344:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   654  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   655    /* modify write access and restore lock state */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   656    ScuWdtcon0Ptr->U = NewValCon0;
	st.w	[a15],d10
.L621:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   657  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   658    /* read back to ensure protection release is executed */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   659    dummy = ScuWdtcon0Ptr->U;
	ld.w	d15,[a15]
.L622:
	st.w	[a10],d15
.L623:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   660    UNUSED_PARAMETER(dummy)
	ld.w	d15,[a10]
	jeq	d15,#0,.L10
.L10:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   661  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   662    /*  Interrupts allowed again */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   663    Mcal_ResumeAllInterrupts();
	call	Mcal_ResumeAllInterrupts
.L624:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   664  }
	ret
.L266:
	
__Mcal_lCpuModifyAccess_function_end:
	.size	Mcal_lCpuModifyAccess,__Mcal_lCpuModifyAccess_function_end-Mcal_lCpuModifyAccess
.L142:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_lCpuCheckAccess')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   665  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   666  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   667  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   668  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   669  ** Syntax           : static void Mcal_CpuCheckAccess(const sint8 wdt, const  **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   670  **                      uint32 CheckPassword, const uint32 CheckTimer)        **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   671  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   672  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   673  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   674  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   675  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   676  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   677  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   678  ** Parameters(in)   : wdt: WDG index                                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   679  **                    CheckPassword:Password for WDTxCON0 register            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   680  **                    CheckTimer:Reload value for WDTxCON0 register           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   681  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   682  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   683  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   684  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   685  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   686  ** Description      :                                                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   687  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   688  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   689  static void Mcal_lCpuCheckAccess
; Function Mcal_lCpuCheckAccess
.L39:
Mcal_lCpuCheckAccess:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   690  (
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   691   const sint8 wdt,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   692   const uint32 CheckPassword,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   693   const uint32 CheckTimer
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   694  )
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   695  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   696    uint32  NewValCon0;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   697  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   698    volatile Ifx_SCU_WDTCPU_CON0* ScuWdtcon0Ptr
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   699                            = ScuWdtPtrList[wdt+1].Wdtcon0Ptr;
	mul	d15,d4,#12
.L629:
	movh.a	a15,#@his(ScuWdtPtrList)
	lea	a15,[a15]@los(ScuWdtPtrList)
.L630:
	addsc.a	a15,a15,d15,#0
.L631:
	ld.a	a15,[a15]12
.L354:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   700  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   701    /* save old value (without ENDINIT/LOCK) */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   702    NewValCon0  = (uint32)ScuWdtcon0Ptr->U & ~(uint32)MCAL_WDT_STATUS_MASK;
	ld.w	d15,[a15]
.L632:
	insert	d15,d15,#0,#0,#2
.L355:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   703  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   704    /* password check always requested */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   705    NewValCon0 &= ~MCAL_WDT_PASSWORD_MASK; /* clear out old password */
	insert	d15,d15,#0,#2,#14
.L633:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   706  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   707    /* password must match exactly the expected range! */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   708    NewValCon0 |= CheckPassword;
	or	d15,d5
.L634:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   709  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   710    /* timer check additionally requested? */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   711    if (CheckTimer <= MCAL_WDT_RELOAD_MAX)
	mov.u	d0,#65535
.L635:
	jlt.u	d0,d6,.L11
.L636:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   712    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   713      NewValCon0 &= ~MCAL_WDT_RELOAD_MASK;
	insert	d15,d15,#0,#16,#16
.L637:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   714      NewValCon0 |= CheckTimer << 16u;      /* set timer value to be checked */
	sh	d0,d6,#16
.L638:
	or	d15,d0
.L11:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   715    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   716  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   717    NewValCon0 |= 3u;       /* set LCK and ENDINIT Bit for check access */
	or	d15,#3
.L639:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   718  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   719    ScuWdtcon0Ptr->U = NewValCon0;             /* check access, no modify */
	st.w	[a15],d15
.L640:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   720  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   721  }
	ret
.L282:
	
__Mcal_lCpuCheckAccess_function_end:
	.size	Mcal_lCpuCheckAccess,__Mcal_lCpuCheckAccess_function_end-Mcal_lCpuCheckAccess
.L147:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_ResetENDINIT')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_ResetENDINIT

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   722  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   723  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   724  **                      Private Constant Definitions                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   725  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   726  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   727  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   728  **                      Global Function Definitions                           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   729  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   730  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   731  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   732  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   733  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   734  ** Traceability     : [cover parentID=SAS_NAS_MCALLIB_PR122_10 ]        [/cover]
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   735  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   736  ** Syntax           : void Mcal_ResetENDINIT(void)                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   737  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   738  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   739  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   740  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   741  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   742  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   743  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   744  ** Parameters(in)   : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   745  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   746  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   747  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   748  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   749  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   750  ** Description      : Clears the ENDINIT bit in the appropriate CPU           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   751  **                    available for CPU0, CPU1 and CPU2 watchdogs             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   752  **                    Proper password is calculated and restored on           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   753  **                    modify access disables interrupts and save current Wdt  **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   754  **                    timer reload value.                                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   755  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   756  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   757  void Mcal_ResetENDINIT( void )
; Function Mcal_ResetENDINIT
.L41:
Mcal_ResetENDINIT:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   758  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   759    uint32 CoreID;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   760    uint32 Ctr;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   761    uint32 CtrRedn;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   762  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   763    CoreID = ((uint32)MFCR(CPU_CORE_ID) & MCAL_CORE_ID_MASK);
	mfcr	d15,#65052
.L402:
	and	d8,d15,#7
.L356:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   764  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   765    /* Interrupts shall be disabled to avoid potential reentrant call and
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   766       unexpected delay during WDT timeout mode  */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   767    /* In User Mode ENDINIT APIs are called from Trap Context during runtime.
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   768       However, during Init and Deinit, the CPU is in Supervisor mode and 
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   769       registers are udpated without entering Trap context.Hence it is necessary
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   770       to enter critical section here.*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   771    Mcal_SuspendAllInterrupts();
	call	Mcal_SuspendAllInterrupts
.L403:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   772  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   773    Ctr = Mcal_ResetEndInitCounter[CoreID];
	sh	d15,d8,#2
.L404:
	movh.a	a15,#@his(Mcal_ResetEndInitCounter)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounter)
.L405:
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]
.L358:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   774    CtrRedn = (uint32)(~Mcal_ResetEndInitCounterRedn[CoreID]);
	sh	d0,d8,#2
.L406:
	movh.a	a15,#@his(Mcal_ResetEndInitCounterRedn)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounterRedn)
.L407:
	addsc.a	a15,a15,d0,#0
	ld.w	d0,[a15]
.L408:
	mov	d1,#-1
.L360:
	xor	d0,d1
.L409:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   775  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   776    /* At this point interrupts are disabled */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   777    /* Perform that the counter values are consistent */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   778    if(Ctr != CtrRedn)
	jeq	d15,d0,.L12
.L410:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   779    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   780      Mcal_SafeErrorHandler(MCAL_DIV_INCONSISTENCY);
	mov	d4,#1
	call	Mcal_SafeErrorHandler
.L12:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   781    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   782  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   783    if (Ctr == 0U)
	jne	d15,#0,.L13
.L411:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   784    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   785      Mcal_ResetCpuENDINIT((sint8)CoreID);
	mov	d4,d8
.L361:
	call	Mcal_ResetCpuENDINIT
.L13:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   786    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   787  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   788    Mcal_ResetEndInitCounter[CoreID]++;
	sh	d15,d8,#2
.L359:
	movh.a	a15,#@his(Mcal_ResetEndInitCounter)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounter)
.L412:
	addsc.a	a15,a15,d15,#0
.L413:
	sh	d15,d8,#2
.L414:
	movh.a	a2,#@his(Mcal_ResetEndInitCounter)
	lea	a2,[a2]@los(Mcal_ResetEndInitCounter)
.L415:
	addsc.a	a2,a2,d15,#0
	ld.w	d15,[a2]
.L416:
	add	d15,#1
	st.w	[a15],d15
.L417:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   789    Mcal_ResetEndInitCounterRedn[CoreID]--;
	sh	d15,d8,#2
.L418:
	movh.a	a15,#@his(Mcal_ResetEndInitCounterRedn)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounterRedn)
.L419:
	addsc.a	a15,a15,d15,#0
.L420:
	sh	d8,#2
.L357:
	movh.a	a2,#@his(Mcal_ResetEndInitCounterRedn)
	lea	a2,[a2]@los(Mcal_ResetEndInitCounterRedn)
.L421:
	addsc.a	a2,a2,d8,#0
	ld.w	d15,[a2]
.L422:
	add	d15,#-1
	st.w	[a15],d15
.L423:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   790  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   791  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   792  }
	ret
.L180:
	
__Mcal_ResetENDINIT_function_end:
	.size	Mcal_ResetENDINIT,__Mcal_ResetENDINIT_function_end-Mcal_ResetENDINIT
.L72:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_lResetSafetyENDINIT')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   793  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   794  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   795  ** Traceability     : [cover parentID=SAS_NAS_MCALLIB_PR122_12 ] [/cover]     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   796  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   797  ** Syntax           : Std_ReturnType Mcal_lResetSafetyENDINIT(void)           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   798  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   799  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   800  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   801  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   802  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   803  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   804  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   805  ** Parameters(in)   : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   806  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   807  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   808  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   809  ** Return value     : Std_ReturnType                                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   810  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   811  ** Description      : Clears the ENDINIT bit in the appropriate CPU           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   812  **                    available for global safety                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   813  **                    watchdogs Proper password is calculated and restored on **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   814  **                    modify access disables interrupts and save safety Wdt   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   815  **                    timer reload value                                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   816  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   817  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   818  static void Mcal_lResetSafetyENDINIT( void )
; Function Mcal_lResetSafetyENDINIT
.L43:
Mcal_lResetSafetyENDINIT:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   819  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   820    /* Interrupts shall be disabled to avoid potential reentrant call and
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   821     * unexpected delay during WDT timeout mode  */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   822    /* In User Mode ENDINIT APIs are called from Trap Context during runtime.
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   823       However, during Init and Deinit, the CPU is in Supervisor mode and 
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   824       registers are udpated without entering Trap context.Hence it is necessary
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   825       to enter critical section here.*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   826    Mcal_SuspendAllInterrupts();
	call	Mcal_SuspendAllInterrupts
.L661:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   827  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   828    /* At this point interrupts are disabled */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   829    /* Perform that the counter values are consistent */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   830    if( Mcal_SafetyResetEndInitCounter != (~Mcal_SafetyResetEndInitCounterRedn))
	ld.w	d15,Mcal_SafetyResetEndInitCounter
.L662:
	ld.w	d0,Mcal_SafetyResetEndInitCounterRedn
.L663:
	mov	d1,#-1
	xor	d0,d1
.L664:
	jeq	d15,d0,.L14
.L665:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   831    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   832      Mcal_SafeErrorHandler(MCAL_DIV_INCONSISTENCY);
	mov	d4,#1
	call	Mcal_SafeErrorHandler
.L14:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   833    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   834  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   835    if (Mcal_SafetyResetEndInitCounter == 0U)
	ld.w	d15,Mcal_SafetyResetEndInitCounter
.L666:
	jne	d15,#0,.L15
.L667:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   836    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   837      Mcal_ResetCpuENDINIT( -1 );
	mov	d4,#-1
	call	Mcal_ResetCpuENDINIT
.L15:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   838    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   839  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   840    Mcal_SafetyResetEndInitCounter++;
	ld.w	d15,Mcal_SafetyResetEndInitCounter
.L668:
	add	d15,#1
	st.w	Mcal_SafetyResetEndInitCounter,d15
.L669:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   841    Mcal_SafetyResetEndInitCounterRedn--;
	ld.w	d15,Mcal_SafetyResetEndInitCounterRedn
.L670:
	add	d15,#-1
	st.w	Mcal_SafetyResetEndInitCounterRedn,d15
.L671:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   842  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   843  }
	ret
.L292:
	
__Mcal_lResetSafetyENDINIT_function_end:
	.size	Mcal_lResetSafetyENDINIT,__Mcal_lResetSafetyENDINIT_function_end-Mcal_lResetSafetyENDINIT
.L157:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_SetENDINIT')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_SetENDINIT

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   844  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   845  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   846  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   847  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   848  ** Traceability     : [cover parentID=SAS_NAS_MCALLIB_PR122_9 ]        [/cover]
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   849  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   850  ** Syntax           : void Mcal_SetENDINIT(void)                              **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   851  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   852  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   853  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   854  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   855  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   856  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   857  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   858  ** Parameters(in)   : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   859  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   860  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   861  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   862  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   863  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   864  ** Description      : Sets the ENDINIT bit in the appropriate CPU             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   865  **                    available for CPU0, CPU1 and CPU2 watchdogs             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   866  **                    Proper password is calculated and restored on           **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   867  **                    modify access Enables interrupts and restores timer     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   868  **                    reload value                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   869  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   870  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   871  void Mcal_SetENDINIT( void )
; Function Mcal_SetENDINIT
.L45:
Mcal_SetENDINIT:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   872  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   873    uint32 CoreID;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   874    uint32 Ctr;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   875    uint32 CtrRedn;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   876  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   877    CoreID = ((uint32)MFCR(CPU_CORE_ID) & MCAL_CORE_ID_MASK);
	mfcr	d15,#65052
.L428:
	and	d8,d15,#7
.L362:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   878    Ctr = Mcal_ResetEndInitCounter[CoreID];
	sh	d15,d8,#2
.L429:
	movh.a	a15,#@his(Mcal_ResetEndInitCounter)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounter)
.L430:
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]
.L363:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   879    CtrRedn = (uint32)(~Mcal_ResetEndInitCounterRedn[CoreID]);
	sh	d0,d8,#2
.L431:
	movh.a	a15,#@his(Mcal_ResetEndInitCounterRedn)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounterRedn)
.L432:
	addsc.a	a15,a15,d0,#0
	ld.w	d0,[a15]
.L433:
	mov	d1,#-1
.L365:
	xor	d0,d1
.L434:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   880  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   881  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   882    if( Ctr != CtrRedn)
	jeq	d15,d0,.L16
.L435:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   883    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   884      Mcal_SafeErrorHandler(MCAL_DIV_INCONSISTENCY);
	mov	d4,#1
	call	Mcal_SafeErrorHandler
.L16:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   885  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   886    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   887  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   888  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   889    if (Mcal_ResetEndInitCounter[CoreID] > 0U)
	sh	d15,d8,#2
.L364:
	movh.a	a15,#@his(Mcal_ResetEndInitCounter)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounter)
.L436:
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]
.L437:
	jeq	d15,#0,.L17
.L438:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   890    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   891      Mcal_ResetEndInitCounter[CoreID]--;
	sh	d15,d8,#2
.L439:
	movh.a	a15,#@his(Mcal_ResetEndInitCounter)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounter)
.L440:
	addsc.a	a15,a15,d15,#0
.L441:
	sh	d15,d8,#2
.L442:
	movh.a	a2,#@his(Mcal_ResetEndInitCounter)
	lea	a2,[a2]@los(Mcal_ResetEndInitCounter)
.L443:
	addsc.a	a2,a2,d15,#0
	ld.w	d15,[a2]
.L444:
	add	d15,#-1
	st.w	[a15],d15
.L445:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   892      Mcal_ResetEndInitCounterRedn[CoreID]++;
	sh	d15,d8,#2
.L446:
	movh.a	a15,#@his(Mcal_ResetEndInitCounterRedn)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounterRedn)
.L447:
	addsc.a	a15,a15,d15,#0
.L448:
	sh	d15,d8,#2
.L449:
	movh.a	a2,#@his(Mcal_ResetEndInitCounterRedn)
	lea	a2,[a2]@los(Mcal_ResetEndInitCounterRedn)
.L450:
	addsc.a	a2,a2,d15,#0
	ld.w	d15,[a2]
.L451:
	add	d15,#1
	st.w	[a15],d15
.L17:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   893    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   894  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   895    if (Mcal_ResetEndInitCounter[CoreID] == 0U)
	sh	d15,d8,#2
.L452:
	movh.a	a15,#@his(Mcal_ResetEndInitCounter)
	lea	a15,[a15]@los(Mcal_ResetEndInitCounter)
.L453:
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]
.L454:
	jne	d15,#0,.L18
.L455:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   896    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   897      Mcal_SetCpuENDINIT( (sint8)CoreID );
	mov	d4,d8
.L366:
	call	Mcal_SetCpuENDINIT
.L18:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   898    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   899  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   900    /*  Interrupts allowed again */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   901    Mcal_ResumeAllInterrupts();
	call	Mcal_ResumeAllInterrupts
.L456:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   902  }
	ret
.L185:
	
__Mcal_SetENDINIT_function_end:
	.size	Mcal_SetENDINIT,__Mcal_SetENDINIT_function_end-Mcal_SetENDINIT
.L77:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_lSetSafetyENDINIT')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   903  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   904  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   905  ** Traceability     : [cover parentID=SAS_NAS_MCALLIB_PR122_11 ]        [/cover]
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   906  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   907  ** Syntax           : Std_ReturnType Mcal_lSetSafetyENDINIT(void)             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   908  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   909  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   910  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   911  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   912  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   913  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   914  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   915  ** Parameters(in)   : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   916  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   917  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   918  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   919  ** Return value     : Std_ReturnType                                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   920  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   921  ** Description      : Sets the ENDINIT bit in the appropriate CPU             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   922  **                    available for global safety                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   923  **                    watchdogs Proper password is calculated and restored on **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   924  **                    modify access Enables interrupts and restores timer     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   925  **                    reload value                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   926  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   927  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   928  static void Mcal_lSetSafetyENDINIT( void )
; Function Mcal_lSetSafetyENDINIT
.L47:
Mcal_lSetSafetyENDINIT:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   929  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   930  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   931    if( Mcal_SafetyResetEndInitCounter != (~Mcal_SafetyResetEndInitCounterRedn))
	ld.w	d15,Mcal_SafetyResetEndInitCounter
.L645:
	ld.w	d0,Mcal_SafetyResetEndInitCounterRedn
.L646:
	mov	d1,#-1
	xor	d0,d1
.L647:
	jeq	d15,d0,.L19
.L648:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   932    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   933      Mcal_SafeErrorHandler(MCAL_DIV_INCONSISTENCY);
	mov	d4,#1
	call	Mcal_SafeErrorHandler
.L19:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   934  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   935    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   936  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   937    if (Mcal_SafetyResetEndInitCounter > 0U)
	ld.w	d15,Mcal_SafetyResetEndInitCounter
.L649:
	jeq	d15,#0,.L20
.L650:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   938    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   939      Mcal_SafetyResetEndInitCounter--;
	ld.w	d15,Mcal_SafetyResetEndInitCounter
.L651:
	add	d15,#-1
	st.w	Mcal_SafetyResetEndInitCounter,d15
.L652:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   940      Mcal_SafetyResetEndInitCounterRedn++;
	ld.w	d15,Mcal_SafetyResetEndInitCounterRedn
.L653:
	add	d15,#1
	st.w	Mcal_SafetyResetEndInitCounterRedn,d15
.L20:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   941    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   942  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   943    if (Mcal_SafetyResetEndInitCounter == 0U)
	ld.w	d15,Mcal_SafetyResetEndInitCounter
.L654:
	jne	d15,#0,.L21
.L655:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   944    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   945      Mcal_SetCpuENDINIT( -1 );
	mov	d4,#-1
	call	Mcal_SetCpuENDINIT
.L21:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   946    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   947  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   948    /*  Interrupts allowed again */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   949    Mcal_ResumeAllInterrupts();
	call	Mcal_ResumeAllInterrupts
.L656:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   950  }
	ret
.L291:
	
__Mcal_lSetSafetyENDINIT_function_end:
	.size	Mcal_lSetSafetyENDINIT,__Mcal_lSetSafetyENDINIT_function_end-Mcal_lSetSafetyENDINIT
.L152:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_ResetSafetyENDINIT_Timed')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_ResetSafetyENDINIT_Timed

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   951  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   952  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   953  ** Syntax           : void Mcal_ResetSafetyENDINIT_Timed(uint32 TimeOut)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   954  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   955  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   956  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   957  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   958  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   959  ** Reentrancy       : Non - Reentrant                                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   960  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   961  ** Parameters(in)   : TimeOut: Count of no of times to try for SafetyEndInit  **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   962  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   963  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   964  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   965  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   966  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   967  ** Description      : This function calls the Mcal_lResetSafetyENDINIT in
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   968                        a loop (with some delay between calls) till it is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   969                        successful or max no of times given by count            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   970  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   971  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   972  void Mcal_ResetSafetyENDINIT_Timed(uint32 TimeOut)
; Function Mcal_ResetSafetyENDINIT_Timed
.L49:
Mcal_ResetSafetyENDINIT_Timed:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   973  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   974    Std_ReturnType RetVal;
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   975  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   976    RetVal = Mcal_GetSpinLock(&Mcal_WdgSafetyEndInitSem, TimeOut);
	lea	a4,Mcal_WdgSafetyEndInitSem
.L548:
	call	Mcal_GetSpinLock
.L367:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   977  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   978    if(RetVal == E_OK)
	jne	d2,#0,.L22
.L549:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   979    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   980      /* Spinlock is acquired => Mcal_WdgSafetyEndInitSem:
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   981          0->1 i.e. incremented */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   982      /* Hence, Mcal_WdgSafetyEndInitSemRedn is decremented */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   983      /* Since, the spinlock is acquired,
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   984         this variable is not updated by any other instance */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   985      Mcal_WdgSafetyEndInitSemRedn--;
	ld.w	d15,Mcal_WdgSafetyEndInitSemRedn
.L550:
	add	d15,#-1
	st.w	Mcal_WdgSafetyEndInitSemRedn,d15
.L551:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   986  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   987      if (Mcal_WdgSafetyEndInitSem != ~Mcal_WdgSafetyEndInitSemRedn)
	ld.w	d15,Mcal_WdgSafetyEndInitSem
.L552:
	ld.w	d0,Mcal_WdgSafetyEndInitSemRedn
.L553:
	mov	d1,#-1
	xor	d0,d1
.L554:
	jeq	d15,d0,.L23
.L555:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   988      {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   989        Mcal_SafeErrorHandler(MCAL_DIV_INCONSISTENCY);
	mov	d4,#1
	call	Mcal_SafeErrorHandler
.L23:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   990      }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   991  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   992      /* Nesting of disable of interrupts will happen here, but no issues */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   993      Mcal_lResetSafetyENDINIT();
	call	Mcal_lResetSafetyENDINIT
.L556:
	j	.L24
.L22:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   994    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   995    else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   996    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   997      Mcal_SafeErrorHandler(MCAL_SPINLOCK_TIMEOUT);
	mov	d4,#2
	call	Mcal_SafeErrorHandler
.L24:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   998    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	   999  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1000  }
	ret
.L245:
	
__Mcal_ResetSafetyENDINIT_Timed_function_end:
	.size	Mcal_ResetSafetyENDINIT_Timed,__Mcal_ResetSafetyENDINIT_Timed_function_end-Mcal_ResetSafetyENDINIT_Timed
.L122:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_SetSafetyENDINIT_Timed')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_SetSafetyENDINIT_Timed

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1001  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1002  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1003  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1004  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1005  ** Syntax           : void Mcal_SetSafetyENDINIT_Timed(void)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1006  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1007  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1008  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1009  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1010  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1011  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1012  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1013  ** Parameters(in)   : Count: Count of no of times to try for SafetyEndInit    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1014  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1015  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1016  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1017  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1018  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1019  ** Description      : This function calls the Mcal_lSetSafetyENDINIT in
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1020                        a loop (with some delay between calls) till it is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1021                        successful or max no of times given by count            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1022  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1023  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1024  void Mcal_SetSafetyENDINIT_Timed(void)
; Function Mcal_SetSafetyENDINIT_Timed
.L51:
Mcal_SetSafetyENDINIT_Timed:	.type	func

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1025  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1026  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1027    /* Inconsistency is checked & reported.
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1028       It is NOT expected to return from the callback */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1029    /* Incase, there is a return, proceed with normal functioning */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1030    /* At this point, interrupts are already disabled, spinlock acquired */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1031    if (Mcal_WdgSafetyEndInitSem != ~Mcal_WdgSafetyEndInitSemRedn)
	ld.w	d15,Mcal_WdgSafetyEndInitSem
.L561:
	ld.w	d0,Mcal_WdgSafetyEndInitSemRedn
.L562:
	mov	d1,#-1
	xor	d0,d1
.L563:
	jeq	d15,d0,.L25
.L564:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1032    {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1033       Mcal_SafeErrorHandler(MCAL_DIV_INCONSISTENCY);
	mov	d4,#1
	call	Mcal_SafeErrorHandler
.L25:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1034    }
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1035  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1036    Mcal_lSetSafetyENDINIT();
	call	Mcal_lSetSafetyENDINIT
.L565:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1037  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1038    /* Spinlock is still acquired. Before Spinlock is released (1->0),
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1039    Mcal_WdgSafetyEndInitSemRedn is incremented */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1040    Mcal_WdgSafetyEndInitSemRedn++;
	ld.w	d15,Mcal_WdgSafetyEndInitSemRedn
.L566:
	add	d15,#1
	st.w	Mcal_WdgSafetyEndInitSemRedn,d15
.L567:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1041    Mcal_ReleaseSpinLock(&Mcal_WdgSafetyEndInitSem);
	lea	a4,Mcal_WdgSafetyEndInitSem
	call	Mcal_ReleaseSpinLock
.L568:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1042  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1043  }
	ret
.L248:
	
__Mcal_SetSafetyENDINIT_Timed_function_end:
	.size	Mcal_SetSafetyENDINIT_Timed,__Mcal_SetSafetyENDINIT_Timed_function_end-Mcal_SetSafetyENDINIT_Timed
.L127:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_SafetyModifyAccess')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_SafetyModifyAccess

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1044  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1045  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1046  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1047  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1048  ** Syntax           : void Mcal_xxxModifyAccess                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1049  **                    (const uint32 NewPassword, const uint32 NewReload)      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1050  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1051  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1052  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1053  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1054  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1055  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1056  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1057  ** Parameters(in)   : NewPassword: new password to be set                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1058  **                      if value > MCAL_WDT_PASSWORD_MAX                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1059  **                      this value is ignored and the                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1060  **                      old password will be restored                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1061  **                    NewReload: New timer reload value to be used            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1062  **                      if value > MCAL_WDT_RELOAD_MAX this value             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1063  **                      will be ignored and the old timer value               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1064  **                      will be restored                                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1065  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1066  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1067  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1068  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1069  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1070  ** Description      : Sets the new values for Password and/or timer reload    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1071  **                    value available for CPU0, CPU1 and CPU2 and global      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1072  **                    safety watchdogs Proper password is calculated, new     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1073  **                    values restored on modify access.                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1074  **                    Disable interrupts during unlocked phase                **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1075  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1076  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1077  void Mcal_SafetyModifyAccess(const uint32 NewPassword,const uint32 NewReload )
; Function Mcal_SafetyModifyAccess
.L53:
Mcal_SafetyModifyAccess:	.type	func
	mov	d15,d4
.L370:
	mov	d6,d5
.L371:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1078  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1079    Mcal_lCpuModifyAccess( -1, NewPassword, NewReload );
	mov	d4,#-1
.L368:
	mov	d5,d15
.L369:
	call	Mcal_lCpuModifyAccess
.L372:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1080  }
	ret
.L189:
	
__Mcal_SafetyModifyAccess_function_end:
	.size	Mcal_SafetyModifyAccess,__Mcal_SafetyModifyAccess_function_end-Mcal_SafetyModifyAccess
.L82:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_CpuWdtModifyAccess')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_CpuWdtModifyAccess

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1081  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1082  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1083  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1084  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1085  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1086  ** Syntax           : void Mcal_xxxModifyAccess                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1087  **                    (const uint32 NewPassword, const uint32 NewReload)      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1088  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1089  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1090  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1091  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1092  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1093  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1094  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1095  ** Parameters(in)   : NewPassword: new password to be set                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1096  **                      if value > MCAL_WDT_PASSWORD_MAX                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1097  **                      this value is ignored and the                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1098  **                      old password will be restored                         **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1099  **                    NewReload: New timer reload value to be used            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1100  **                      if value > MCAL_WDT_RELOAD_MAX this value             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1101  **                      will be ignored and the old timer value               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1102  **                      will be restored                                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1103  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1104  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1105  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1106  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1107  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1108  ** Description      : Sets the new values for Password and/or timer reload    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1109  **                    value available for CPU0, CPU1 and CPU2 and global      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1110  **                    safety watchdogs Proper password is calculated, new     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1111  **                    values restored on modify access.                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1112  **                    Disable interrupts during unlocked phase                **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1113  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1114  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1115  void Mcal_CpuWdtModifyAccess(const uint32 NewPassword,const uint32 NewReload)
; Function Mcal_CpuWdtModifyAccess
.L55:
Mcal_CpuWdtModifyAccess:	.type	func
	mov	d0,d4
.L375:
	mov	d6,d5
.L377:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1116  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1117    uint8 CoreId = ((uint8)MFCR(CPU_CORE_ID)) & (uint8)MCAL_CORE_ID_MASK;
	mfcr	d15,#65052
.L465:
	extr.u	d15,d15,#0,#8
.L466:
	and	d4,d15,#7
.L373:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1118    Mcal_lCpuModifyAccess( (sint8)(CoreId), NewPassword, NewReload );
	mov	d5,d0
.L374:
	call	Mcal_lCpuModifyAccess
.L376:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1119  }
	ret
.L194:
	
__Mcal_CpuWdtModifyAccess_function_end:
	.size	Mcal_CpuWdtModifyAccess,__Mcal_CpuWdtModifyAccess_function_end-Mcal_CpuWdtModifyAccess
.L87:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_SafetyCheckAccess')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_SafetyCheckAccess

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1120  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1121  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1122  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1123  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1124  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1125  ** Syntax           : void Mcal_xxxCheckAccess                                **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1126  **                    (const uint32 CheckPassword, const uint32 CheckTimer)   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1127  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1128  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1129  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1130  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1131  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1132  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1133  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1134  ** Parameters(in)   : CheckPassword: Password to be used for check access     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1135  **                      this value will be checked always and must match the  **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1136  **                      required password                                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1137  **                    CheckTimer :Timer value to be checked                   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1138  **                      if value > MCAL_WDT_RELOAD_MAX this value will be     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1139  **                      not be used for timer check.                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1140  **                      the old timer value will be used for check access     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1141  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1142  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1143  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1144  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1145  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1146  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1147  ** Description      : executes check access to verify password/timer          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1148  **                    (optional) available for CPU0, CPU1 and CPU2 and global **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1149  **                    safety watchdogs Given password and timer are used on   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1150  **                    check access                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1151  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1152  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1153  void Mcal_SafetyCheckAccess(const uint32 CheckPassword,const uint32 CheckTimer)
; Function Mcal_SafetyCheckAccess
.L57:
Mcal_SafetyCheckAccess:	.type	func
	mov	d15,d4
.L380:
	mov	d6,d5
.L381:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1154  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1155      Mcal_lCpuCheckAccess( -1, CheckPassword, CheckTimer );
	mov	d4,#-1
.L378:
	mov	d5,d15
.L379:
	call	Mcal_lCpuCheckAccess
.L382:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1156  }
	ret
.L201:
	
__Mcal_SafetyCheckAccess_function_end:
	.size	Mcal_SafetyCheckAccess,__Mcal_SafetyCheckAccess_function_end-Mcal_SafetyCheckAccess
.L92:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_CpuWdtCheckAccess')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_CpuWdtCheckAccess

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1157  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1158  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1159  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1160  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1161  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1162  ** Syntax           : void Mcal_xxxCheckAccess                                **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1163  **                    (const uint32 CheckPassword, const uint32 CheckTimer)   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1164  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1165  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1166  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1167  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1168  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1169  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1170  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1171  ** Parameters(in)   : CheckPassword: Password to be used for check access     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1172  **                      this value will be checked always and must match the  **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1173  **                      required password                                     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1174  **                    CheckTimer: Timer value to be checked                   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1175  **                      if value > MCAL_WDT_RELOAD_MAX this value will be     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1176  **                      not be used for timer check.                          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1177  **                      the old timer value will be used for check access     **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1178  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1179  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1180  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1181  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1182  ** Return value     : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1183  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1184  ** Description      : executes check access to verify password/timer          **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1185  **                    (optional) available for CPU0, CPU1 and CPU2 and global **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1186  **                    safety watchdogs Given password and timer are used on   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1187  **                    check access                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1188  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1189  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1190  void Mcal_CpuWdtCheckAccess(const uint32 CheckPassword,const uint32 CheckTimer)
; Function Mcal_CpuWdtCheckAccess
.L59:
Mcal_CpuWdtCheckAccess:	.type	func
	mov	d0,d4
.L385:
	mov	d6,d5
.L387:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1191  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1192    uint8 CoreId = ((uint8)MFCR(CPU_CORE_ID)) & (uint8)MCAL_CORE_ID_MASK;
	mfcr	d15,#65052
.L475:
	extr.u	d15,d15,#0,#8
.L476:
	and	d4,d15,#7
.L383:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1193    Mcal_lCpuCheckAccess( (sint8)CoreId, CheckPassword, CheckTimer );
	mov	d5,d0
.L384:
	call	Mcal_lCpuCheckAccess
.L386:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1194  }
	ret
.L206:
	
__Mcal_CpuWdtCheckAccess_function_end:
	.size	Mcal_CpuWdtCheckAccess,__Mcal_CpuWdtCheckAccess_function_end-Mcal_CpuWdtCheckAccess
.L97:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_SafetyPwSequence')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_SafetyPwSequence

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1195  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1196  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1197  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1198  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1199  ** Syntax           : uint32 Mcal_xxxxPwSequence (const uint32 Password)      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1200  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1201  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1202  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1203  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1204  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1205  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1206  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1207  ** Parameters(in)   : Password: start password to be used for calculation of  **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1208  **                              resulting password value                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1209  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1210  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1211  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1212  ** Return value     : valid password according to password mode               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1213  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1214  ** Description      : calculates the expected next password                   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1215  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1216  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1217  uint32 Mcal_SafetyPwSequence( const uint32 Password )
; Function Mcal_SafetyPwSequence
.L61:
Mcal_SafetyPwSequence:	.type	func
	mov	d5,d4
.L389:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1218  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1219      return (Mcal_lCpuPwSequence( -1, Password) );
	mov	d4,#-1
.L388:
	call	Mcal_lCpuPwSequence
.L390:
	j	.L26

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1220  }
.L26:
	ret
.L212:
	
__Mcal_SafetyPwSequence_function_end:
	.size	Mcal_SafetyPwSequence,__Mcal_SafetyPwSequence_function_end-Mcal_SafetyPwSequence
.L102:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Mcal_CpuWdtPwSequence')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Mcal_CpuWdtPwSequence

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1221  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1222  
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1223  /*******************************************************************************
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1224  ** Traceability     : [cover parentID=]        [/cover]                       **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1225  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1226  ** Syntax           : uint32 Mcal_xxxxPwSequence (const uint32 Password)      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1227  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1228  ** Service ID       : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1229  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1230  ** Sync/Async       : Synchronous                                             **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1231  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1232  ** Reentrancy       : Reentrant                                               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1233  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1234  ** Parameters(in)   : Password: start password to be used for calculation of  **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1235  **                              resulting password value                      **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1236  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1237  ** Parameters (out) : None                                                    **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1238  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1239  ** Return value     : valid password according to password mode               **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1240  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1241  ** Description      : calculates the expected next password                   **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1242  **                                                                            **
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1243  *******************************************************************************/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1244  uint32 Mcal_CpuWdtPwSequence( const uint32 Password )
; Function Mcal_CpuWdtPwSequence
.L63:
Mcal_CpuWdtPwSequence:	.type	func
	mov	d5,d4
.L392:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1245  {
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1246    uint8 CoreId = ((uint8)MFCR(CPU_CORE_ID)) & (uint8)MCAL_CORE_ID_MASK;
	mfcr	d15,#65052
.L485:
	extr.u	d15,d15,#0,#8
.L486:
	and	d4,d15,#7
.L391:

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1247    return (Mcal_lCpuPwSequence((sint8)CoreId, Password));
	call	Mcal_lCpuPwSequence
.L393:
	j	.L27

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1248  }
.L27:
	ret
.L215:
	
__Mcal_CpuWdtPwSequence_function_end:
	.size	Mcal_CpuWdtPwSequence,__Mcal_CpuWdtPwSequence_function_end-Mcal_CpuWdtPwSequence
.L107:
	; End of function
	
	.sdecl	'.data.Shared.DEFAULT_RAM_INIT_32BIT',data,cluster('Mcal_ResetEndInitCounter')
	.sect	'.data.Shared.DEFAULT_RAM_INIT_32BIT'
	.align	4
Mcal_ResetEndInitCounter:	.type	object
	.size	Mcal_ResetEndInitCounter,12
	.space	12
	.sdecl	'.data.Shared.DEFAULT_RAM_INIT_32BIT',data,cluster('Mcal_ResetEndInitCounterRedn')
	.sect	'.data.Shared.DEFAULT_RAM_INIT_32BIT'
	.align	4
Mcal_ResetEndInitCounterRedn:	.type	object
	.size	Mcal_ResetEndInitCounterRedn,12
	.word	-1,-1,-1
	.sdecl	'.zdata.Mcal_WdgLib.Mcal_SafetyResetEndInitCounter',data,cluster('Mcal_SafetyResetEndInitCounter')
	.sect	'.zdata.Mcal_WdgLib.Mcal_SafetyResetEndInitCounter'
	.align	4
Mcal_SafetyResetEndInitCounter:	.type	object
	.size	Mcal_SafetyResetEndInitCounter,4
	.space	4
	.sdecl	'.zdata.Mcal_WdgLib.Mcal_SafetyResetEndInitCounterRedn',data,cluster('Mcal_SafetyResetEndInitCounterRedn')
	.sect	'.zdata.Mcal_WdgLib.Mcal_SafetyResetEndInitCounterRedn'
	.align	4
Mcal_SafetyResetEndInitCounterRedn:	.type	object
	.size	Mcal_SafetyResetEndInitCounterRedn,4
	.word	-1
	.sdecl	'.zdata.Mcal_WdgLib.Mcal_WdgSafetyEndInitSem',data,cluster('Mcal_WdgSafetyEndInitSem')
	.sect	'.zdata.Mcal_WdgLib.Mcal_WdgSafetyEndInitSem'
	.align	4
Mcal_WdgSafetyEndInitSem:	.type	object
	.size	Mcal_WdgSafetyEndInitSem,4
	.space	4
	.sdecl	'.zdata.Mcal_WdgLib.Mcal_WdgSafetyEndInitSemRedn',data,cluster('Mcal_WdgSafetyEndInitSemRedn')
	.sect	'.zdata.Mcal_WdgLib.Mcal_WdgSafetyEndInitSemRedn'
	.align	4
Mcal_WdgSafetyEndInitSemRedn:	.type	object
	.size	Mcal_WdgSafetyEndInitSemRedn,4
	.word	-1
	.sdecl	'.zbss.Mcal_WdgLib.Swdt_TimValue',data,cluster('Swdt_TimValue')
	.sect	'.zbss.Mcal_WdgLib.Swdt_TimValue'
	.align	4
Swdt_TimValue:	.type	object
	.size	Swdt_TimValue,4
	.space	4
	.sdecl	'.zbss.Mcal_WdgLib.Wdt0_TimValue',data,cluster('Wdt0_TimValue')
	.sect	'.zbss.Mcal_WdgLib.Wdt0_TimValue'
	.align	4
Wdt0_TimValue:	.type	object
	.size	Wdt0_TimValue,4
	.space	4
	.sdecl	'.zbss.Mcal_WdgLib.Wdt1_TimValue',data,cluster('Wdt1_TimValue')
	.sect	'.zbss.Mcal_WdgLib.Wdt1_TimValue'
	.align	4
Wdt1_TimValue:	.type	object
	.size	Wdt1_TimValue,4
	.space	4
	.sdecl	'.zbss.Mcal_WdgLib.Wdt2_TimValue',data,cluster('Wdt2_TimValue')
	.sect	'.zbss.Mcal_WdgLib.Wdt2_TimValue'
	.align	4
Wdt2_TimValue:	.type	object
	.size	Wdt2_TimValue,4
	.space	4
	.sdecl	'.rodata.Shared.DEFAULT_CONST_32BIT',data,rom,cluster('ScuWdtPtrList')
	.sect	'.rodata.Shared.DEFAULT_CONST_32BIT'
	.align	4
ScuWdtPtrList:	.type	object
	.size	ScuWdtPtrList,48
	.word	-268214032,-268214024,Swdt_TimValue,-268214016,-268214008,Wdt0_TimValue,-268214004,-268213996
	.word	Wdt1_TimValue,-268213992,-268213984,Wdt2_TimValue
	.calls	'Mcal_ResetCpuENDINIT','Mcal_lCpuPwSequence'
	.calls	'Mcal_ResetCpuENDINIT','Mcal_lCpuRelValue'
	.calls	'Mcal_SetCpuENDINIT','Mcal_lCpuPwSequence'
	.calls	'Mcal_SetCpuENDINIT','Mcal_lCpuRelValue'
	.calls	'Mcal_lCpuModifyAccess','Mcal_SuspendAllInterrupts'
	.calls	'Mcal_lCpuModifyAccess','Mcal_lCpuPwSequence'
	.calls	'Mcal_lCpuModifyAccess','Mcal_lCpuRelValue'
	.calls	'Mcal_lCpuModifyAccess','Mcal_ResumeAllInterrupts'
	.calls	'Mcal_ResetENDINIT','Mcal_SuspendAllInterrupts'
	.calls	'Mcal_ResetENDINIT','Mcal_SafeErrorHandler'
	.calls	'Mcal_ResetENDINIT','Mcal_ResetCpuENDINIT'
	.calls	'Mcal_lResetSafetyENDINIT','Mcal_SuspendAllInterrupts'
	.calls	'Mcal_lResetSafetyENDINIT','Mcal_SafeErrorHandler'
	.calls	'Mcal_lResetSafetyENDINIT','Mcal_ResetCpuENDINIT'
	.calls	'Mcal_SetENDINIT','Mcal_SafeErrorHandler'
	.calls	'Mcal_SetENDINIT','Mcal_SetCpuENDINIT'
	.calls	'Mcal_SetENDINIT','Mcal_ResumeAllInterrupts'
	.calls	'Mcal_lSetSafetyENDINIT','Mcal_SafeErrorHandler'
	.calls	'Mcal_lSetSafetyENDINIT','Mcal_SetCpuENDINIT'
	.calls	'Mcal_lSetSafetyENDINIT','Mcal_ResumeAllInterrupts'
	.calls	'Mcal_ResetSafetyENDINIT_Timed','Mcal_GetSpinLock'
	.calls	'Mcal_ResetSafetyENDINIT_Timed','Mcal_SafeErrorHandler'
	.calls	'Mcal_ResetSafetyENDINIT_Timed','Mcal_lResetSafetyENDINIT'
	.calls	'Mcal_SetSafetyENDINIT_Timed','Mcal_SafeErrorHandler'
	.calls	'Mcal_SetSafetyENDINIT_Timed','Mcal_lSetSafetyENDINIT'
	.calls	'Mcal_SetSafetyENDINIT_Timed','Mcal_ReleaseSpinLock'
	.calls	'Mcal_SafetyModifyAccess','Mcal_lCpuModifyAccess'
	.calls	'Mcal_CpuWdtModifyAccess','Mcal_lCpuModifyAccess'
	.calls	'Mcal_SafetyCheckAccess','Mcal_lCpuCheckAccess'
	.calls	'Mcal_CpuWdtCheckAccess','Mcal_lCpuCheckAccess'
	.calls	'Mcal_SafetyPwSequence','Mcal_lCpuPwSequence'
	.calls	'Mcal_CpuWdtPwSequence','Mcal_lCpuPwSequence'
	.calls	'Mcal_lCpuPwSequence','',0
	.calls	'Mcal_lCpuRelValue','',0
	.calls	'Mcal_ResetCpuENDINIT','',8
	.calls	'Mcal_SetCpuENDINIT','',8
	.calls	'Mcal_lCpuModifyAccess','',8
	.calls	'Mcal_lCpuCheckAccess','',0
	.calls	'Mcal_ResetENDINIT','',0
	.calls	'Mcal_lResetSafetyENDINIT','',0
	.calls	'Mcal_SetENDINIT','',0
	.calls	'Mcal_lSetSafetyENDINIT','',0
	.calls	'Mcal_ResetSafetyENDINIT_Timed','',0
	.calls	'Mcal_SetSafetyENDINIT_Timed','',0
	.calls	'Mcal_SafetyModifyAccess','',0
	.calls	'Mcal_CpuWdtModifyAccess','',0
	.calls	'Mcal_SafetyCheckAccess','',0
	.calls	'Mcal_CpuWdtCheckAccess','',0
	.calls	'Mcal_SafetyPwSequence','',0
	.extern	Mcal_GetSpinLock
	.extern	Mcal_ReleaseSpinLock
	.extern	Mcal_SuspendAllInterrupts
	.extern	Mcal_ResumeAllInterrupts
	.extern	Mcal_SafeErrorHandler
	.calls	'Mcal_CpuWdtPwSequence','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L65:
	.word	45906
	.half	3
	.word	.L66
	.byte	4
.L64:
	.byte	1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L67
	.byte	2
	.byte	'int',0,4,5,3
	.word	161
	.byte	4
	.byte	'__mfcr',0
	.word	168
	.byte	1,1,1,1,5
	.word	161
	.byte	0
.L199:
	.byte	2
	.byte	'unsigned char',0,1,8,6
	.byte	'Mcal_GetSpinLock',0,1,142,3,23
	.word	195
	.byte	1,1,1,1
.L181:
	.byte	2
	.byte	'unsigned long int',0,4,7
.L232:
	.byte	7
	.word	242
	.byte	8
	.byte	'SpinLckPtr',0,1,142,3,48
	.word	263
	.byte	8
	.byte	'Timeout',0,1,142,3,66
	.word	242
	.byte	0,9
	.byte	'Mcal_ReleaseSpinLock',0,1,167,3,13,1,1,1,1,8
	.byte	'SpinLckPtr',0,1,167,3,42
	.word	263
	.byte	0,10
	.byte	'Mcal_SuspendAllInterrupts',0,1,191,3,13,1,1,1,1,10
	.byte	'Mcal_ResumeAllInterrupts',0,1,215,3,13,1,1,1,1
.L190:
	.byte	11
	.word	242
.L192:
	.byte	11
	.word	242
.L195:
	.byte	11
	.word	242
.L197:
	.byte	11
	.word	242
.L202:
	.byte	11
	.word	242
.L204:
	.byte	11
	.word	242
.L207:
	.byte	11
	.word	242
.L209:
	.byte	11
	.word	242
.L213:
	.byte	11
	.word	242
.L216:
	.byte	11
	.word	242
	.byte	2
	.byte	'char',0,1,6
.L220:
	.byte	11
	.word	476
.L226:
	.byte	3
	.word	242
	.byte	12,2,213,14,9,4,2
	.byte	'unsigned int',0,4,7,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,14
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,2,215,8,16,4,2
	.byte	'unsigned int',0,4,7,15
	.byte	'ENDINIT',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'LCK',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'PW',0,4
	.word	570
	.byte	14,16,2,35,0,15
	.byte	'REL',0,4
	.word	570
	.byte	16,0,2,35,0,0,13
	.byte	'B',0,4
	.word	538
	.byte	2,35,0,0,3
	.word	494
.L228:
	.byte	7
	.word	662
	.byte	12,2,229,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,14
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,2,239,8,16,4,15
	.byte	'AE',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'OE',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'IS0',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'DS',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'TO',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'IS1',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'US',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'PAS',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'TCS',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'TCT',0,1
	.word	195
	.byte	7,0,2,35,1,2
	.byte	'unsigned short int',0,2,7,15
	.byte	'TIM',0,2
	.word	875
	.byte	16,0,2,35,2,0,13
	.byte	'B',0,4
	.word	700
	.byte	2,35,0,0,3
	.word	672
.L230:
	.byte	7
	.word	925
.L235:
	.byte	11
	.word	476
.L240:
	.byte	3
	.word	242
	.byte	9
	.byte	'Mcal_SafeErrorHandler',0,3,60,13,1,1,1,1,8
	.byte	'ErrorType',0,3,60,42
	.word	242
	.byte	0
.L250:
	.byte	11
	.word	476
.L252:
	.byte	11
	.word	242
.L260:
	.byte	11
	.word	476
.L262:
	.byte	11
	.word	242
.L267:
	.byte	11
	.word	476
.L269:
	.byte	11
	.word	242
.L271:
	.byte	11
	.word	242
.L279:
	.byte	3
	.word	242
.L283:
	.byte	11
	.word	476
.L285:
	.byte	11
	.word	242
.L287:
	.byte	11
	.word	242
	.byte	16
	.byte	'void',0,7
	.word	1049
	.byte	17
	.byte	'__prof_adm',0,4,1,1
	.word	1055
	.byte	18,1,7
	.word	1079
	.byte	17
	.byte	'__codeptr',0,4,1,1
	.word	1081
	.byte	17
	.byte	'sint8',0,5,89,29
	.word	476
	.byte	17
	.byte	'uint8',0,5,90,29
	.word	195
	.byte	17
	.byte	'uint16',0,5,92,29
	.word	875
	.byte	17
	.byte	'uint32',0,5,94,29
	.word	242
	.byte	17
	.byte	'Std_ReturnType',0,6,113,15
	.word	195
	.byte	14
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,2,45,16,4,15
	.byte	'EN0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'EN1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'EN2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'EN3',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'EN4',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'EN5',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'EN6',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'EN7',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'EN8',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'EN9',0,1
	.word	195
	.byte	1,6,2,35,1,15
	.byte	'EN10',0,1
	.word	195
	.byte	1,5,2,35,1,15
	.byte	'EN11',0,1
	.word	195
	.byte	1,4,2,35,1,15
	.byte	'EN12',0,1
	.word	195
	.byte	1,3,2,35,1,15
	.byte	'EN13',0,1
	.word	195
	.byte	1,2,2,35,1,15
	.byte	'EN14',0,1
	.word	195
	.byte	1,1,2,35,1,15
	.byte	'EN15',0,1
	.word	195
	.byte	1,0,2,35,1,15
	.byte	'EN16',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'EN17',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'EN18',0,1
	.word	195
	.byte	1,5,2,35,2,15
	.byte	'EN19',0,1
	.word	195
	.byte	1,4,2,35,2,15
	.byte	'EN20',0,1
	.word	195
	.byte	1,3,2,35,2,15
	.byte	'EN21',0,1
	.word	195
	.byte	1,2,2,35,2,15
	.byte	'EN22',0,1
	.word	195
	.byte	1,1,2,35,2,15
	.byte	'EN23',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'EN24',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'EN25',0,1
	.word	195
	.byte	1,6,2,35,3,15
	.byte	'EN26',0,1
	.word	195
	.byte	1,5,2,35,3,15
	.byte	'EN27',0,1
	.word	195
	.byte	1,4,2,35,3,15
	.byte	'EN28',0,1
	.word	195
	.byte	1,3,2,35,3,15
	.byte	'EN29',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'EN30',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'EN31',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_ACCEN0_Bits',0,2,79,3
	.word	1185
	.byte	14
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,2,82,16,4,15
	.byte	'reserved_0',0,4
	.word	500
	.byte	32,0,2,35,2,0,17
	.byte	'Ifx_SCU_ACCEN1_Bits',0,2,85,3
	.word	1742
	.byte	14
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,2,88,16,4,15
	.byte	'STM0DIS',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'STM1DIS',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'STM2DIS',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'reserved_3',0,4
	.word	500
	.byte	29,0,2,35,2,0,17
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,2,94,3
	.word	1819
	.byte	14
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,2,97,16,4,15
	.byte	'BAUD1DIV',0,1
	.word	195
	.byte	4,4,2,35,0,15
	.byte	'BAUD2DIV',0,1
	.word	195
	.byte	4,0,2,35,0,15
	.byte	'SRIDIV',0,1
	.word	195
	.byte	4,4,2,35,1,15
	.byte	'LPDIV',0,1
	.word	195
	.byte	4,0,2,35,1,15
	.byte	'SPBDIV',0,1
	.word	195
	.byte	4,4,2,35,2,15
	.byte	'FSI2DIV',0,1
	.word	195
	.byte	2,2,2,35,2,15
	.byte	'reserved_22',0,1
	.word	195
	.byte	2,0,2,35,2,15
	.byte	'FSIDIV',0,1
	.word	195
	.byte	2,6,2,35,3,15
	.byte	'reserved_26',0,1
	.word	195
	.byte	2,4,2,35,3,15
	.byte	'CLKSEL',0,1
	.word	195
	.byte	2,2,2,35,3,15
	.byte	'UP',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_CCUCON0_Bits',0,2,111,3
	.word	1955
	.byte	14
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,2,114,16,4,15
	.byte	'CANDIV',0,1
	.word	195
	.byte	4,4,2,35,0,15
	.byte	'ERAYDIV',0,1
	.word	195
	.byte	4,0,2,35,0,15
	.byte	'STMDIV',0,1
	.word	195
	.byte	4,4,2,35,1,15
	.byte	'GTMDIV',0,1
	.word	195
	.byte	4,0,2,35,1,15
	.byte	'ETHDIV',0,1
	.word	195
	.byte	4,4,2,35,2,15
	.byte	'ASCLINFDIV',0,1
	.word	195
	.byte	4,0,2,35,2,15
	.byte	'ASCLINSDIV',0,1
	.word	195
	.byte	4,4,2,35,3,15
	.byte	'INSEL',0,1
	.word	195
	.byte	2,2,2,35,3,15
	.byte	'UP',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_CCUCON1_Bits',0,2,126,3
	.word	2235
	.byte	14
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,2,129,1,16,4,15
	.byte	'BBBDIV',0,1
	.word	195
	.byte	4,4,2,35,0,15
	.byte	'reserved_4',0,4
	.word	500
	.byte	26,2,2,35,2,15
	.byte	'UP',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_CCUCON2_Bits',0,2,135,1,3
	.word	2473
	.byte	14
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,2,138,1,16,4,15
	.byte	'PLLDIV',0,1
	.word	195
	.byte	6,2,2,35,0,15
	.byte	'PLLSEL',0,1
	.word	195
	.byte	2,0,2,35,0,15
	.byte	'PLLERAYDIV',0,1
	.word	195
	.byte	6,2,2,35,1,15
	.byte	'PLLERAYSEL',0,1
	.word	195
	.byte	2,0,2,35,1,15
	.byte	'SRIDIV',0,1
	.word	195
	.byte	6,2,2,35,2,15
	.byte	'SRISEL',0,1
	.word	195
	.byte	2,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	5,3,2,35,3,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'UP',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_CCUCON3_Bits',0,2,150,1,3
	.word	2601
	.byte	14
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,2,153,1,16,4,15
	.byte	'SPBDIV',0,1
	.word	195
	.byte	6,2,2,35,0,15
	.byte	'SPBSEL',0,1
	.word	195
	.byte	2,0,2,35,0,15
	.byte	'GTMDIV',0,1
	.word	195
	.byte	6,2,2,35,1,15
	.byte	'GTMSEL',0,1
	.word	195
	.byte	2,0,2,35,1,15
	.byte	'STMDIV',0,1
	.word	195
	.byte	6,2,2,35,2,15
	.byte	'STMSEL',0,1
	.word	195
	.byte	2,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	5,3,2,35,3,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'UP',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_CCUCON4_Bits',0,2,165,1,3
	.word	2844
	.byte	14
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,2,168,1,16,4,15
	.byte	'MAXDIV',0,1
	.word	195
	.byte	4,4,2,35,0,15
	.byte	'reserved_4',0,4
	.word	500
	.byte	26,2,2,35,2,15
	.byte	'UP',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_CCUCON5_Bits',0,2,174,1,3
	.word	3079
	.byte	14
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,2,177,1,16,4,15
	.byte	'CPU0DIV',0,1
	.word	195
	.byte	6,2,2,35,0,15
	.byte	'reserved_6',0,4
	.word	500
	.byte	26,0,2,35,2,0,17
	.byte	'Ifx_SCU_CCUCON6_Bits',0,2,181,1,3
	.word	3207
	.byte	14
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,2,184,1,16,4,15
	.byte	'CPU1DIV',0,1
	.word	195
	.byte	6,2,2,35,0,15
	.byte	'reserved_6',0,4
	.word	500
	.byte	26,0,2,35,2,0,17
	.byte	'Ifx_SCU_CCUCON7_Bits',0,2,188,1,3
	.word	3307
	.byte	14
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,2,191,1,16,4,15
	.byte	'CPU2DIV',0,1
	.word	195
	.byte	6,2,2,35,0,15
	.byte	'reserved_6',0,4
	.word	500
	.byte	26,0,2,35,2,0,17
	.byte	'Ifx_SCU_CCUCON8_Bits',0,2,195,1,3
	.word	3407
	.byte	14
	.byte	'_Ifx_SCU_CHIPID_Bits',0,2,198,1,16,4,15
	.byte	'CHREV',0,1
	.word	195
	.byte	6,2,2,35,0,15
	.byte	'CHTEC',0,1
	.word	195
	.byte	2,0,2,35,0,15
	.byte	'CHID',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'EEA',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'UCODE',0,1
	.word	195
	.byte	7,0,2,35,2,15
	.byte	'FSIZE',0,1
	.word	195
	.byte	4,4,2,35,3,15
	.byte	'SP',0,1
	.word	195
	.byte	2,2,2,35,3,15
	.byte	'SEC',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'reserved_31',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_CHIPID_Bits',0,2,209,1,3
	.word	3507
	.byte	14
	.byte	'_Ifx_SCU_DTSCON_Bits',0,2,212,1,16,4,15
	.byte	'PWD',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'START',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,1
	.word	195
	.byte	2,4,2,35,0,15
	.byte	'CAL',0,4
	.word	500
	.byte	22,6,2,35,2,15
	.byte	'reserved_26',0,1
	.word	195
	.byte	5,1,2,35,3,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_DTSCON_Bits',0,2,220,1,3
	.word	3715
	.byte	14
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,2,223,1,16,4,15
	.byte	'LOWER',0,2
	.word	875
	.byte	10,6,2,35,0,15
	.byte	'reserved_10',0,1
	.word	195
	.byte	5,1,2,35,1,15
	.byte	'LLU',0,1
	.word	195
	.byte	1,0,2,35,1,15
	.byte	'UPPER',0,2
	.word	875
	.byte	10,6,2,35,2,15
	.byte	'reserved_26',0,1
	.word	195
	.byte	4,2,2,35,3,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'UOF',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_DTSLIM_Bits',0,2,232,1,3
	.word	3880
	.byte	14
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,2,235,1,16,4,15
	.byte	'RESULT',0,2
	.word	875
	.byte	10,6,2,35,0,15
	.byte	'reserved_10',0,1
	.word	195
	.byte	4,2,2,35,1,15
	.byte	'RDY',0,1
	.word	195
	.byte	1,1,2,35,1,15
	.byte	'BUSY',0,1
	.word	195
	.byte	1,0,2,35,1,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,2,242,1,3
	.word	4063
	.byte	14
	.byte	'_Ifx_SCU_EICR_Bits',0,2,245,1,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	4,4,2,35,0,15
	.byte	'EXIS0',0,1
	.word	195
	.byte	3,1,2,35,0,15
	.byte	'reserved_7',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'FEN0',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'REN0',0,1
	.word	195
	.byte	1,6,2,35,1,15
	.byte	'LDEN0',0,1
	.word	195
	.byte	1,5,2,35,1,15
	.byte	'EIEN0',0,1
	.word	195
	.byte	1,4,2,35,1,15
	.byte	'INP0',0,1
	.word	195
	.byte	3,1,2,35,1,15
	.byte	'reserved_15',0,4
	.word	500
	.byte	5,12,2,35,2,15
	.byte	'EXIS1',0,1
	.word	195
	.byte	3,1,2,35,2,15
	.byte	'reserved_23',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'FEN1',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'REN1',0,1
	.word	195
	.byte	1,6,2,35,3,15
	.byte	'LDEN1',0,1
	.word	195
	.byte	1,5,2,35,3,15
	.byte	'EIEN1',0,1
	.word	195
	.byte	1,4,2,35,3,15
	.byte	'INP1',0,1
	.word	195
	.byte	3,1,2,35,3,15
	.byte	'reserved_31',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EICR_Bits',0,2,136,2,3
	.word	4217
	.byte	14
	.byte	'_Ifx_SCU_EIFR_Bits',0,2,139,2,16,4,15
	.byte	'INTF0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'INTF1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'INTF2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'INTF3',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'INTF4',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'INTF5',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'INTF6',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'INTF7',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'reserved_8',0,4
	.word	500
	.byte	24,0,2,35,2,0,17
	.byte	'Ifx_SCU_EIFR_Bits',0,2,150,2,3
	.word	4581
	.byte	14
	.byte	'_Ifx_SCU_EMSR_Bits',0,2,153,2,16,4,15
	.byte	'POL',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'MODE',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'ENON',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'PSEL',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'reserved_4',0,2
	.word	875
	.byte	12,0,2,35,0,15
	.byte	'EMSF',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'SEMSF',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'reserved_18',0,1
	.word	195
	.byte	6,0,2,35,2,15
	.byte	'EMSFM',0,1
	.word	195
	.byte	2,6,2,35,3,15
	.byte	'SEMSFM',0,1
	.word	195
	.byte	2,4,2,35,3,15
	.byte	'reserved_28',0,1
	.word	195
	.byte	4,0,2,35,3,0,17
	.byte	'Ifx_SCU_EMSR_Bits',0,2,166,2,3
	.word	4792
	.byte	14
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,2,169,2,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	7,1,2,35,0,15
	.byte	'EDCON',0,2
	.word	875
	.byte	2,7,2,35,0,15
	.byte	'reserved_9',0,4
	.word	500
	.byte	23,0,2,35,2,0,17
	.byte	'Ifx_SCU_ESRCFG_Bits',0,2,174,2,3
	.word	5044
	.byte	14
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,2,177,2,16,4,15
	.byte	'ARI',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'ARC',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,4
	.word	500
	.byte	30,0,2,35,2,0,17
	.byte	'Ifx_SCU_ESROCFG_Bits',0,2,182,2,3
	.word	5162
	.byte	14
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,2,185,2,16,4,15
	.byte	'reserved_0',0,4
	.word	500
	.byte	28,4,2,35,2,15
	.byte	'EVR13OFF',0,1
	.word	195
	.byte	1,3,2,35,3,15
	.byte	'BPEVR13OFF',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'reserved_30',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVR13CON_Bits',0,2,192,2,3
	.word	5273
	.byte	14
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,2,195,2,16,4,15
	.byte	'reserved_0',0,4
	.word	500
	.byte	28,4,2,35,2,15
	.byte	'EVR33OFF',0,1
	.word	195
	.byte	1,3,2,35,3,15
	.byte	'BPEVR33OFF',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'reserved_30',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVR33CON_Bits',0,2,202,2,3
	.word	5436
	.byte	14
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,2,205,2,16,4,15
	.byte	'ADC13V',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'ADC33V',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'ADCSWDV',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	7,1,2,35,3,15
	.byte	'VAL',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,2,212,2,3
	.word	5599
	.byte	14
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,2,215,2,16,4,15
	.byte	'DVS13TRIM',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'reserved_8',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'DVS33TRIM',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	7,1,2,35,3,15
	.byte	'VAL',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,2,222,2,3
	.word	5757
	.byte	14
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,2,225,2,16,4,15
	.byte	'EVR13OVMOD',0,1
	.word	195
	.byte	2,6,2,35,0,15
	.byte	'reserved_2',0,1
	.word	195
	.byte	2,4,2,35,0,15
	.byte	'EVR13UVMOD',0,1
	.word	195
	.byte	2,2,2,35,0,15
	.byte	'reserved_6',0,1
	.word	195
	.byte	2,0,2,35,0,15
	.byte	'EVR33OVMOD',0,1
	.word	195
	.byte	2,6,2,35,1,15
	.byte	'reserved_10',0,1
	.word	195
	.byte	2,4,2,35,1,15
	.byte	'EVR33UVMOD',0,1
	.word	195
	.byte	2,2,2,35,1,15
	.byte	'reserved_14',0,1
	.word	195
	.byte	2,0,2,35,1,15
	.byte	'SWDOVMOD',0,1
	.word	195
	.byte	2,6,2,35,2,15
	.byte	'reserved_18',0,1
	.word	195
	.byte	2,4,2,35,2,15
	.byte	'SWDUVMOD',0,1
	.word	195
	.byte	2,2,2,35,2,15
	.byte	'reserved_22',0,2
	.word	875
	.byte	8,2,2,35,2,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'reserved_31',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,2,241,2,3
	.word	5922
	.byte	14
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,2,244,2,16,4,15
	.byte	'EVR13OVVAL',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'EVR33OVVAL',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'SWDOVVAL',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	6,2,2,35,3,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVROVMON_Bits',0,2,252,2,3
	.word	6290
	.byte	14
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,2,255,2,16,4,15
	.byte	'RST13TRIM',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'reserved_8',0,4
	.word	500
	.byte	16,8,2,35,2,15
	.byte	'RST13OFF',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'BPRST13OFF',0,1
	.word	195
	.byte	1,6,2,35,3,15
	.byte	'RST33OFF',0,1
	.word	195
	.byte	1,5,2,35,3,15
	.byte	'BPRST33OFF',0,1
	.word	195
	.byte	1,4,2,35,3,15
	.byte	'RSTSWDOFF',0,1
	.word	195
	.byte	1,3,2,35,3,15
	.byte	'BPRSTSWDOFF',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,2,139,3,3
	.word	6469
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,2,142,3,16,4,15
	.byte	'SD5P',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'SD5I',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'SD5D',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	7,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,2,149,3,3
	.word	6734
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,2,152,3,16,4,15
	.byte	'SD33P',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'SD33I',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'SD33D',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	7,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,2,159,3,3
	.word	6887
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,2,162,3,16,4,15
	.byte	'CT5REG0',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'CT5REG1',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'CT5REG2',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	7,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,2,169,3,3
	.word	7043
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,2,172,3,16,4,15
	.byte	'CT5REG3',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'CT5REG4',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	15,1,2,35,2,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,2,178,3,3
	.word	7205
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,2,181,3,16,4,15
	.byte	'CT33REG0',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'CT33REG1',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'CT33REG2',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	7,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,2,188,3,3
	.word	7348
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,2,191,3,16,4,15
	.byte	'CT33REG3',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'CT33REG4',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	15,1,2,35,2,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,2,197,3,3
	.word	7513
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,2,200,3,16,4,15
	.byte	'SDFREQSPRD',0,2
	.word	875
	.byte	16,0,2,35,0,15
	.byte	'SDFREQ',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'SDSTEP',0,1
	.word	195
	.byte	4,4,2,35,3,15
	.byte	'reserved_28',0,1
	.word	195
	.byte	2,2,2,35,3,15
	.byte	'SDSAMPLE',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,2,208,3,3
	.word	7658
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,2,211,3,16,4,15
	.byte	'DRVP',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'SDMINMAXDC',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'DRVN',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'SDLUT',0,1
	.word	195
	.byte	6,2,2,35,3,15
	.byte	'reserved_30',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,2,219,3,3
	.word	7839
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,2,222,3,16,4,15
	.byte	'SDPWMPRE',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'SDPID',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'SDVOKLVL',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	7,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,2,229,3,3
	.word	8013
	.byte	14
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,2,232,3,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'SYNCDIV',0,1
	.word	195
	.byte	3,5,2,35,1,15
	.byte	'reserved_11',0,4
	.word	500
	.byte	20,1,2,35,2,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,2,238,3,3
	.word	8173
	.byte	14
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,2,241,3,16,4,15
	.byte	'EVR13',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'OV13',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'EVR33',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'OV33',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'OVSWD',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'UV13',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'UV33',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'UVSWD',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'EXTPASS13',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'EXTPASS33',0,1
	.word	195
	.byte	1,6,2,35,1,15
	.byte	'BGPROK',0,1
	.word	195
	.byte	1,5,2,35,1,15
	.byte	'reserved_11',0,4
	.word	500
	.byte	21,0,2,35,2,0,17
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,2,255,3,3
	.word	8317
	.byte	14
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,2,130,4,16,4,15
	.byte	'EVR13TRIM',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'SDVOUTSEL',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	14,2,2,35,2,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,2,137,4,3
	.word	8591
	.byte	14
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,2,140,4,16,4,15
	.byte	'EVR13UVVAL',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'EVR33UVVAL',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'SWDUVVAL',0,1
	.word	195
	.byte	8,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	6,2,2,35,3,15
	.byte	'SLCK',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,2,148,4,3
	.word	8746
	.byte	14
	.byte	'_Ifx_SCU_EXTCON_Bits',0,2,151,4,16,4,15
	.byte	'EN0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'reserved_1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'SEL0',0,1
	.word	195
	.byte	4,2,2,35,0,15
	.byte	'reserved_6',0,2
	.word	875
	.byte	10,0,2,35,0,15
	.byte	'EN1',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'NSEL',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'SEL1',0,1
	.word	195
	.byte	4,2,2,35,2,15
	.byte	'reserved_22',0,1
	.word	195
	.byte	2,0,2,35,2,15
	.byte	'DIV1',0,1
	.word	195
	.byte	8,0,2,35,3,0,17
	.byte	'Ifx_SCU_EXTCON_Bits',0,2,162,4,3
	.word	8925
	.byte	14
	.byte	'_Ifx_SCU_FDR_Bits',0,2,165,4,16,4,15
	.byte	'STEP',0,2
	.word	875
	.byte	10,6,2,35,0,15
	.byte	'reserved_10',0,1
	.word	195
	.byte	4,2,2,35,1,15
	.byte	'DM',0,1
	.word	195
	.byte	2,0,2,35,1,15
	.byte	'RESULT',0,2
	.word	875
	.byte	10,6,2,35,2,15
	.byte	'reserved_26',0,1
	.word	195
	.byte	5,1,2,35,3,15
	.byte	'DISCLK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_FDR_Bits',0,2,173,4,3
	.word	9143
	.byte	14
	.byte	'_Ifx_SCU_FMR_Bits',0,2,176,4,16,4,15
	.byte	'FS0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'FS1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'FS2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'FS3',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'FS4',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'FS5',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'FS6',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'FS7',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'reserved_8',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'FC0',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'FC1',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'FC2',0,1
	.word	195
	.byte	1,5,2,35,2,15
	.byte	'FC3',0,1
	.word	195
	.byte	1,4,2,35,2,15
	.byte	'FC4',0,1
	.word	195
	.byte	1,3,2,35,2,15
	.byte	'FC5',0,1
	.word	195
	.byte	1,2,2,35,2,15
	.byte	'FC6',0,1
	.word	195
	.byte	1,1,2,35,2,15
	.byte	'FC7',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	8,0,2,35,3,0,17
	.byte	'Ifx_SCU_FMR_Bits',0,2,196,4,3
	.word	9306
	.byte	14
	.byte	'_Ifx_SCU_ID_Bits',0,2,199,4,16,4,15
	.byte	'MODREV',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'MODTYPE',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'MODNUMBER',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_ID_Bits',0,2,204,4,3
	.word	9642
	.byte	14
	.byte	'_Ifx_SCU_IGCR_Bits',0,2,207,4,16,4,15
	.byte	'IPEN00',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'IPEN01',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'IPEN02',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'IPEN03',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'IPEN04',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'IPEN05',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'IPEN06',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'IPEN07',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'reserved_8',0,1
	.word	195
	.byte	5,3,2,35,1,15
	.byte	'GEEN0',0,1
	.word	195
	.byte	1,2,2,35,1,15
	.byte	'IGP0',0,1
	.word	195
	.byte	2,0,2,35,1,15
	.byte	'IPEN10',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'IPEN11',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'IPEN12',0,1
	.word	195
	.byte	1,5,2,35,2,15
	.byte	'IPEN13',0,1
	.word	195
	.byte	1,4,2,35,2,15
	.byte	'IPEN14',0,1
	.word	195
	.byte	1,3,2,35,2,15
	.byte	'IPEN15',0,1
	.word	195
	.byte	1,2,2,35,2,15
	.byte	'IPEN16',0,1
	.word	195
	.byte	1,1,2,35,2,15
	.byte	'IPEN17',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	5,3,2,35,3,15
	.byte	'GEEN1',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'IGP1',0,1
	.word	195
	.byte	2,0,2,35,3,0,17
	.byte	'Ifx_SCU_IGCR_Bits',0,2,231,4,3
	.word	9749
	.byte	14
	.byte	'_Ifx_SCU_IN_Bits',0,2,234,4,16,4,15
	.byte	'P0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'P1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,4
	.word	500
	.byte	30,0,2,35,2,0,17
	.byte	'Ifx_SCU_IN_Bits',0,2,239,4,3
	.word	10201
	.byte	14
	.byte	'_Ifx_SCU_IOCR_Bits',0,2,242,4,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	4,4,2,35,0,15
	.byte	'PC0',0,1
	.word	195
	.byte	4,0,2,35,0,15
	.byte	'reserved_8',0,1
	.word	195
	.byte	4,4,2,35,1,15
	.byte	'PC1',0,1
	.word	195
	.byte	4,0,2,35,1,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_IOCR_Bits',0,2,249,4,3
	.word	10300
	.byte	14
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,2,252,4,16,4,15
	.byte	'LBISTREQ',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'LBISTREQP',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'PATTERNS',0,2
	.word	875
	.byte	14,0,2,35,0,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,2,130,5,3
	.word	10450
	.byte	14
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,2,133,5,16,4,15
	.byte	'SEED',0,4
	.word	500
	.byte	23,9,2,35,2,15
	.byte	'reserved_23',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'SPLITSH',0,1
	.word	195
	.byte	3,5,2,35,3,15
	.byte	'BODY',0,1
	.word	195
	.byte	1,4,2,35,3,15
	.byte	'LBISTFREQU',0,1
	.word	195
	.byte	4,0,2,35,3,0,17
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,2,140,5,3
	.word	10599
	.byte	14
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,2,143,5,16,4,15
	.byte	'SIGNATURE',0,4
	.word	500
	.byte	24,8,2,35,2,15
	.byte	'reserved_24',0,1
	.word	195
	.byte	7,1,2,35,3,15
	.byte	'LBISTDONE',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,2,148,5,3
	.word	10760
	.byte	14
	.byte	'_Ifx_SCU_LCLCON_Bits',0,2,151,5,16,4,15
	.byte	'reserved_0',0,2
	.word	875
	.byte	16,0,2,35,0,15
	.byte	'LS',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'reserved_17',0,2
	.word	875
	.byte	14,1,2,35,2,15
	.byte	'LSEN',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_LCLCON_Bits',0,2,157,5,3
	.word	10890
	.byte	14
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,2,160,5,16,4,15
	.byte	'LCLT0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'LCLT1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,4
	.word	500
	.byte	30,0,2,35,2,0,17
	.byte	'Ifx_SCU_LCLTEST_Bits',0,2,165,5,3
	.word	11022
	.byte	14
	.byte	'_Ifx_SCU_MANID_Bits',0,2,168,5,16,4,15
	.byte	'DEPT',0,1
	.word	195
	.byte	5,3,2,35,0,15
	.byte	'MANUF',0,2
	.word	875
	.byte	11,0,2,35,0,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_MANID_Bits',0,2,173,5,3
	.word	11137
	.byte	14
	.byte	'_Ifx_SCU_OMR_Bits',0,2,176,5,16,4,15
	.byte	'PS0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'PS1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,2
	.word	875
	.byte	14,0,2,35,0,15
	.byte	'PCL0',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'PCL1',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'reserved_18',0,2
	.word	875
	.byte	14,0,2,35,2,0,17
	.byte	'Ifx_SCU_OMR_Bits',0,2,184,5,3
	.word	11248
	.byte	14
	.byte	'_Ifx_SCU_OSCCON_Bits',0,2,187,5,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'PLLLV',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'OSCRES',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'GAINSEL',0,1
	.word	195
	.byte	2,3,2,35,0,15
	.byte	'MODE',0,1
	.word	195
	.byte	2,1,2,35,0,15
	.byte	'SHBY',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'PLLHV',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'reserved_9',0,1
	.word	195
	.byte	1,6,2,35,1,15
	.byte	'X1D',0,1
	.word	195
	.byte	1,5,2,35,1,15
	.byte	'X1DEN',0,1
	.word	195
	.byte	1,4,2,35,1,15
	.byte	'reserved_12',0,1
	.word	195
	.byte	4,0,2,35,1,15
	.byte	'OSCVAL',0,1
	.word	195
	.byte	5,3,2,35,2,15
	.byte	'reserved_21',0,1
	.word	195
	.byte	2,1,2,35,2,15
	.byte	'APREN',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'CAP0EN',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'CAP1EN',0,1
	.word	195
	.byte	1,6,2,35,3,15
	.byte	'CAP2EN',0,1
	.word	195
	.byte	1,5,2,35,3,15
	.byte	'CAP3EN',0,1
	.word	195
	.byte	1,4,2,35,3,15
	.byte	'reserved_28',0,1
	.word	195
	.byte	4,0,2,35,3,0,17
	.byte	'Ifx_SCU_OSCCON_Bits',0,2,208,5,3
	.word	11406
	.byte	14
	.byte	'_Ifx_SCU_OUT_Bits',0,2,211,5,16,4,15
	.byte	'P0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'P1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,4
	.word	500
	.byte	30,0,2,35,2,0,17
	.byte	'Ifx_SCU_OUT_Bits',0,2,216,5,3
	.word	11818
	.byte	14
	.byte	'_Ifx_SCU_OVCCON_Bits',0,2,219,5,16,4,15
	.byte	'CSEL0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'CSEL1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'CSEL2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'reserved_3',0,2
	.word	875
	.byte	13,0,2,35,0,15
	.byte	'OVSTRT',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'OVSTP',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'DCINVAL',0,1
	.word	195
	.byte	1,5,2,35,2,15
	.byte	'reserved_19',0,1
	.word	195
	.byte	5,0,2,35,2,15
	.byte	'OVCONF',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'POVCONF',0,1
	.word	195
	.byte	1,6,2,35,3,15
	.byte	'reserved_26',0,1
	.word	195
	.byte	6,0,2,35,3,0,17
	.byte	'Ifx_SCU_OVCCON_Bits',0,2,232,5,3
	.word	11919
	.byte	14
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,2,235,5,16,4,15
	.byte	'OVEN0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'OVEN1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'OVEN2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'reserved_3',0,4
	.word	500
	.byte	29,0,2,35,2,0,17
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,2,241,5,3
	.word	12186
	.byte	14
	.byte	'_Ifx_SCU_PDISC_Bits',0,2,244,5,16,4,15
	.byte	'PDIS0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'PDIS1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,4
	.word	500
	.byte	30,0,2,35,2,0,17
	.byte	'Ifx_SCU_PDISC_Bits',0,2,249,5,3
	.word	12322
	.byte	14
	.byte	'_Ifx_SCU_PDR_Bits',0,2,252,5,16,4,15
	.byte	'PD0',0,1
	.word	195
	.byte	3,5,2,35,0,15
	.byte	'PL0',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'PD1',0,1
	.word	195
	.byte	3,1,2,35,0,15
	.byte	'PL1',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'reserved_8',0,4
	.word	500
	.byte	24,0,2,35,2,0,17
	.byte	'Ifx_SCU_PDR_Bits',0,2,131,6,3
	.word	12433
	.byte	14
	.byte	'_Ifx_SCU_PDRR_Bits',0,2,134,6,16,4,15
	.byte	'PDR0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'PDR1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'PDR2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'PDR3',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'PDR4',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'PDR5',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'PDR6',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'PDR7',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'reserved_8',0,4
	.word	500
	.byte	24,0,2,35,2,0,17
	.byte	'Ifx_SCU_PDRR_Bits',0,2,145,6,3
	.word	12566
	.byte	14
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,2,148,6,16,4,15
	.byte	'VCOBYP',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'VCOPWD',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'MODEN',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'reserved_3',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'SETFINDIS',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'CLRFINDIS',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'OSCDISCDIS',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'reserved_7',0,2
	.word	875
	.byte	2,7,2,35,0,15
	.byte	'NDIV',0,1
	.word	195
	.byte	7,0,2,35,1,15
	.byte	'PLLPWD',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'reserved_17',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'RESLD',0,1
	.word	195
	.byte	1,5,2,35,2,15
	.byte	'reserved_19',0,1
	.word	195
	.byte	5,0,2,35,2,15
	.byte	'PDIV',0,1
	.word	195
	.byte	4,4,2,35,3,15
	.byte	'reserved_28',0,1
	.word	195
	.byte	4,0,2,35,3,0,17
	.byte	'Ifx_SCU_PLLCON0_Bits',0,2,165,6,3
	.word	12769
	.byte	14
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,2,168,6,16,4,15
	.byte	'K2DIV',0,1
	.word	195
	.byte	7,1,2,35,0,15
	.byte	'reserved_7',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'K3DIV',0,1
	.word	195
	.byte	7,1,2,35,1,15
	.byte	'reserved_15',0,1
	.word	195
	.byte	1,0,2,35,1,15
	.byte	'K1DIV',0,1
	.word	195
	.byte	7,1,2,35,2,15
	.byte	'reserved_23',0,2
	.word	875
	.byte	9,0,2,35,2,0,17
	.byte	'Ifx_SCU_PLLCON1_Bits',0,2,176,6,3
	.word	13125
	.byte	14
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,2,179,6,16,4,15
	.byte	'MODCFG',0,2
	.word	875
	.byte	16,0,2,35,0,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_PLLCON2_Bits',0,2,183,6,3
	.word	13303
	.byte	14
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,2,186,6,16,4,15
	.byte	'VCOBYP',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'VCOPWD',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,1
	.word	195
	.byte	2,4,2,35,0,15
	.byte	'SETFINDIS',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'CLRFINDIS',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'OSCDISCDIS',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'reserved_7',0,2
	.word	875
	.byte	2,7,2,35,0,15
	.byte	'NDIV',0,1
	.word	195
	.byte	5,2,2,35,1,15
	.byte	'reserved_14',0,1
	.word	195
	.byte	2,0,2,35,1,15
	.byte	'PLLPWD',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'reserved_17',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'RESLD',0,1
	.word	195
	.byte	1,5,2,35,2,15
	.byte	'reserved_19',0,1
	.word	195
	.byte	5,0,2,35,2,15
	.byte	'PDIV',0,1
	.word	195
	.byte	4,4,2,35,3,15
	.byte	'reserved_28',0,1
	.word	195
	.byte	4,0,2,35,3,0,17
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,2,203,6,3
	.word	13403
	.byte	14
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,2,206,6,16,4,15
	.byte	'K2DIV',0,1
	.word	195
	.byte	7,1,2,35,0,15
	.byte	'reserved_7',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'K3DIV',0,1
	.word	195
	.byte	4,4,2,35,1,15
	.byte	'reserved_12',0,1
	.word	195
	.byte	4,0,2,35,1,15
	.byte	'K1DIV',0,1
	.word	195
	.byte	7,1,2,35,2,15
	.byte	'reserved_23',0,2
	.word	875
	.byte	9,0,2,35,2,0,17
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,2,214,6,3
	.word	13773
	.byte	14
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,2,217,6,16,4,15
	.byte	'VCOBYST',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'PWDSTAT',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'VCOLOCK',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'FINDIS',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'K1RDY',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'K2RDY',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'reserved_6',0,4
	.word	500
	.byte	26,0,2,35,2,0,17
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,2,226,6,3
	.word	13959
	.byte	14
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,2,229,6,16,4,15
	.byte	'VCOBYST',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'reserved_1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'VCOLOCK',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'FINDIS',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'K1RDY',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'K2RDY',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'reserved_6',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'MODRUN',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'reserved_8',0,4
	.word	500
	.byte	24,0,2,35,2,0,17
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,2,240,6,3
	.word	14157
	.byte	14
	.byte	'_Ifx_SCU_PMCSR_Bits',0,2,243,6,16,4,15
	.byte	'REQSLP',0,1
	.word	195
	.byte	2,6,2,35,0,15
	.byte	'SMUSLP',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'reserved_3',0,1
	.word	195
	.byte	5,0,2,35,0,15
	.byte	'PMST',0,1
	.word	195
	.byte	3,5,2,35,1,15
	.byte	'reserved_11',0,4
	.word	500
	.byte	21,0,2,35,2,0,17
	.byte	'Ifx_SCU_PMCSR_Bits',0,2,250,6,3
	.word	14390
	.byte	14
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,2,253,6,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'ESR1WKEN',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'PINAWKEN',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'PINBWKEN',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'ESR0DFEN',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'ESR0EDCON',0,1
	.word	195
	.byte	2,1,2,35,0,15
	.byte	'ESR1DFEN',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'ESR1EDCON',0,1
	.word	195
	.byte	2,6,2,35,1,15
	.byte	'PINADFEN',0,1
	.word	195
	.byte	1,5,2,35,1,15
	.byte	'PINAEDCON',0,1
	.word	195
	.byte	2,3,2,35,1,15
	.byte	'PINBDFEN',0,1
	.word	195
	.byte	1,2,2,35,1,15
	.byte	'PINBEDCON',0,1
	.word	195
	.byte	2,0,2,35,1,15
	.byte	'reserved_16',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'STBYRAMSEL',0,1
	.word	195
	.byte	2,5,2,35,2,15
	.byte	'reserved_19',0,1
	.word	195
	.byte	2,3,2,35,2,15
	.byte	'TRISTEN',0,1
	.word	195
	.byte	1,2,2,35,2,15
	.byte	'TRISTREQ',0,1
	.word	195
	.byte	1,1,2,35,2,15
	.byte	'PORSTDF',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'PWRWKEN',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'DCDCSYNC',0,1
	.word	195
	.byte	1,6,2,35,3,15
	.byte	'BLNKFIL',0,1
	.word	195
	.byte	3,3,2,35,3,15
	.byte	'ESR0TRIST',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'reserved_30',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'LCK',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,2,151,7,3
	.word	14542
	.byte	14
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,2,154,7,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'CPUIDLSEL',0,1
	.word	195
	.byte	3,5,2,35,1,15
	.byte	'reserved_11',0,1
	.word	195
	.byte	1,4,2,35,1,15
	.byte	'IRADIS',0,1
	.word	195
	.byte	1,3,2,35,1,15
	.byte	'reserved_13',0,4
	.word	500
	.byte	11,8,2,35,2,15
	.byte	'CPUSEL',0,1
	.word	195
	.byte	3,5,2,35,3,15
	.byte	'STBYEVEN',0,1
	.word	195
	.byte	1,4,2,35,3,15
	.byte	'STBYEV',0,1
	.word	195
	.byte	3,1,2,35,3,15
	.byte	'reserved_31',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,2,165,7,3
	.word	15090
	.byte	14
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,2,168,7,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	2,6,2,35,0,15
	.byte	'ESR1WKP',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'ESR1OVRUN',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'PINAWKP',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'PINAOVRUN',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'PINBWKP',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'PINBOVRUN',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'PWRWKP',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'PORSTDF',0,1
	.word	195
	.byte	1,6,2,35,1,15
	.byte	'HWCFGEVR',0,1
	.word	195
	.byte	3,3,2,35,1,15
	.byte	'STBYRAM',0,1
	.word	195
	.byte	2,1,2,35,1,15
	.byte	'TRIST',0,1
	.word	195
	.byte	1,0,2,35,1,15
	.byte	'reserved_16',0,1
	.word	195
	.byte	4,4,2,35,2,15
	.byte	'ESR1WKEN',0,1
	.word	195
	.byte	1,3,2,35,2,15
	.byte	'PINAWKEN',0,1
	.word	195
	.byte	1,2,2,35,2,15
	.byte	'PINBWKEN',0,1
	.word	195
	.byte	1,1,2,35,2,15
	.byte	'PWRWKEN',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'BLNKFIL',0,1
	.word	195
	.byte	3,5,2,35,3,15
	.byte	'ESR0TRIST',0,1
	.word	195
	.byte	1,4,2,35,3,15
	.byte	'reserved_28',0,1
	.word	195
	.byte	4,0,2,35,3,0,17
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,2,190,7,3
	.word	15335
	.byte	14
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,2,193,7,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	2,6,2,35,0,15
	.byte	'ESR1WKPCLR',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'ESR1OVRUNCLR',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'PINAWKPCLR',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'PINAOVRUNCLR',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'PINBWKPCLR',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'PINBOVRUNCLR',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'PWRWKPCLR',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'reserved_9',0,4
	.word	500
	.byte	23,0,2,35,2,0,17
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,2,204,7,3
	.word	15796
	.byte	14
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,2,207,7,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'CLRC',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,2
	.word	875
	.byte	10,4,2,35,0,15
	.byte	'CSS0',0,1
	.word	195
	.byte	1,3,2,35,1,15
	.byte	'CSS1',0,1
	.word	195
	.byte	1,2,2,35,1,15
	.byte	'CSS2',0,1
	.word	195
	.byte	1,1,2,35,1,15
	.byte	'reserved_15',0,1
	.word	195
	.byte	1,0,2,35,1,15
	.byte	'USRINFO',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_RSTCON2_Bits',0,2,217,7,3
	.word	16066
	.byte	14
	.byte	'_Ifx_SCU_RSTCON_Bits',0,2,220,7,16,4,15
	.byte	'ESR0',0,1
	.word	195
	.byte	2,6,2,35,0,15
	.byte	'ESR1',0,1
	.word	195
	.byte	2,4,2,35,0,15
	.byte	'reserved_4',0,1
	.word	195
	.byte	2,2,2,35,0,15
	.byte	'SMU',0,1
	.word	195
	.byte	2,0,2,35,0,15
	.byte	'SW',0,1
	.word	195
	.byte	2,6,2,35,1,15
	.byte	'STM0',0,1
	.word	195
	.byte	2,4,2,35,1,15
	.byte	'STM1',0,1
	.word	195
	.byte	2,2,2,35,1,15
	.byte	'STM2',0,1
	.word	195
	.byte	2,0,2,35,1,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_RSTCON_Bits',0,2,231,7,3
	.word	16275
	.byte	14
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,2,234,7,16,4,15
	.byte	'ESR0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'ESR1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'SMU',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'SW',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'STM0',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'STM1',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'STM2',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'reserved_8',0,1
	.word	195
	.byte	8,0,2,35,1,15
	.byte	'PORST',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'reserved_17',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'CB0',0,1
	.word	195
	.byte	1,5,2,35,2,15
	.byte	'CB1',0,1
	.word	195
	.byte	1,4,2,35,2,15
	.byte	'CB3',0,1
	.word	195
	.byte	1,3,2,35,2,15
	.byte	'reserved_21',0,1
	.word	195
	.byte	2,1,2,35,2,15
	.byte	'EVR13',0,1
	.word	195
	.byte	1,0,2,35,2,15
	.byte	'EVR33',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'SWD',0,1
	.word	195
	.byte	1,6,2,35,3,15
	.byte	'reserved_26',0,1
	.word	195
	.byte	2,4,2,35,3,15
	.byte	'STBYR',0,1
	.word	195
	.byte	1,3,2,35,3,15
	.byte	'reserved_29',0,1
	.word	195
	.byte	3,0,2,35,3,0,17
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,2,129,8,3
	.word	16486
	.byte	14
	.byte	'_Ifx_SCU_SAFECON_Bits',0,2,132,8,16,4,15
	.byte	'HBT',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'reserved_1',0,4
	.word	500
	.byte	31,0,2,35,2,0,17
	.byte	'Ifx_SCU_SAFECON_Bits',0,2,136,8,3
	.word	16918
	.byte	14
	.byte	'_Ifx_SCU_STSTAT_Bits',0,2,139,8,16,4,15
	.byte	'HWCFG',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'FTM',0,1
	.word	195
	.byte	7,1,2,35,1,15
	.byte	'MODE',0,1
	.word	195
	.byte	1,0,2,35,1,15
	.byte	'reserved_16',0,1
	.word	195
	.byte	1,7,2,35,2,15
	.byte	'LUDIS',0,1
	.word	195
	.byte	1,6,2,35,2,15
	.byte	'reserved_18',0,1
	.word	195
	.byte	1,5,2,35,2,15
	.byte	'TRSTL',0,1
	.word	195
	.byte	1,4,2,35,2,15
	.byte	'SPDEN',0,1
	.word	195
	.byte	1,3,2,35,2,15
	.byte	'reserved_21',0,1
	.word	195
	.byte	3,0,2,35,2,15
	.byte	'RAMINT',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'reserved_25',0,1
	.word	195
	.byte	7,0,2,35,3,0,17
	.byte	'Ifx_SCU_STSTAT_Bits',0,2,152,8,3
	.word	17014
	.byte	14
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,2,155,8,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'SWRSTREQ',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,4
	.word	500
	.byte	30,0,2,35,2,0,17
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,2,160,8,3
	.word	17280
	.byte	14
	.byte	'_Ifx_SCU_SYSCON_Bits',0,2,163,8,16,4,15
	.byte	'CCTRIG0',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'reserved_1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'RAMINTM',0,1
	.word	195
	.byte	2,4,2,35,0,15
	.byte	'SETLUDIS',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'reserved_5',0,1
	.word	195
	.byte	3,0,2,35,0,15
	.byte	'DATM',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'reserved_9',0,4
	.word	500
	.byte	23,0,2,35,2,0,17
	.byte	'Ifx_SCU_SYSCON_Bits',0,2,172,8,3
	.word	17405
	.byte	14
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,2,175,8,16,4,15
	.byte	'ESR0T',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'ESR1T',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'SMUT',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'reserved_4',0,4
	.word	500
	.byte	28,0,2,35,2,0,17
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,2,182,8,3
	.word	17602
	.byte	14
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,2,185,8,16,4,15
	.byte	'ESR0T',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'ESR1T',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'SMUT',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'reserved_4',0,4
	.word	500
	.byte	28,0,2,35,2,0,17
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,2,192,8,3
	.word	17755
	.byte	14
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,2,195,8,16,4,15
	.byte	'ESR0T',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'ESR1T',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'SMUT',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'reserved_4',0,4
	.word	500
	.byte	28,0,2,35,2,0,17
	.byte	'Ifx_SCU_TRAPSET_Bits',0,2,202,8,3
	.word	17908
	.byte	14
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,2,205,8,16,4,15
	.byte	'ESR0T',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'ESR1T',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'reserved_2',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'SMUT',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'reserved_4',0,4
	.word	500
	.byte	28,0,2,35,2,0,17
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,2,212,8,3
	.word	18061
	.byte	17
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,2,221,8,3
	.word	538
	.byte	14
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,2,224,8,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	2,6,2,35,0,15
	.byte	'IR0',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'DR',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'reserved_4',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'IR1',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'UR',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'PAR',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'TCR',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'TCTR',0,1
	.word	195
	.byte	7,0,2,35,1,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,2,236,8,3
	.word	18250
	.byte	17
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,2,252,8,3
	.word	700
	.byte	14
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,2,255,8,16,4,15
	.byte	'ENDINIT',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'LCK',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'PW',0,4
	.word	570
	.byte	14,16,2,35,0,15
	.byte	'REL',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,2,133,9,3
	.word	18520
	.byte	14
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,2,136,9,16,4,15
	.byte	'CLRIRF',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'reserved_1',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'IR0',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'DR',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'reserved_4',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'IR1',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'UR',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'PAR',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'TCR',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'TCTR',0,1
	.word	195
	.byte	7,0,2,35,1,15
	.byte	'reserved_16',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,2,149,9,3
	.word	18646
	.byte	14
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,2,152,9,16,4,15
	.byte	'AE',0,1
	.word	195
	.byte	1,7,2,35,0,15
	.byte	'OE',0,1
	.word	195
	.byte	1,6,2,35,0,15
	.byte	'IS0',0,1
	.word	195
	.byte	1,5,2,35,0,15
	.byte	'DS',0,1
	.word	195
	.byte	1,4,2,35,0,15
	.byte	'TO',0,1
	.word	195
	.byte	1,3,2,35,0,15
	.byte	'IS1',0,1
	.word	195
	.byte	1,2,2,35,0,15
	.byte	'US',0,1
	.word	195
	.byte	1,1,2,35,0,15
	.byte	'PAS',0,1
	.word	195
	.byte	1,0,2,35,0,15
	.byte	'TCS',0,1
	.word	195
	.byte	1,7,2,35,1,15
	.byte	'TCT',0,1
	.word	195
	.byte	7,0,2,35,1,15
	.byte	'TIM',0,2
	.word	875
	.byte	16,0,2,35,2,0,17
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,2,165,9,3
	.word	18898
	.byte	12,2,173,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	1185
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_ACCEN0',0,2,178,9,3
	.word	19117
	.byte	12,2,181,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	1742
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_ACCEN1',0,2,186,9,3
	.word	19181
	.byte	12,2,189,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	1819
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_ARSTDIS',0,2,194,9,3
	.word	19245
	.byte	12,2,197,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	1955
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON0',0,2,202,9,3
	.word	19310
	.byte	12,2,205,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	2235
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON1',0,2,210,9,3
	.word	19375
	.byte	12,2,213,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	2473
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON2',0,2,218,9,3
	.word	19440
	.byte	12,2,221,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	2601
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON3',0,2,226,9,3
	.word	19505
	.byte	12,2,229,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	2844
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON4',0,2,234,9,3
	.word	19570
	.byte	12,2,237,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	3079
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON5',0,2,242,9,3
	.word	19635
	.byte	12,2,245,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	3207
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON6',0,2,250,9,3
	.word	19700
	.byte	12,2,253,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	3307
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON7',0,2,130,10,3
	.word	19765
	.byte	12,2,133,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	3407
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CCUCON8',0,2,138,10,3
	.word	19830
	.byte	12,2,141,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	3507
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_CHIPID',0,2,146,10,3
	.word	19895
	.byte	12,2,149,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	3715
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_DTSCON',0,2,154,10,3
	.word	19959
	.byte	12,2,157,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	3880
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_DTSLIM',0,2,162,10,3
	.word	20023
	.byte	12,2,165,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	4063
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_DTSSTAT',0,2,170,10,3
	.word	20087
	.byte	12,2,173,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	4217
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EICR',0,2,178,10,3
	.word	20152
	.byte	12,2,181,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	4581
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EIFR',0,2,186,10,3
	.word	20214
	.byte	12,2,189,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	4792
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EMSR',0,2,194,10,3
	.word	20276
	.byte	12,2,197,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	5044
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_ESRCFG',0,2,202,10,3
	.word	20338
	.byte	12,2,205,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	5162
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_ESROCFG',0,2,210,10,3
	.word	20402
	.byte	12,2,213,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	5273
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVR13CON',0,2,218,10,3
	.word	20467
	.byte	12,2,221,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	5436
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVR33CON',0,2,226,10,3
	.word	20533
	.byte	12,2,229,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	5599
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRADCSTAT',0,2,234,10,3
	.word	20599
	.byte	12,2,237,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	5757
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRDVSTAT',0,2,242,10,3
	.word	20667
	.byte	12,2,245,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	5922
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRMONCTRL',0,2,250,10,3
	.word	20734
	.byte	12,2,253,10,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	6290
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVROVMON',0,2,130,11,3
	.word	20802
	.byte	12,2,133,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	6469
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRRSTCON',0,2,138,11,3
	.word	20868
	.byte	12,2,141,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	6734
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,2,146,11,3
	.word	20935
	.byte	12,2,149,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	6887
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,2,154,11,3
	.word	21004
	.byte	12,2,157,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	7043
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,2,162,11,3
	.word	21073
	.byte	12,2,165,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	7205
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,2,170,11,3
	.word	21142
	.byte	12,2,173,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	7348
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,2,178,11,3
	.word	21211
	.byte	12,2,181,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	7513
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,2,186,11,3
	.word	21280
	.byte	12,2,189,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	7658
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCTRL1',0,2,194,11,3
	.word	21349
	.byte	12,2,197,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	7839
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCTRL2',0,2,202,11,3
	.word	21417
	.byte	12,2,205,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	8013
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCTRL3',0,2,210,11,3
	.word	21485
	.byte	12,2,213,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	8173
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSDCTRL4',0,2,218,11,3
	.word	21553
	.byte	12,2,221,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	8317
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRSTAT',0,2,226,11,3
	.word	21621
	.byte	12,2,229,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	8591
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRTRIM',0,2,234,11,3
	.word	21686
	.byte	12,2,237,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	8746
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EVRUVMON',0,2,242,11,3
	.word	21751
	.byte	12,2,245,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	8925
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_EXTCON',0,2,250,11,3
	.word	21817
	.byte	12,2,253,11,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	9143
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_FDR',0,2,130,12,3
	.word	21881
	.byte	12,2,133,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	9306
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_FMR',0,2,138,12,3
	.word	21942
	.byte	12,2,141,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	9642
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_ID',0,2,146,12,3
	.word	22003
	.byte	12,2,149,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	9749
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_IGCR',0,2,154,12,3
	.word	22063
	.byte	12,2,157,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	10201
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_IN',0,2,162,12,3
	.word	22125
	.byte	12,2,165,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	10300
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_IOCR',0,2,170,12,3
	.word	22185
	.byte	12,2,173,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	10450
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_LBISTCTRL0',0,2,178,12,3
	.word	22247
	.byte	12,2,181,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	10599
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_LBISTCTRL1',0,2,186,12,3
	.word	22315
	.byte	12,2,189,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	10760
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_LBISTCTRL2',0,2,194,12,3
	.word	22383
	.byte	12,2,197,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	10890
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_LCLCON',0,2,202,12,3
	.word	22451
	.byte	12,2,205,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	11022
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_LCLTEST',0,2,210,12,3
	.word	22515
	.byte	12,2,213,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	11137
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_MANID',0,2,218,12,3
	.word	22580
	.byte	12,2,221,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	11248
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_OMR',0,2,226,12,3
	.word	22643
	.byte	12,2,229,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	11406
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_OSCCON',0,2,234,12,3
	.word	22704
	.byte	12,2,237,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	11818
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_OUT',0,2,242,12,3
	.word	22768
	.byte	12,2,245,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	11919
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_OVCCON',0,2,250,12,3
	.word	22829
	.byte	12,2,253,12,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	12186
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_OVCENABLE',0,2,130,13,3
	.word	22893
	.byte	12,2,133,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	12322
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PDISC',0,2,138,13,3
	.word	22960
	.byte	12,2,141,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	12433
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PDR',0,2,146,13,3
	.word	23023
	.byte	12,2,149,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	12566
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PDRR',0,2,154,13,3
	.word	23084
	.byte	12,2,157,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	12769
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PLLCON0',0,2,162,13,3
	.word	23146
	.byte	12,2,165,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	13125
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PLLCON1',0,2,170,13,3
	.word	23211
	.byte	12,2,173,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	13303
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PLLCON2',0,2,178,13,3
	.word	23276
	.byte	12,2,181,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	13403
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PLLERAYCON0',0,2,186,13,3
	.word	23341
	.byte	12,2,189,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	13773
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PLLERAYCON1',0,2,194,13,3
	.word	23410
	.byte	12,2,197,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	13959
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PLLERAYSTAT',0,2,202,13,3
	.word	23479
	.byte	12,2,205,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	14157
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PLLSTAT',0,2,210,13,3
	.word	23548
	.byte	12,2,213,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	14390
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PMCSR',0,2,218,13,3
	.word	23613
	.byte	12,2,221,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	14542
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PMSWCR0',0,2,226,13,3
	.word	23676
	.byte	12,2,229,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	15090
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PMSWCR1',0,2,234,13,3
	.word	23741
	.byte	12,2,237,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	15335
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PMSWSTAT',0,2,242,13,3
	.word	23806
	.byte	12,2,245,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	15796
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_PMSWSTATCLR',0,2,250,13,3
	.word	23872
	.byte	12,2,253,13,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	16275
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_RSTCON',0,2,130,14,3
	.word	23941
	.byte	12,2,133,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	16066
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_RSTCON2',0,2,138,14,3
	.word	24005
	.byte	12,2,141,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	16486
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_RSTSTAT',0,2,146,14,3
	.word	24070
	.byte	12,2,149,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	16918
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_SAFECON',0,2,154,14,3
	.word	24135
	.byte	12,2,157,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	17014
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_STSTAT',0,2,162,14,3
	.word	24200
	.byte	12,2,165,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	17280
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_SWRSTCON',0,2,170,14,3
	.word	24264
	.byte	12,2,173,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	17405
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_SYSCON',0,2,178,14,3
	.word	24330
	.byte	12,2,181,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	17602
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_TRAPCLR',0,2,186,14,3
	.word	24394
	.byte	12,2,189,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	17755
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_TRAPDIS',0,2,194,14,3
	.word	24459
	.byte	12,2,197,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	17908
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_TRAPSET',0,2,202,14,3
	.word	24524
	.byte	12,2,205,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	18061
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_TRAPSTAT',0,2,210,14,3
	.word	24589
	.byte	17
	.byte	'Ifx_SCU_WDTCPU_CON0',0,2,218,14,3
	.word	494
	.byte	12,2,221,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	18250
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_WDTCPU_CON1',0,2,226,14,3
	.word	24684
	.byte	17
	.byte	'Ifx_SCU_WDTCPU_SR',0,2,234,14,3
	.word	672
	.byte	12,2,237,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	18520
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_WDTS_CON0',0,2,242,14,3
	.word	24780
	.byte	12,2,245,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	18646
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_WDTS_CON1',0,2,250,14,3
	.word	24847
	.byte	12,2,253,14,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	18898
	.byte	2,35,0,0,17
	.byte	'Ifx_SCU_WDTS_SR',0,2,130,15,3
	.word	24914
	.byte	14
	.byte	'_Ifx_SCU_WDTCPU',0,2,141,15,25,12,13
	.byte	'CON0',0,4
	.word	494
	.byte	2,35,0,13
	.byte	'CON1',0,4
	.word	24684
	.byte	2,35,4,13
	.byte	'SR',0,4
	.word	672
	.byte	2,35,8,0,3
	.word	24979
	.byte	17
	.byte	'Ifx_SCU_WDTCPU',0,2,146,15,3
	.word	25042
	.byte	14
	.byte	'_Ifx_SCU_WDTS',0,2,149,15,25,12,13
	.byte	'CON0',0,4
	.word	24780
	.byte	2,35,0,13
	.byte	'CON1',0,4
	.word	24847
	.byte	2,35,4,13
	.byte	'SR',0,4
	.word	24914
	.byte	2,35,8,0,3
	.word	25071
	.byte	17
	.byte	'Ifx_SCU_WDTS',0,2,154,15,3
	.word	25132
	.byte	14
	.byte	'_Ifx_CPU_A_Bits',0,7,45,16,4,15
	.byte	'ADDR',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_A_Bits',0,7,48,3
	.word	25159
	.byte	14
	.byte	'_Ifx_CPU_BIV_Bits',0,7,51,16,4,15
	.byte	'VSS',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'BIV',0,4
	.word	570
	.byte	31,0,2,35,0,0,17
	.byte	'Ifx_CPU_BIV_Bits',0,7,55,3
	.word	25220
	.byte	14
	.byte	'_Ifx_CPU_BTV_Bits',0,7,58,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'BTV',0,4
	.word	570
	.byte	31,0,2,35,0,0,17
	.byte	'Ifx_CPU_BTV_Bits',0,7,62,3
	.word	25299
	.byte	14
	.byte	'_Ifx_CPU_CCNT_Bits',0,7,65,16,4,15
	.byte	'CountValue',0,4
	.word	570
	.byte	31,1,2,35,0,15
	.byte	'SOvf',0,4
	.word	570
	.byte	1,0,2,35,0,0,17
	.byte	'Ifx_CPU_CCNT_Bits',0,7,69,3
	.word	25385
	.byte	14
	.byte	'_Ifx_CPU_CCTRL_Bits',0,7,72,16,4,15
	.byte	'CM',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'CE',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'M1',0,4
	.word	570
	.byte	3,27,2,35,0,15
	.byte	'M2',0,4
	.word	570
	.byte	3,24,2,35,0,15
	.byte	'M3',0,4
	.word	570
	.byte	3,21,2,35,0,15
	.byte	'reserved_11',0,4
	.word	570
	.byte	21,0,2,35,0,0,17
	.byte	'Ifx_CPU_CCTRL_Bits',0,7,80,3
	.word	25474
	.byte	14
	.byte	'_Ifx_CPU_COMPAT_Bits',0,7,83,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'RM',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'SP',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'reserved_5',0,4
	.word	570
	.byte	27,0,2,35,0,0,17
	.byte	'Ifx_CPU_COMPAT_Bits',0,7,89,3
	.word	25620
	.byte	14
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,7,92,16,4,15
	.byte	'CORE_ID',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'reserved_3',0,4
	.word	570
	.byte	29,0,2,35,0,0,17
	.byte	'Ifx_CPU_CORE_ID_Bits',0,7,96,3
	.word	25747
	.byte	14
	.byte	'_Ifx_CPU_CPR_L_Bits',0,7,99,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'LOWBND',0,4
	.word	570
	.byte	29,0,2,35,0,0,17
	.byte	'Ifx_CPU_CPR_L_Bits',0,7,103,3
	.word	25845
	.byte	14
	.byte	'_Ifx_CPU_CPR_U_Bits',0,7,106,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'UPPBND',0,4
	.word	570
	.byte	29,0,2,35,0,0,17
	.byte	'Ifx_CPU_CPR_U_Bits',0,7,110,3
	.word	25938
	.byte	14
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,7,113,16,4,15
	.byte	'MOD_REV',0,4
	.word	570
	.byte	8,24,2,35,0,15
	.byte	'MOD_32B',0,4
	.word	570
	.byte	8,16,2,35,0,15
	.byte	'MOD',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_CPU_ID_Bits',0,7,118,3
	.word	26031
	.byte	14
	.byte	'_Ifx_CPU_CPXE_Bits',0,7,121,16,4,15
	.byte	'XE',0,4
	.word	570
	.byte	8,24,2,35,0,15
	.byte	'reserved_8',0,4
	.word	570
	.byte	24,0,2,35,0,0,17
	.byte	'Ifx_CPU_CPXE_Bits',0,7,125,3
	.word	26139
	.byte	14
	.byte	'_Ifx_CPU_CREVT_Bits',0,7,128,1,16,4,15
	.byte	'EVTA',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'BBM',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'BOD',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'SUSP',0,4
	.word	570
	.byte	1,26,2,35,0,15
	.byte	'CNT',0,4
	.word	570
	.byte	2,24,2,35,0,15
	.byte	'reserved_8',0,4
	.word	570
	.byte	24,0,2,35,0,0,17
	.byte	'Ifx_CPU_CREVT_Bits',0,7,136,1,3
	.word	26226
	.byte	14
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,7,139,1,16,4,15
	.byte	'CID',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'reserved_3',0,4
	.word	570
	.byte	29,0,2,35,0,0,17
	.byte	'Ifx_CPU_CUS_ID_Bits',0,7,143,1,3
	.word	26380
	.byte	14
	.byte	'_Ifx_CPU_D_Bits',0,7,146,1,16,4,15
	.byte	'DATA',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_D_Bits',0,7,149,1,3
	.word	26474
	.byte	14
	.byte	'_Ifx_CPU_DATR_Bits',0,7,152,1,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'SBE',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'reserved_4',0,4
	.word	570
	.byte	5,23,2,35,0,15
	.byte	'CWE',0,4
	.word	570
	.byte	1,22,2,35,0,15
	.byte	'CFE',0,4
	.word	570
	.byte	1,21,2,35,0,15
	.byte	'reserved_11',0,4
	.word	570
	.byte	3,18,2,35,0,15
	.byte	'SOE',0,4
	.word	570
	.byte	1,17,2,35,0,15
	.byte	'SME',0,4
	.word	570
	.byte	1,16,2,35,0,15
	.byte	'reserved_16',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_DATR_Bits',0,7,163,1,3
	.word	26537
	.byte	14
	.byte	'_Ifx_CPU_DBGSR_Bits',0,7,166,1,16,4,15
	.byte	'DE',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'HALT',0,4
	.word	570
	.byte	2,29,2,35,0,15
	.byte	'SIH',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'SUSP',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'reserved_5',0,4
	.word	570
	.byte	1,26,2,35,0,15
	.byte	'PREVSUSP',0,4
	.word	570
	.byte	1,25,2,35,0,15
	.byte	'PEVT',0,4
	.word	570
	.byte	1,24,2,35,0,15
	.byte	'EVTSRC',0,4
	.word	570
	.byte	5,19,2,35,0,15
	.byte	'reserved_13',0,4
	.word	570
	.byte	19,0,2,35,0,0,17
	.byte	'Ifx_CPU_DBGSR_Bits',0,7,177,1,3
	.word	26755
	.byte	14
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,7,180,1,16,4,15
	.byte	'DTA',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'reserved_1',0,4
	.word	570
	.byte	31,0,2,35,0,0,17
	.byte	'Ifx_CPU_DBGTCR_Bits',0,7,184,1,3
	.word	26970
	.byte	14
	.byte	'_Ifx_CPU_DCON0_Bits',0,7,187,1,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'DCBYP',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'reserved_2',0,4
	.word	570
	.byte	30,0,2,35,0,0,17
	.byte	'Ifx_CPU_DCON0_Bits',0,7,192,1,3
	.word	27064
	.byte	14
	.byte	'_Ifx_CPU_DCON2_Bits',0,7,195,1,16,4,15
	.byte	'DCACHE_SZE',0,4
	.word	570
	.byte	16,16,2,35,0,15
	.byte	'DSCRATCH_SZE',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_DCON2_Bits',0,7,199,1,3
	.word	27180
	.byte	14
	.byte	'_Ifx_CPU_DCX_Bits',0,7,202,1,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	6,26,2,35,0,15
	.byte	'DCXValue',0,4
	.word	570
	.byte	26,0,2,35,0,0,17
	.byte	'Ifx_CPU_DCX_Bits',0,7,206,1,3
	.word	27281
	.byte	14
	.byte	'_Ifx_CPU_DEADD_Bits',0,7,209,1,16,4,15
	.byte	'ERROR_ADDRESS',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_DEADD_Bits',0,7,212,1,3
	.word	27374
	.byte	14
	.byte	'_Ifx_CPU_DIEAR_Bits',0,7,215,1,16,4,15
	.byte	'TA',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_DIEAR_Bits',0,7,218,1,3
	.word	27454
	.byte	14
	.byte	'_Ifx_CPU_DIETR_Bits',0,7,221,1,16,4,15
	.byte	'IED',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'IE_T',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'IE_C',0,4
	.word	570
	.byte	1,29,2,35,0,15
	.byte	'IE_S',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'IE_BI',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'E_INFO',0,4
	.word	570
	.byte	6,21,2,35,0,15
	.byte	'IE_DUAL',0,4
	.word	570
	.byte	1,20,2,35,0,15
	.byte	'IE_SP',0,4
	.word	570
	.byte	1,19,2,35,0,15
	.byte	'IE_BS',0,4
	.word	570
	.byte	1,18,2,35,0,15
	.byte	'reserved_14',0,4
	.word	570
	.byte	18,0,2,35,0,0,17
	.byte	'Ifx_CPU_DIETR_Bits',0,7,233,1,3
	.word	27523
	.byte	14
	.byte	'_Ifx_CPU_DMS_Bits',0,7,236,1,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'DMSValue',0,4
	.word	570
	.byte	31,0,2,35,0,0,17
	.byte	'Ifx_CPU_DMS_Bits',0,7,240,1,3
	.word	27752
	.byte	14
	.byte	'_Ifx_CPU_DPR_L_Bits',0,7,243,1,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'LOWBND',0,4
	.word	570
	.byte	29,0,2,35,0,0,17
	.byte	'Ifx_CPU_DPR_L_Bits',0,7,247,1,3
	.word	27845
	.byte	14
	.byte	'_Ifx_CPU_DPR_U_Bits',0,7,250,1,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'UPPBND',0,4
	.word	570
	.byte	29,0,2,35,0,0,17
	.byte	'Ifx_CPU_DPR_U_Bits',0,7,254,1,3
	.word	27940
	.byte	14
	.byte	'_Ifx_CPU_DPRE_Bits',0,7,129,2,16,4,15
	.byte	'RE',0,4
	.word	570
	.byte	16,16,2,35,0,15
	.byte	'reserved_16',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_DPRE_Bits',0,7,133,2,3
	.word	28035
	.byte	14
	.byte	'_Ifx_CPU_DPWE_Bits',0,7,136,2,16,4,15
	.byte	'WE',0,4
	.word	570
	.byte	16,16,2,35,0,15
	.byte	'reserved_16',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_DPWE_Bits',0,7,140,2,3
	.word	28125
	.byte	14
	.byte	'_Ifx_CPU_DSTR_Bits',0,7,143,2,16,4,15
	.byte	'SRE',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'GAE',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'LBE',0,4
	.word	570
	.byte	1,29,2,35,0,15
	.byte	'reserved_3',0,4
	.word	570
	.byte	3,26,2,35,0,15
	.byte	'CRE',0,4
	.word	570
	.byte	1,25,2,35,0,15
	.byte	'reserved_7',0,4
	.word	570
	.byte	7,18,2,35,0,15
	.byte	'DTME',0,4
	.word	570
	.byte	1,17,2,35,0,15
	.byte	'LOE',0,4
	.word	570
	.byte	1,16,2,35,0,15
	.byte	'SDE',0,4
	.word	570
	.byte	1,15,2,35,0,15
	.byte	'SCE',0,4
	.word	570
	.byte	1,14,2,35,0,15
	.byte	'CAC',0,4
	.word	570
	.byte	1,13,2,35,0,15
	.byte	'MPE',0,4
	.word	570
	.byte	1,12,2,35,0,15
	.byte	'CLE',0,4
	.word	570
	.byte	1,11,2,35,0,15
	.byte	'reserved_21',0,4
	.word	570
	.byte	3,8,2,35,0,15
	.byte	'ALN',0,4
	.word	570
	.byte	1,7,2,35,0,15
	.byte	'reserved_25',0,4
	.word	570
	.byte	7,0,2,35,0,0,17
	.byte	'Ifx_CPU_DSTR_Bits',0,7,161,2,3
	.word	28215
	.byte	14
	.byte	'_Ifx_CPU_EXEVT_Bits',0,7,164,2,16,4,15
	.byte	'EVTA',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'BBM',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'BOD',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'SUSP',0,4
	.word	570
	.byte	1,26,2,35,0,15
	.byte	'CNT',0,4
	.word	570
	.byte	2,24,2,35,0,15
	.byte	'reserved_8',0,4
	.word	570
	.byte	24,0,2,35,0,0,17
	.byte	'Ifx_CPU_EXEVT_Bits',0,7,172,2,3
	.word	28539
	.byte	14
	.byte	'_Ifx_CPU_FCX_Bits',0,7,175,2,16,4,15
	.byte	'FCXO',0,4
	.word	570
	.byte	16,16,2,35,0,15
	.byte	'FCXS',0,4
	.word	570
	.byte	4,12,2,35,0,15
	.byte	'reserved_20',0,4
	.word	570
	.byte	12,0,2,35,0,0,17
	.byte	'Ifx_CPU_FCX_Bits',0,7,180,2,3
	.word	28693
	.byte	14
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,7,183,2,16,4,15
	.byte	'TST',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'TCL',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'reserved_2',0,4
	.word	570
	.byte	6,24,2,35,0,15
	.byte	'RM',0,4
	.word	570
	.byte	2,22,2,35,0,15
	.byte	'reserved_10',0,4
	.word	570
	.byte	8,14,2,35,0,15
	.byte	'FXE',0,4
	.word	570
	.byte	1,13,2,35,0,15
	.byte	'FUE',0,4
	.word	570
	.byte	1,12,2,35,0,15
	.byte	'FZE',0,4
	.word	570
	.byte	1,11,2,35,0,15
	.byte	'FVE',0,4
	.word	570
	.byte	1,10,2,35,0,15
	.byte	'FIE',0,4
	.word	570
	.byte	1,9,2,35,0,15
	.byte	'reserved_23',0,4
	.word	570
	.byte	3,6,2,35,0,15
	.byte	'FX',0,4
	.word	570
	.byte	1,5,2,35,0,15
	.byte	'FU',0,4
	.word	570
	.byte	1,4,2,35,0,15
	.byte	'FZ',0,4
	.word	570
	.byte	1,3,2,35,0,15
	.byte	'FV',0,4
	.word	570
	.byte	1,2,2,35,0,15
	.byte	'FI',0,4
	.word	570
	.byte	1,1,2,35,0,15
	.byte	'reserved_31',0,4
	.word	570
	.byte	1,0,2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,7,202,2,3
	.word	28799
	.byte	14
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,7,205,2,16,4,15
	.byte	'OPC',0,4
	.word	570
	.byte	8,24,2,35,0,15
	.byte	'FMT',0,4
	.word	570
	.byte	1,23,2,35,0,15
	.byte	'reserved_9',0,4
	.word	570
	.byte	7,16,2,35,0,15
	.byte	'DREG',0,4
	.word	570
	.byte	4,12,2,35,0,15
	.byte	'reserved_20',0,4
	.word	570
	.byte	12,0,2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,7,212,2,3
	.word	29148
	.byte	14
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,7,215,2,16,4,15
	.byte	'PC',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,7,218,2,3
	.word	29308
	.byte	14
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,7,221,2,16,4,15
	.byte	'SRC1',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,7,224,2,3
	.word	29389
	.byte	14
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,7,227,2,16,4,15
	.byte	'SRC2',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,7,230,2,3
	.word	29476
	.byte	14
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,7,233,2,16,4,15
	.byte	'SRC3',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,7,236,2,3
	.word	29563
	.byte	14
	.byte	'_Ifx_CPU_ICNT_Bits',0,7,239,2,16,4,15
	.byte	'CountValue',0,4
	.word	570
	.byte	31,1,2,35,0,15
	.byte	'SOvf',0,4
	.word	570
	.byte	1,0,2,35,0,0,17
	.byte	'Ifx_CPU_ICNT_Bits',0,7,243,2,3
	.word	29650
	.byte	14
	.byte	'_Ifx_CPU_ICR_Bits',0,7,246,2,16,4,15
	.byte	'CCPN',0,4
	.word	570
	.byte	10,22,2,35,0,15
	.byte	'reserved_10',0,4
	.word	570
	.byte	5,17,2,35,0,15
	.byte	'IE',0,4
	.word	570
	.byte	1,16,2,35,0,15
	.byte	'PIPN',0,4
	.word	570
	.byte	10,6,2,35,0,15
	.byte	'reserved_26',0,4
	.word	570
	.byte	6,0,2,35,0,0,17
	.byte	'Ifx_CPU_ICR_Bits',0,7,253,2,3
	.word	29741
	.byte	14
	.byte	'_Ifx_CPU_ISP_Bits',0,7,128,3,16,4,15
	.byte	'ISP',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_ISP_Bits',0,7,131,3,3
	.word	29884
	.byte	14
	.byte	'_Ifx_CPU_LCX_Bits',0,7,134,3,16,4,15
	.byte	'LCXO',0,4
	.word	570
	.byte	16,16,2,35,0,15
	.byte	'LCXS',0,4
	.word	570
	.byte	4,12,2,35,0,15
	.byte	'reserved_20',0,4
	.word	570
	.byte	12,0,2,35,0,0,17
	.byte	'Ifx_CPU_LCX_Bits',0,7,139,3,3
	.word	29950
	.byte	14
	.byte	'_Ifx_CPU_M1CNT_Bits',0,7,142,3,16,4,15
	.byte	'CountValue',0,4
	.word	570
	.byte	31,1,2,35,0,15
	.byte	'SOvf',0,4
	.word	570
	.byte	1,0,2,35,0,0,17
	.byte	'Ifx_CPU_M1CNT_Bits',0,7,146,3,3
	.word	30056
	.byte	14
	.byte	'_Ifx_CPU_M2CNT_Bits',0,7,149,3,16,4,15
	.byte	'CountValue',0,4
	.word	570
	.byte	31,1,2,35,0,15
	.byte	'SOvf',0,4
	.word	570
	.byte	1,0,2,35,0,0,17
	.byte	'Ifx_CPU_M2CNT_Bits',0,7,153,3,3
	.word	30149
	.byte	14
	.byte	'_Ifx_CPU_M3CNT_Bits',0,7,156,3,16,4,15
	.byte	'CountValue',0,4
	.word	570
	.byte	31,1,2,35,0,15
	.byte	'SOvf',0,4
	.word	570
	.byte	1,0,2,35,0,0,17
	.byte	'Ifx_CPU_M3CNT_Bits',0,7,160,3,3
	.word	30242
	.byte	14
	.byte	'_Ifx_CPU_PC_Bits',0,7,163,3,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'PC',0,4
	.word	570
	.byte	31,0,2,35,0,0,17
	.byte	'Ifx_CPU_PC_Bits',0,7,167,3,3
	.word	30335
	.byte	14
	.byte	'_Ifx_CPU_PCON0_Bits',0,7,170,3,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'PCBYP',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'reserved_2',0,4
	.word	570
	.byte	30,0,2,35,0,0,17
	.byte	'Ifx_CPU_PCON0_Bits',0,7,175,3,3
	.word	30420
	.byte	14
	.byte	'_Ifx_CPU_PCON1_Bits',0,7,178,3,16,4,15
	.byte	'PCINV',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'PBINV',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'reserved_2',0,4
	.word	570
	.byte	30,0,2,35,0,0,17
	.byte	'Ifx_CPU_PCON1_Bits',0,7,183,3,3
	.word	30536
	.byte	14
	.byte	'_Ifx_CPU_PCON2_Bits',0,7,186,3,16,4,15
	.byte	'PCACHE_SZE',0,4
	.word	570
	.byte	16,16,2,35,0,15
	.byte	'PSCRATCH_SZE',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_PCON2_Bits',0,7,190,3,3
	.word	30647
	.byte	14
	.byte	'_Ifx_CPU_PCXI_Bits',0,7,193,3,16,4,15
	.byte	'PCXO',0,4
	.word	570
	.byte	16,16,2,35,0,15
	.byte	'PCXS',0,4
	.word	570
	.byte	4,12,2,35,0,15
	.byte	'UL',0,4
	.word	570
	.byte	1,11,2,35,0,15
	.byte	'PIE',0,4
	.word	570
	.byte	1,10,2,35,0,15
	.byte	'PCPN',0,4
	.word	570
	.byte	10,0,2,35,0,0,17
	.byte	'Ifx_CPU_PCXI_Bits',0,7,200,3,3
	.word	30748
	.byte	14
	.byte	'_Ifx_CPU_PIEAR_Bits',0,7,203,3,16,4,15
	.byte	'TA',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_PIEAR_Bits',0,7,206,3,3
	.word	30878
	.byte	14
	.byte	'_Ifx_CPU_PIETR_Bits',0,7,209,3,16,4,15
	.byte	'IED',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'IE_T',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'IE_C',0,4
	.word	570
	.byte	1,29,2,35,0,15
	.byte	'IE_S',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'IE_BI',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'E_INFO',0,4
	.word	570
	.byte	6,21,2,35,0,15
	.byte	'IE_DUAL',0,4
	.word	570
	.byte	1,20,2,35,0,15
	.byte	'IE_SP',0,4
	.word	570
	.byte	1,19,2,35,0,15
	.byte	'IE_BS',0,4
	.word	570
	.byte	1,18,2,35,0,15
	.byte	'reserved_14',0,4
	.word	570
	.byte	18,0,2,35,0,0,17
	.byte	'Ifx_CPU_PIETR_Bits',0,7,221,3,3
	.word	30947
	.byte	14
	.byte	'_Ifx_CPU_PMA0_Bits',0,7,224,3,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	13,19,2,35,0,15
	.byte	'DAC',0,4
	.word	570
	.byte	3,16,2,35,0,15
	.byte	'reserved_16',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_PMA0_Bits',0,7,229,3,3
	.word	31176
	.byte	14
	.byte	'_Ifx_CPU_PMA1_Bits',0,7,232,3,16,4,15
	.byte	'reserved_0',0,4
	.word	570
	.byte	14,18,2,35,0,15
	.byte	'CAC',0,4
	.word	570
	.byte	2,16,2,35,0,15
	.byte	'reserved_16',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_PMA1_Bits',0,7,237,3,3
	.word	31289
	.byte	14
	.byte	'_Ifx_CPU_PMA2_Bits',0,7,240,3,16,4,15
	.byte	'PSI',0,4
	.word	570
	.byte	16,16,2,35,0,15
	.byte	'reserved_16',0,4
	.word	570
	.byte	16,0,2,35,0,0,17
	.byte	'Ifx_CPU_PMA2_Bits',0,7,244,3,3
	.word	31402
	.byte	14
	.byte	'_Ifx_CPU_PSTR_Bits',0,7,247,3,16,4,15
	.byte	'FRE',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'reserved_1',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'FBE',0,4
	.word	570
	.byte	1,29,2,35,0,15
	.byte	'reserved_3',0,4
	.word	570
	.byte	9,20,2,35,0,15
	.byte	'FPE',0,4
	.word	570
	.byte	1,19,2,35,0,15
	.byte	'reserved_13',0,4
	.word	570
	.byte	1,18,2,35,0,15
	.byte	'FME',0,4
	.word	570
	.byte	1,17,2,35,0,15
	.byte	'reserved_15',0,4
	.word	570
	.byte	17,0,2,35,0,0,17
	.byte	'Ifx_CPU_PSTR_Bits',0,7,129,4,3
	.word	31493
	.byte	14
	.byte	'_Ifx_CPU_PSW_Bits',0,7,132,4,16,4,15
	.byte	'CDC',0,4
	.word	570
	.byte	7,25,2,35,0,15
	.byte	'CDE',0,4
	.word	570
	.byte	1,24,2,35,0,15
	.byte	'GW',0,4
	.word	570
	.byte	1,23,2,35,0,15
	.byte	'IS',0,4
	.word	570
	.byte	1,22,2,35,0,15
	.byte	'IO',0,4
	.word	570
	.byte	2,20,2,35,0,15
	.byte	'PRS',0,4
	.word	570
	.byte	2,18,2,35,0,15
	.byte	'S',0,4
	.word	570
	.byte	1,17,2,35,0,15
	.byte	'reserved_15',0,4
	.word	570
	.byte	12,5,2,35,0,15
	.byte	'SAV',0,4
	.word	570
	.byte	1,4,2,35,0,15
	.byte	'AV',0,4
	.word	570
	.byte	1,3,2,35,0,15
	.byte	'SV',0,4
	.word	570
	.byte	1,2,2,35,0,15
	.byte	'V',0,4
	.word	570
	.byte	1,1,2,35,0,15
	.byte	'C',0,4
	.word	570
	.byte	1,0,2,35,0,0,17
	.byte	'Ifx_CPU_PSW_Bits',0,7,147,4,3
	.word	31696
	.byte	14
	.byte	'_Ifx_CPU_SEGEN_Bits',0,7,150,4,16,4,15
	.byte	'ADFLIP',0,4
	.word	570
	.byte	8,24,2,35,0,15
	.byte	'ADTYPE',0,4
	.word	570
	.byte	2,22,2,35,0,15
	.byte	'reserved_10',0,4
	.word	570
	.byte	21,1,2,35,0,15
	.byte	'AE',0,4
	.word	570
	.byte	1,0,2,35,0,0,17
	.byte	'Ifx_CPU_SEGEN_Bits',0,7,156,4,3
	.word	31939
	.byte	14
	.byte	'_Ifx_CPU_SMACON_Bits',0,7,159,4,16,4,15
	.byte	'PC',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'reserved_1',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'PT',0,4
	.word	570
	.byte	1,29,2,35,0,15
	.byte	'reserved_3',0,4
	.word	570
	.byte	5,24,2,35,0,15
	.byte	'DC',0,4
	.word	570
	.byte	1,23,2,35,0,15
	.byte	'reserved_9',0,4
	.word	570
	.byte	1,22,2,35,0,15
	.byte	'DT',0,4
	.word	570
	.byte	1,21,2,35,0,15
	.byte	'reserved_11',0,4
	.word	570
	.byte	13,8,2,35,0,15
	.byte	'IODT',0,4
	.word	570
	.byte	1,7,2,35,0,15
	.byte	'reserved_25',0,4
	.word	570
	.byte	7,0,2,35,0,0,17
	.byte	'Ifx_CPU_SMACON_Bits',0,7,171,4,3
	.word	32067
	.byte	14
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,7,174,4,16,4,15
	.byte	'EN',0,4
	.word	500
	.byte	32,0,2,35,2,0,17
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,7,177,4,3
	.word	32308
	.byte	14
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,7,180,4,16,4,15
	.byte	'reserved_0',0,4
	.word	500
	.byte	32,0,2,35,2,0,17
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,7,183,4,3
	.word	32391
	.byte	14
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,7,186,4,16,4,15
	.byte	'EN',0,4
	.word	500
	.byte	32,0,2,35,2,0,17
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,7,189,4,3
	.word	32482
	.byte	14
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,7,192,4,16,4,15
	.byte	'reserved_0',0,4
	.word	500
	.byte	32,0,2,35,2,0,17
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,7,195,4,3
	.word	32573
	.byte	14
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,7,198,4,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	5,3,2,35,0,15
	.byte	'ADDR',0,4
	.word	500
	.byte	27,0,2,35,2,0,17
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,7,202,4,3
	.word	32672
	.byte	14
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,7,205,4,16,4,15
	.byte	'reserved_0',0,1
	.word	195
	.byte	5,3,2,35,0,15
	.byte	'ADDR',0,4
	.word	500
	.byte	27,0,2,35,2,0,17
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,7,209,4,3
	.word	32779
	.byte	14
	.byte	'_Ifx_CPU_SWEVT_Bits',0,7,212,4,16,4,15
	.byte	'EVTA',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'BBM',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'BOD',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'SUSP',0,4
	.word	570
	.byte	1,26,2,35,0,15
	.byte	'CNT',0,4
	.word	570
	.byte	2,24,2,35,0,15
	.byte	'reserved_8',0,4
	.word	570
	.byte	24,0,2,35,0,0,17
	.byte	'Ifx_CPU_SWEVT_Bits',0,7,220,4,3
	.word	32886
	.byte	14
	.byte	'_Ifx_CPU_SYSCON_Bits',0,7,223,4,16,4,15
	.byte	'FCDSF',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'PROTEN',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'TPROTEN',0,4
	.word	570
	.byte	1,29,2,35,0,15
	.byte	'IS',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'IT',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'RES',0,4
	.word	570
	.byte	11,16,2,35,0,15
	.byte	'U1_IED',0,4
	.word	570
	.byte	1,15,2,35,0,15
	.byte	'U1_IOS',0,4
	.word	570
	.byte	1,14,2,35,0,15
	.byte	'reserved_18',0,4
	.word	570
	.byte	14,0,2,35,0,0,17
	.byte	'Ifx_CPU_SYSCON_Bits',0,7,234,4,3
	.word	33040
	.byte	14
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,7,237,4,16,4,15
	.byte	'ASI',0,4
	.word	570
	.byte	5,27,2,35,0,15
	.byte	'reserved_5',0,4
	.word	570
	.byte	27,0,2,35,0,0,17
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,7,241,4,3
	.word	33253
	.byte	14
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,7,244,4,16,4,15
	.byte	'TEXP0',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'TEXP1',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'TEXP2',0,4
	.word	570
	.byte	1,29,2,35,0,15
	.byte	'reserved_3',0,4
	.word	570
	.byte	13,16,2,35,0,15
	.byte	'TTRAP',0,4
	.word	570
	.byte	1,15,2,35,0,15
	.byte	'reserved_17',0,4
	.word	570
	.byte	15,0,2,35,0,0,17
	.byte	'Ifx_CPU_TPS_CON_Bits',0,7,252,4,3
	.word	33351
	.byte	14
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,7,255,4,16,4,15
	.byte	'Timer',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,7,130,5,3
	.word	33523
	.byte	14
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,7,133,5,16,4,15
	.byte	'ADDR',0,4
	.word	570
	.byte	32,0,2,35,0,0,17
	.byte	'Ifx_CPU_TR_ADR_Bits',0,7,136,5,3
	.word	33603
	.byte	14
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,7,139,5,16,4,15
	.byte	'EVTA',0,4
	.word	570
	.byte	3,29,2,35,0,15
	.byte	'BBM',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'BOD',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'SUSP',0,4
	.word	570
	.byte	1,26,2,35,0,15
	.byte	'CNT',0,4
	.word	570
	.byte	2,24,2,35,0,15
	.byte	'reserved_8',0,4
	.word	570
	.byte	4,20,2,35,0,15
	.byte	'TYP',0,4
	.word	570
	.byte	1,19,2,35,0,15
	.byte	'RNG',0,4
	.word	570
	.byte	1,18,2,35,0,15
	.byte	'reserved_14',0,4
	.word	570
	.byte	1,17,2,35,0,15
	.byte	'ASI_EN',0,4
	.word	570
	.byte	1,16,2,35,0,15
	.byte	'ASI',0,4
	.word	570
	.byte	5,11,2,35,0,15
	.byte	'reserved_21',0,4
	.word	570
	.byte	6,5,2,35,0,15
	.byte	'AST',0,4
	.word	570
	.byte	1,4,2,35,0,15
	.byte	'ALD',0,4
	.word	570
	.byte	1,3,2,35,0,15
	.byte	'reserved_29',0,4
	.word	570
	.byte	3,0,2,35,0,0,17
	.byte	'Ifx_CPU_TR_EVT_Bits',0,7,156,5,3
	.word	33676
	.byte	14
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,7,159,5,16,4,15
	.byte	'T0',0,4
	.word	570
	.byte	1,31,2,35,0,15
	.byte	'T1',0,4
	.word	570
	.byte	1,30,2,35,0,15
	.byte	'T2',0,4
	.word	570
	.byte	1,29,2,35,0,15
	.byte	'T3',0,4
	.word	570
	.byte	1,28,2,35,0,15
	.byte	'T4',0,4
	.word	570
	.byte	1,27,2,35,0,15
	.byte	'T5',0,4
	.word	570
	.byte	1,26,2,35,0,15
	.byte	'T6',0,4
	.word	570
	.byte	1,25,2,35,0,15
	.byte	'T7',0,4
	.word	570
	.byte	1,24,2,35,0,15
	.byte	'reserved_8',0,4
	.word	570
	.byte	24,0,2,35,0,0,17
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,7,170,5,3
	.word	33994
	.byte	12,7,178,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25159
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_A',0,7,183,5,3
	.word	34189
	.byte	12,7,186,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25220
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_BIV',0,7,191,5,3
	.word	34248
	.byte	12,7,194,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25299
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_BTV',0,7,199,5,3
	.word	34309
	.byte	12,7,202,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25385
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CCNT',0,7,207,5,3
	.word	34370
	.byte	12,7,210,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25474
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CCTRL',0,7,215,5,3
	.word	34432
	.byte	12,7,218,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25620
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_COMPAT',0,7,223,5,3
	.word	34495
	.byte	12,7,226,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25747
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CORE_ID',0,7,231,5,3
	.word	34559
	.byte	12,7,234,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25845
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CPR_L',0,7,239,5,3
	.word	34624
	.byte	12,7,242,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	25938
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CPR_U',0,7,247,5,3
	.word	34687
	.byte	12,7,250,5,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	26031
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CPU_ID',0,7,255,5,3
	.word	34750
	.byte	12,7,130,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	26139
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CPXE',0,7,135,6,3
	.word	34814
	.byte	12,7,138,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	26226
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CREVT',0,7,143,6,3
	.word	34876
	.byte	12,7,146,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	26380
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_CUS_ID',0,7,151,6,3
	.word	34939
	.byte	12,7,154,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	26474
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_D',0,7,159,6,3
	.word	35003
	.byte	12,7,162,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	26537
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DATR',0,7,167,6,3
	.word	35062
	.byte	12,7,170,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	26755
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DBGSR',0,7,175,6,3
	.word	35124
	.byte	12,7,178,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	26970
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DBGTCR',0,7,183,6,3
	.word	35187
	.byte	12,7,186,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27064
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DCON0',0,7,191,6,3
	.word	35251
	.byte	12,7,194,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27180
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DCON2',0,7,199,6,3
	.word	35314
	.byte	12,7,202,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27281
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DCX',0,7,207,6,3
	.word	35377
	.byte	12,7,210,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27374
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DEADD',0,7,215,6,3
	.word	35438
	.byte	12,7,218,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27454
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DIEAR',0,7,223,6,3
	.word	35501
	.byte	12,7,226,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27523
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DIETR',0,7,231,6,3
	.word	35564
	.byte	12,7,234,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27752
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DMS',0,7,239,6,3
	.word	35627
	.byte	12,7,242,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27845
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DPR_L',0,7,247,6,3
	.word	35688
	.byte	12,7,250,6,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	27940
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DPR_U',0,7,255,6,3
	.word	35751
	.byte	12,7,130,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	28035
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DPRE',0,7,135,7,3
	.word	35814
	.byte	12,7,138,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	28125
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DPWE',0,7,143,7,3
	.word	35876
	.byte	12,7,146,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	28215
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_DSTR',0,7,151,7,3
	.word	35938
	.byte	12,7,154,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	28539
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_EXEVT',0,7,159,7,3
	.word	36000
	.byte	12,7,162,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	28693
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_FCX',0,7,167,7,3
	.word	36063
	.byte	12,7,170,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	28799
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,7,175,7,3
	.word	36124
	.byte	12,7,178,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29148
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,7,183,7,3
	.word	36194
	.byte	12,7,186,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29308
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,7,191,7,3
	.word	36264
	.byte	12,7,194,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29389
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,7,199,7,3
	.word	36333
	.byte	12,7,202,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29476
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,7,207,7,3
	.word	36404
	.byte	12,7,210,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29563
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,7,215,7,3
	.word	36475
	.byte	12,7,218,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29650
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_ICNT',0,7,223,7,3
	.word	36546
	.byte	12,7,226,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29741
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_ICR',0,7,231,7,3
	.word	36608
	.byte	12,7,234,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29884
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_ISP',0,7,239,7,3
	.word	36669
	.byte	12,7,242,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	29950
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_LCX',0,7,247,7,3
	.word	36730
	.byte	12,7,250,7,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30056
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_M1CNT',0,7,255,7,3
	.word	36791
	.byte	12,7,130,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30149
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_M2CNT',0,7,135,8,3
	.word	36854
	.byte	12,7,138,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30242
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_M3CNT',0,7,143,8,3
	.word	36917
	.byte	12,7,146,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30335
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PC',0,7,151,8,3
	.word	36980
	.byte	12,7,154,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30420
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PCON0',0,7,159,8,3
	.word	37040
	.byte	12,7,162,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30536
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PCON1',0,7,167,8,3
	.word	37103
	.byte	12,7,170,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30647
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PCON2',0,7,175,8,3
	.word	37166
	.byte	12,7,178,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30748
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PCXI',0,7,183,8,3
	.word	37229
	.byte	12,7,186,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30878
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PIEAR',0,7,191,8,3
	.word	37291
	.byte	12,7,194,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	30947
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PIETR',0,7,199,8,3
	.word	37354
	.byte	12,7,202,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	31176
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PMA0',0,7,207,8,3
	.word	37417
	.byte	12,7,210,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	31289
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PMA1',0,7,215,8,3
	.word	37479
	.byte	12,7,218,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	31402
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PMA2',0,7,223,8,3
	.word	37541
	.byte	12,7,226,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	31493
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PSTR',0,7,231,8,3
	.word	37603
	.byte	12,7,234,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	31696
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_PSW',0,7,239,8,3
	.word	37665
	.byte	12,7,242,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	31939
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SEGEN',0,7,247,8,3
	.word	37726
	.byte	12,7,250,8,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	32067
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SMACON',0,7,255,8,3
	.word	37789
	.byte	12,7,130,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	32308
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SPROT_ACCENA',0,7,135,9,3
	.word	37853
	.byte	12,7,138,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	32391
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SPROT_ACCENB',0,7,143,9,3
	.word	37923
	.byte	12,7,146,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	32482
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,7,151,9,3
	.word	37993
	.byte	12,7,154,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	32573
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,7,159,9,3
	.word	38067
	.byte	12,7,162,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	32672
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,7,167,9,3
	.word	38141
	.byte	12,7,170,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	32779
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,7,175,9,3
	.word	38211
	.byte	12,7,178,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	32886
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SWEVT',0,7,183,9,3
	.word	38281
	.byte	12,7,186,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	33040
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_SYSCON',0,7,191,9,3
	.word	38344
	.byte	12,7,194,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	33253
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_TASK_ASI',0,7,199,9,3
	.word	38408
	.byte	12,7,202,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	33351
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_TPS_CON',0,7,207,9,3
	.word	38474
	.byte	12,7,210,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	33523
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_TPS_TIMER',0,7,215,9,3
	.word	38539
	.byte	12,7,218,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	33603
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_TR_ADR',0,7,223,9,3
	.word	38606
	.byte	12,7,226,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	33676
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_TR_EVT',0,7,231,9,3
	.word	38670
	.byte	12,7,234,9,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	33994
	.byte	2,35,0,0,17
	.byte	'Ifx_CPU_TRIG_ACC',0,7,239,9,3
	.word	38734
	.byte	14
	.byte	'_Ifx_CPU_CPR',0,7,250,9,25,8,13
	.byte	'L',0,4
	.word	34624
	.byte	2,35,0,13
	.byte	'U',0,4
	.word	34687
	.byte	2,35,4,0,3
	.word	38800
	.byte	17
	.byte	'Ifx_CPU_CPR',0,7,254,9,3
	.word	38842
	.byte	14
	.byte	'_Ifx_CPU_DPR',0,7,129,10,25,8,13
	.byte	'L',0,4
	.word	35688
	.byte	2,35,0,13
	.byte	'U',0,4
	.word	35751
	.byte	2,35,4,0,3
	.word	38868
	.byte	17
	.byte	'Ifx_CPU_DPR',0,7,133,10,3
	.word	38910
	.byte	14
	.byte	'_Ifx_CPU_SPROT_RGN',0,7,136,10,25,16,13
	.byte	'LA',0,4
	.word	38141
	.byte	2,35,0,13
	.byte	'UA',0,4
	.word	38211
	.byte	2,35,4,13
	.byte	'ACCENA',0,4
	.word	37993
	.byte	2,35,8,13
	.byte	'ACCENB',0,4
	.word	38067
	.byte	2,35,12,0,3
	.word	38936
	.byte	17
	.byte	'Ifx_CPU_SPROT_RGN',0,7,142,10,3
	.word	39018
	.byte	14
	.byte	'_Ifx_CPU_TPS',0,7,145,10,25,16,13
	.byte	'CON',0,4
	.word	38474
	.byte	2,35,0,19,12
	.word	38539
	.byte	20,2,0,13
	.byte	'TIMER',0,12
	.word	39082
	.byte	2,35,4,0,3
	.word	39050
	.byte	17
	.byte	'Ifx_CPU_TPS',0,7,149,10,3
	.word	39107
	.byte	14
	.byte	'_Ifx_CPU_TR',0,7,152,10,25,8,13
	.byte	'EVT',0,4
	.word	38670
	.byte	2,35,0,13
	.byte	'ADR',0,4
	.word	38606
	.byte	2,35,4,0,3
	.word	39133
	.byte	17
	.byte	'Ifx_CPU_TR',0,7,156,10,3
	.word	39178
	.byte	14
	.byte	'_Ifx_SRC_SRCR_Bits',0,8,45,16,4,15
	.byte	'SRPN',0,1
	.word	195
	.byte	8,0,2,35,0,15
	.byte	'reserved_8',0,1
	.word	195
	.byte	2,6,2,35,1,15
	.byte	'SRE',0,1
	.word	195
	.byte	1,5,2,35,1,15
	.byte	'TOS',0,1
	.word	195
	.byte	2,3,2,35,1,15
	.byte	'reserved_13',0,1
	.word	195
	.byte	3,0,2,35,1,15
	.byte	'ECC',0,1
	.word	195
	.byte	6,2,2,35,2,15
	.byte	'reserved_22',0,1
	.word	195
	.byte	2,0,2,35,2,15
	.byte	'SRR',0,1
	.word	195
	.byte	1,7,2,35,3,15
	.byte	'CLRR',0,1
	.word	195
	.byte	1,6,2,35,3,15
	.byte	'SETR',0,1
	.word	195
	.byte	1,5,2,35,3,15
	.byte	'IOV',0,1
	.word	195
	.byte	1,4,2,35,3,15
	.byte	'IOVCLR',0,1
	.word	195
	.byte	1,3,2,35,3,15
	.byte	'SWS',0,1
	.word	195
	.byte	1,2,2,35,3,15
	.byte	'SWSCLR',0,1
	.word	195
	.byte	1,1,2,35,3,15
	.byte	'reserved_31',0,1
	.word	195
	.byte	1,0,2,35,3,0,17
	.byte	'Ifx_SRC_SRCR_Bits',0,8,62,3
	.word	39203
	.byte	12,8,70,9,4,13
	.byte	'U',0,4
	.word	500
	.byte	2,35,0,13
	.byte	'I',0,4
	.word	161
	.byte	2,35,0,13
	.byte	'B',0,4
	.word	39203
	.byte	2,35,0,0,17
	.byte	'Ifx_SRC_SRCR',0,8,75,3
	.word	39519
	.byte	14
	.byte	'_Ifx_SRC_AGBT',0,8,86,25,4,13
	.byte	'SR',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	39579
	.byte	17
	.byte	'Ifx_SRC_AGBT',0,8,89,3
	.word	39611
	.byte	14
	.byte	'_Ifx_SRC_ASCLIN',0,8,92,25,12,13
	.byte	'TX',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'RX',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'ERR',0,4
	.word	39519
	.byte	2,35,8,0,3
	.word	39637
	.byte	17
	.byte	'Ifx_SRC_ASCLIN',0,8,97,3
	.word	39696
	.byte	14
	.byte	'_Ifx_SRC_BCUSPB',0,8,100,25,4,13
	.byte	'SBSRC',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	39724
	.byte	17
	.byte	'Ifx_SRC_BCUSPB',0,8,103,3
	.word	39761
	.byte	14
	.byte	'_Ifx_SRC_CAN',0,8,106,25,64,19,64
	.word	39519
	.byte	20,15,0,13
	.byte	'INT',0,64
	.word	39807
	.byte	2,35,0,0,3
	.word	39789
	.byte	17
	.byte	'Ifx_SRC_CAN',0,8,109,3
	.word	39830
	.byte	14
	.byte	'_Ifx_SRC_CCU6',0,8,112,25,16,13
	.byte	'SR0',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'SR1',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'SR2',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'SR3',0,4
	.word	39519
	.byte	2,35,12,0,3
	.word	39855
	.byte	17
	.byte	'Ifx_SRC_CCU6',0,8,118,3
	.word	39927
	.byte	14
	.byte	'_Ifx_SRC_CERBERUS',0,8,121,25,8,19,8
	.word	39519
	.byte	20,1,0,13
	.byte	'SR',0,8
	.word	39976
	.byte	2,35,0,0,3
	.word	39953
	.byte	17
	.byte	'Ifx_SRC_CERBERUS',0,8,124,3
	.word	39998
	.byte	14
	.byte	'_Ifx_SRC_CIF',0,8,127,25,16,13
	.byte	'MI',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'MIEP',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'ISP',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'MJPEG',0,4
	.word	39519
	.byte	2,35,12,0,3
	.word	40028
	.byte	17
	.byte	'Ifx_SRC_CIF',0,8,133,1,3
	.word	40101
	.byte	14
	.byte	'_Ifx_SRC_CPU',0,8,136,1,25,4,13
	.byte	'SBSRC',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	40127
	.byte	17
	.byte	'Ifx_SRC_CPU',0,8,139,1,3
	.word	40162
	.byte	14
	.byte	'_Ifx_SRC_DAM',0,8,142,1,25,24,19,24
	.word	39519
	.byte	20,5,0,13
	.byte	'SR',0,24
	.word	40207
	.byte	2,35,0,0,3
	.word	40188
	.byte	17
	.byte	'Ifx_SRC_DAM',0,8,145,1,3
	.word	40229
	.byte	14
	.byte	'_Ifx_SRC_DMA',0,8,148,1,25,144,2,13
	.byte	'ERR',0,4
	.word	39519
	.byte	2,35,0,19,12
	.word	195
	.byte	20,11,0,13
	.byte	'reserved_4',0,12
	.word	40288
	.byte	2,35,4,19,128,2
	.word	39519
	.byte	20,63,0,13
	.byte	'CH',0,128,2
	.word	40317
	.byte	2,35,16,0,3
	.word	40255
	.byte	17
	.byte	'Ifx_SRC_DMA',0,8,153,1,3
	.word	40341
	.byte	14
	.byte	'_Ifx_SRC_DSADC',0,8,156,1,25,8,13
	.byte	'SRM',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'SRA',0,4
	.word	39519
	.byte	2,35,4,0,3
	.word	40367
	.byte	17
	.byte	'Ifx_SRC_DSADC',0,8,160,1,3
	.word	40415
	.byte	14
	.byte	'_Ifx_SRC_EMEM',0,8,163,1,25,4,13
	.byte	'SR',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	40443
	.byte	17
	.byte	'Ifx_SRC_EMEM',0,8,166,1,3
	.word	40476
	.byte	14
	.byte	'_Ifx_SRC_ERAY',0,8,169,1,25,80,13
	.byte	'INT',0,8
	.word	39976
	.byte	2,35,0,13
	.byte	'TINT',0,8
	.word	39976
	.byte	2,35,8,13
	.byte	'NDAT',0,8
	.word	39976
	.byte	2,35,16,13
	.byte	'MBSC',0,8
	.word	39976
	.byte	2,35,24,13
	.byte	'OBUSY',0,4
	.word	39519
	.byte	2,35,32,13
	.byte	'IBUSY',0,4
	.word	39519
	.byte	2,35,36,19,40
	.word	195
	.byte	20,39,0,13
	.byte	'reserved_28',0,40
	.word	40608
	.byte	2,35,40,0,3
	.word	40503
	.byte	17
	.byte	'Ifx_SRC_ERAY',0,8,178,1,3
	.word	40639
	.byte	14
	.byte	'_Ifx_SRC_ETH',0,8,181,1,25,4,13
	.byte	'SR',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	40666
	.byte	17
	.byte	'Ifx_SRC_ETH',0,8,184,1,3
	.word	40698
	.byte	14
	.byte	'_Ifx_SRC_FCE',0,8,187,1,25,4,13
	.byte	'SR',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	40724
	.byte	17
	.byte	'Ifx_SRC_FCE',0,8,190,1,3
	.word	40756
	.byte	14
	.byte	'_Ifx_SRC_GPSR',0,8,193,1,25,32,13
	.byte	'SR0',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'SR1',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'SR2',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'SR3',0,4
	.word	39519
	.byte	2,35,12,19,16
	.word	195
	.byte	20,15,0,13
	.byte	'reserved_10',0,16
	.word	40854
	.byte	2,35,16,0,3
	.word	40782
	.byte	17
	.byte	'Ifx_SRC_GPSR',0,8,200,1,3
	.word	40885
	.byte	14
	.byte	'_Ifx_SRC_GPT12',0,8,203,1,25,48,13
	.byte	'CIRQ',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'T2',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'T3',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'T4',0,4
	.word	39519
	.byte	2,35,12,13
	.byte	'T5',0,4
	.word	39519
	.byte	2,35,16,13
	.byte	'T6',0,4
	.word	39519
	.byte	2,35,20,19,24
	.word	195
	.byte	20,23,0,13
	.byte	'reserved_18',0,24
	.word	41007
	.byte	2,35,24,0,3
	.word	40912
	.byte	17
	.byte	'Ifx_SRC_GPT12',0,8,212,1,3
	.word	41038
	.byte	14
	.byte	'_Ifx_SRC_GTM',0,8,215,1,25,208,18,13
	.byte	'AEIIRQ',0,4
	.word	39519
	.byte	2,35,0,19,12
	.word	39519
	.byte	20,2,0,13
	.byte	'ARUIRQ',0,12
	.word	41102
	.byte	2,35,4,19,4
	.word	195
	.byte	20,3,0,13
	.byte	'reserved_10',0,4
	.word	41127
	.byte	2,35,16,13
	.byte	'BRCIRQ',0,4
	.word	39519
	.byte	2,35,20,13
	.byte	'CMPIRQ',0,4
	.word	39519
	.byte	2,35,24,13
	.byte	'SPEIRQ',0,8
	.word	39976
	.byte	2,35,28,19,8
	.word	195
	.byte	20,7,0,13
	.byte	'reserved_24',0,8
	.word	41205
	.byte	2,35,36,19,32
	.word	39519
	.byte	20,7,0,19,32
	.word	41235
	.byte	20,0,0,13
	.byte	'PSM',0,32
	.word	41244
	.byte	2,35,44,19,88
	.word	195
	.byte	20,87,0,13
	.byte	'reserved_4C',0,88
	.word	41266
	.byte	2,35,76,19,108
	.word	39519
	.byte	20,26,0,13
	.byte	'DPLL',0,108
	.word	41296
	.byte	3,35,164,1,19,96
	.word	195
	.byte	20,95,0,13
	.byte	'reserved_110',0,96
	.word	41320
	.byte	3,35,144,2,13
	.byte	'ERR',0,4
	.word	39519
	.byte	3,35,240,2,13
	.byte	'reserved_174',0,12
	.word	40288
	.byte	3,35,244,2,19,128,1
	.word	41235
	.byte	20,3,0,13
	.byte	'TIM',0,128,1
	.word	41389
	.byte	3,35,128,3,19,128,3
	.word	195
	.byte	20,255,2,0,13
	.byte	'reserved_200',0,128,3
	.word	41414
	.byte	3,35,128,4,13
	.byte	'MCS',0,128,1
	.word	41389
	.byte	3,35,128,7,13
	.byte	'reserved_400',0,128,3
	.word	41414
	.byte	3,35,128,8,19,96
	.word	41235
	.byte	20,2,0,13
	.byte	'TOM',0,96
	.word	41488
	.byte	3,35,128,11,19,160,3
	.word	195
	.byte	20,159,3,0,13
	.byte	'reserved_5E0',0,160,3
	.word	41511
	.byte	3,35,224,11,19,16
	.word	39519
	.byte	20,3,0,19,80
	.word	41546
	.byte	20,4,0,13
	.byte	'ATOM',0,80
	.word	41555
	.byte	3,35,128,15,19,176,2
	.word	195
	.byte	20,175,2,0,13
	.byte	'reserved_7D0',0,176,2
	.word	41579
	.byte	3,35,208,15,13
	.byte	'MCSW0',0,16
	.word	41546
	.byte	3,35,128,18,19,48
	.word	195
	.byte	20,47,0,13
	.byte	'reserved_910',0,48
	.word	41630
	.byte	3,35,144,18,13
	.byte	'MCSW1',0,16
	.word	41546
	.byte	3,35,192,18,0,3
	.word	41066
	.byte	17
	.byte	'Ifx_SRC_GTM',0,8,241,1,3
	.word	41679
	.byte	14
	.byte	'_Ifx_SRC_HSCT',0,8,244,1,25,4,13
	.byte	'SR',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	41705
	.byte	17
	.byte	'Ifx_SRC_HSCT',0,8,247,1,3
	.word	41738
	.byte	14
	.byte	'_Ifx_SRC_HSM',0,8,250,1,25,8,13
	.byte	'HSM',0,8
	.word	39976
	.byte	2,35,0,0,3
	.word	41765
	.byte	17
	.byte	'Ifx_SRC_HSM',0,8,253,1,3
	.word	41798
	.byte	14
	.byte	'_Ifx_SRC_HSSL',0,8,128,2,25,16,13
	.byte	'COK',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'RDI',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'ERR',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'TRG',0,4
	.word	39519
	.byte	2,35,12,0,3
	.word	41824
	.byte	17
	.byte	'Ifx_SRC_HSSL',0,8,134,2,3
	.word	41897
	.byte	14
	.byte	'_Ifx_SRC_I2C',0,8,137,2,25,80,13
	.byte	'BREQ',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'LBREQ',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'SREQ',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'LSREQ',0,4
	.word	39519
	.byte	2,35,12,13
	.byte	'ERR',0,4
	.word	39519
	.byte	2,35,16,13
	.byte	'P',0,4
	.word	39519
	.byte	2,35,20,19,56
	.word	195
	.byte	20,55,0,13
	.byte	'reserved_18',0,56
	.word	42025
	.byte	2,35,24,0,3
	.word	41924
	.byte	17
	.byte	'Ifx_SRC_I2C',0,8,146,2,3
	.word	42056
	.byte	14
	.byte	'_Ifx_SRC_LMU',0,8,149,2,25,4,13
	.byte	'SR',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	42082
	.byte	17
	.byte	'Ifx_SRC_LMU',0,8,152,2,3
	.word	42114
	.byte	14
	.byte	'_Ifx_SRC_MSC',0,8,155,2,25,20,13
	.byte	'SR0',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'SR1',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'SR2',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'SR3',0,4
	.word	39519
	.byte	2,35,12,13
	.byte	'SR4',0,4
	.word	39519
	.byte	2,35,16,0,3
	.word	42140
	.byte	17
	.byte	'Ifx_SRC_MSC',0,8,162,2,3
	.word	42225
	.byte	14
	.byte	'_Ifx_SRC_PMU',0,8,165,2,25,4,13
	.byte	'SR',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	42251
	.byte	17
	.byte	'Ifx_SRC_PMU',0,8,168,2,3
	.word	42283
	.byte	14
	.byte	'_Ifx_SRC_PSI5',0,8,171,2,25,32,13
	.byte	'SR',0,32
	.word	41235
	.byte	2,35,0,0,3
	.word	42309
	.byte	17
	.byte	'Ifx_SRC_PSI5',0,8,174,2,3
	.word	42342
	.byte	14
	.byte	'_Ifx_SRC_PSI5S',0,8,177,2,25,32,13
	.byte	'SR',0,32
	.word	41235
	.byte	2,35,0,0,3
	.word	42369
	.byte	17
	.byte	'Ifx_SRC_PSI5S',0,8,180,2,3
	.word	42403
	.byte	14
	.byte	'_Ifx_SRC_QSPI',0,8,183,2,25,24,13
	.byte	'TX',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'RX',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'ERR',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'PT',0,4
	.word	39519
	.byte	2,35,12,13
	.byte	'reserved_10',0,4
	.word	41127
	.byte	2,35,16,13
	.byte	'U',0,4
	.word	39519
	.byte	2,35,20,0,3
	.word	42431
	.byte	17
	.byte	'Ifx_SRC_QSPI',0,8,191,2,3
	.word	42533
	.byte	14
	.byte	'_Ifx_SRC_SCU',0,8,194,2,25,20,13
	.byte	'DTS',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'ERU',0,16
	.word	41546
	.byte	2,35,4,0,3
	.word	42560
	.byte	17
	.byte	'Ifx_SRC_SCU',0,8,198,2,3
	.word	42606
	.byte	14
	.byte	'_Ifx_SRC_SENT',0,8,201,2,25,40,19,40
	.word	39519
	.byte	20,9,0,13
	.byte	'SR',0,40
	.word	42652
	.byte	2,35,0,0,3
	.word	42632
	.byte	17
	.byte	'Ifx_SRC_SENT',0,8,204,2,3
	.word	42674
	.byte	14
	.byte	'_Ifx_SRC_SMU',0,8,207,2,25,12,13
	.byte	'SR',0,12
	.word	41102
	.byte	2,35,0,0,3
	.word	42701
	.byte	17
	.byte	'Ifx_SRC_SMU',0,8,210,2,3
	.word	42733
	.byte	14
	.byte	'_Ifx_SRC_STM',0,8,213,2,25,8,13
	.byte	'SR0',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'SR1',0,4
	.word	39519
	.byte	2,35,4,0,3
	.word	42759
	.byte	17
	.byte	'Ifx_SRC_STM',0,8,217,2,3
	.word	42805
	.byte	14
	.byte	'_Ifx_SRC_VADCCG',0,8,220,2,25,16,13
	.byte	'SR0',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'SR1',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'SR2',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'SR3',0,4
	.word	39519
	.byte	2,35,12,0,3
	.word	42831
	.byte	17
	.byte	'Ifx_SRC_VADCCG',0,8,226,2,3
	.word	42906
	.byte	14
	.byte	'_Ifx_SRC_VADCG',0,8,229,2,25,16,13
	.byte	'SR0',0,4
	.word	39519
	.byte	2,35,0,13
	.byte	'SR1',0,4
	.word	39519
	.byte	2,35,4,13
	.byte	'SR2',0,4
	.word	39519
	.byte	2,35,8,13
	.byte	'SR3',0,4
	.word	39519
	.byte	2,35,12,0,3
	.word	42935
	.byte	17
	.byte	'Ifx_SRC_VADCG',0,8,235,2,3
	.word	43009
	.byte	14
	.byte	'_Ifx_SRC_XBAR',0,8,238,2,25,4,13
	.byte	'SRC',0,4
	.word	39519
	.byte	2,35,0,0,3
	.word	43037
	.byte	17
	.byte	'Ifx_SRC_XBAR',0,8,241,2,3
	.word	43071
	.byte	14
	.byte	'_Ifx_SRC_GAGBT',0,8,254,2,25,4,19,4
	.word	39579
	.byte	20,0,0,3
	.word	43119
	.byte	13
	.byte	'AGBT',0,4
	.word	43128
	.byte	2,35,0,0,3
	.word	43098
	.byte	17
	.byte	'Ifx_SRC_GAGBT',0,8,129,3,3
	.word	43148
	.byte	14
	.byte	'_Ifx_SRC_GASCLIN',0,8,132,3,25,48,19,48
	.word	39637
	.byte	20,3,0,3
	.word	43199
	.byte	13
	.byte	'ASCLIN',0,48
	.word	43208
	.byte	2,35,0,0,3
	.word	43176
	.byte	17
	.byte	'Ifx_SRC_GASCLIN',0,8,135,3,3
	.word	43230
	.byte	14
	.byte	'_Ifx_SRC_GBCU',0,8,138,3,25,4,3
	.word	39724
	.byte	13
	.byte	'SPB',0,4
	.word	43280
	.byte	2,35,0,0,3
	.word	43260
	.byte	17
	.byte	'Ifx_SRC_GBCU',0,8,141,3,3
	.word	43299
	.byte	14
	.byte	'_Ifx_SRC_GCAN',0,8,144,3,25,64,19,64
	.word	39789
	.byte	20,0,0,3
	.word	43346
	.byte	13
	.byte	'CAN',0,64
	.word	43355
	.byte	2,35,0,0,3
	.word	43326
	.byte	17
	.byte	'Ifx_SRC_GCAN',0,8,147,3,3
	.word	43374
	.byte	14
	.byte	'_Ifx_SRC_GCCU6',0,8,150,3,25,32,19,32
	.word	39855
	.byte	20,1,0,3
	.word	43422
	.byte	13
	.byte	'CCU6',0,32
	.word	43431
	.byte	2,35,0,0,3
	.word	43401
	.byte	17
	.byte	'Ifx_SRC_GCCU6',0,8,153,3,3
	.word	43451
	.byte	14
	.byte	'_Ifx_SRC_GCERBERUS',0,8,156,3,25,8,3
	.word	39953
	.byte	13
	.byte	'CERBERUS',0,8
	.word	43504
	.byte	2,35,0,0,3
	.word	43479
	.byte	17
	.byte	'Ifx_SRC_GCERBERUS',0,8,159,3,3
	.word	43528
	.byte	14
	.byte	'_Ifx_SRC_GCIF',0,8,162,3,25,16,19,16
	.word	40028
	.byte	20,0,0,3
	.word	43580
	.byte	13
	.byte	'CIF',0,16
	.word	43589
	.byte	2,35,0,0,3
	.word	43560
	.byte	17
	.byte	'Ifx_SRC_GCIF',0,8,165,3,3
	.word	43608
	.byte	14
	.byte	'_Ifx_SRC_GCPU',0,8,168,3,25,12,19,12
	.word	40127
	.byte	20,2,0,3
	.word	43655
	.byte	13
	.byte	'CPU',0,12
	.word	43664
	.byte	2,35,0,0,3
	.word	43635
	.byte	17
	.byte	'Ifx_SRC_GCPU',0,8,171,3,3
	.word	43683
	.byte	14
	.byte	'_Ifx_SRC_GDAM',0,8,174,3,25,24,19,24
	.word	40188
	.byte	20,0,0,3
	.word	43730
	.byte	13
	.byte	'DAM',0,24
	.word	43739
	.byte	2,35,0,0,3
	.word	43710
	.byte	17
	.byte	'Ifx_SRC_GDAM',0,8,177,3,3
	.word	43758
	.byte	14
	.byte	'_Ifx_SRC_GDMA',0,8,180,3,25,144,2,19,144,2
	.word	40255
	.byte	20,0,0,3
	.word	43806
	.byte	13
	.byte	'DMA',0,144,2
	.word	43816
	.byte	2,35,0,0,3
	.word	43785
	.byte	17
	.byte	'Ifx_SRC_GDMA',0,8,183,3,3
	.word	43836
	.byte	14
	.byte	'_Ifx_SRC_GDSADC',0,8,186,3,25,48,19,48
	.word	40367
	.byte	20,5,0,3
	.word	43885
	.byte	13
	.byte	'DSADC',0,48
	.word	43894
	.byte	2,35,0,0,3
	.word	43863
	.byte	17
	.byte	'Ifx_SRC_GDSADC',0,8,189,3,3
	.word	43915
	.byte	14
	.byte	'_Ifx_SRC_GEMEM',0,8,192,3,25,4,19,4
	.word	40443
	.byte	20,0,0,3
	.word	43965
	.byte	13
	.byte	'EMEM',0,4
	.word	43974
	.byte	2,35,0,0,3
	.word	43944
	.byte	17
	.byte	'Ifx_SRC_GEMEM',0,8,195,3,3
	.word	43994
	.byte	14
	.byte	'_Ifx_SRC_GERAY',0,8,198,3,25,80,19,80
	.word	40503
	.byte	20,0,0,3
	.word	44043
	.byte	13
	.byte	'ERAY',0,80
	.word	44052
	.byte	2,35,0,0,3
	.word	44022
	.byte	17
	.byte	'Ifx_SRC_GERAY',0,8,201,3,3
	.word	44072
	.byte	14
	.byte	'_Ifx_SRC_GETH',0,8,204,3,25,4,19,4
	.word	40666
	.byte	20,0,0,3
	.word	44120
	.byte	13
	.byte	'ETH',0,4
	.word	44129
	.byte	2,35,0,0,3
	.word	44100
	.byte	17
	.byte	'Ifx_SRC_GETH',0,8,207,3,3
	.word	44148
	.byte	14
	.byte	'_Ifx_SRC_GFCE',0,8,210,3,25,4,19,4
	.word	40724
	.byte	20,0,0,3
	.word	44195
	.byte	13
	.byte	'FCE',0,4
	.word	44204
	.byte	2,35,0,0,3
	.word	44175
	.byte	17
	.byte	'Ifx_SRC_GFCE',0,8,213,3,3
	.word	44223
	.byte	14
	.byte	'_Ifx_SRC_GGPSR',0,8,216,3,25,96,19,96
	.word	40782
	.byte	20,2,0,3
	.word	44271
	.byte	13
	.byte	'GPSR',0,96
	.word	44280
	.byte	2,35,0,0,3
	.word	44250
	.byte	17
	.byte	'Ifx_SRC_GGPSR',0,8,219,3,3
	.word	44300
	.byte	14
	.byte	'_Ifx_SRC_GGPT12',0,8,222,3,25,48,19,48
	.word	40912
	.byte	20,0,0,3
	.word	44350
	.byte	13
	.byte	'GPT12',0,48
	.word	44359
	.byte	2,35,0,0,3
	.word	44328
	.byte	17
	.byte	'Ifx_SRC_GGPT12',0,8,225,3,3
	.word	44380
	.byte	14
	.byte	'_Ifx_SRC_GGTM',0,8,228,3,25,208,18,19,208,18
	.word	41066
	.byte	20,0,0,3
	.word	44430
	.byte	13
	.byte	'GTM',0,208,18
	.word	44440
	.byte	2,35,0,0,3
	.word	44409
	.byte	17
	.byte	'Ifx_SRC_GGTM',0,8,231,3,3
	.word	44460
	.byte	14
	.byte	'_Ifx_SRC_GHSCT',0,8,234,3,25,4,19,4
	.word	41705
	.byte	20,0,0,3
	.word	44508
	.byte	13
	.byte	'HSCT',0,4
	.word	44517
	.byte	2,35,0,0,3
	.word	44487
	.byte	17
	.byte	'Ifx_SRC_GHSCT',0,8,237,3,3
	.word	44537
	.byte	14
	.byte	'_Ifx_SRC_GHSM',0,8,240,3,25,8,19,8
	.word	41765
	.byte	20,0,0,3
	.word	44585
	.byte	13
	.byte	'HSM',0,8
	.word	44594
	.byte	2,35,0,0,3
	.word	44565
	.byte	17
	.byte	'Ifx_SRC_GHSM',0,8,243,3,3
	.word	44613
	.byte	14
	.byte	'_Ifx_SRC_GHSSL',0,8,246,3,25,68,19,64
	.word	41824
	.byte	20,3,0,3
	.word	44661
	.byte	13
	.byte	'HSSL',0,64
	.word	44670
	.byte	2,35,0,13
	.byte	'EXI',0,4
	.word	39519
	.byte	2,35,64,0,3
	.word	44640
	.byte	17
	.byte	'Ifx_SRC_GHSSL',0,8,250,3,3
	.word	44703
	.byte	14
	.byte	'_Ifx_SRC_GI2C',0,8,253,3,25,80,19,80
	.word	41924
	.byte	20,0,0,3
	.word	44751
	.byte	13
	.byte	'I2C',0,80
	.word	44760
	.byte	2,35,0,0,3
	.word	44731
	.byte	17
	.byte	'Ifx_SRC_GI2C',0,8,128,4,3
	.word	44779
	.byte	14
	.byte	'_Ifx_SRC_GLMU',0,8,131,4,25,4,19,4
	.word	42082
	.byte	20,0,0,3
	.word	44826
	.byte	13
	.byte	'LMU',0,4
	.word	44835
	.byte	2,35,0,0,3
	.word	44806
	.byte	17
	.byte	'Ifx_SRC_GLMU',0,8,134,4,3
	.word	44854
	.byte	14
	.byte	'_Ifx_SRC_GMSC',0,8,137,4,25,40,19,40
	.word	42140
	.byte	20,1,0,3
	.word	44901
	.byte	13
	.byte	'MSC',0,40
	.word	44910
	.byte	2,35,0,0,3
	.word	44881
	.byte	17
	.byte	'Ifx_SRC_GMSC',0,8,140,4,3
	.word	44929
	.byte	14
	.byte	'_Ifx_SRC_GPMU',0,8,143,4,25,8,19,8
	.word	42251
	.byte	20,1,0,3
	.word	44976
	.byte	13
	.byte	'PMU',0,8
	.word	44985
	.byte	2,35,0,0,3
	.word	44956
	.byte	17
	.byte	'Ifx_SRC_GPMU',0,8,146,4,3
	.word	45004
	.byte	14
	.byte	'_Ifx_SRC_GPSI5',0,8,149,4,25,32,19,32
	.word	42309
	.byte	20,0,0,3
	.word	45052
	.byte	13
	.byte	'PSI5',0,32
	.word	45061
	.byte	2,35,0,0,3
	.word	45031
	.byte	17
	.byte	'Ifx_SRC_GPSI5',0,8,152,4,3
	.word	45081
	.byte	14
	.byte	'_Ifx_SRC_GPSI5S',0,8,155,4,25,32,19,32
	.word	42369
	.byte	20,0,0,3
	.word	45131
	.byte	13
	.byte	'PSI5S',0,32
	.word	45140
	.byte	2,35,0,0,3
	.word	45109
	.byte	17
	.byte	'Ifx_SRC_GPSI5S',0,8,158,4,3
	.word	45161
	.byte	14
	.byte	'_Ifx_SRC_GQSPI',0,8,161,4,25,96,19,96
	.word	42431
	.byte	20,3,0,3
	.word	45211
	.byte	13
	.byte	'QSPI',0,96
	.word	45220
	.byte	2,35,0,0,3
	.word	45190
	.byte	17
	.byte	'Ifx_SRC_GQSPI',0,8,164,4,3
	.word	45240
	.byte	14
	.byte	'_Ifx_SRC_GSCU',0,8,167,4,25,20,3
	.word	42560
	.byte	13
	.byte	'SCU',0,20
	.word	45288
	.byte	2,35,0,0,3
	.word	45268
	.byte	17
	.byte	'Ifx_SRC_GSCU',0,8,170,4,3
	.word	45307
	.byte	14
	.byte	'_Ifx_SRC_GSENT',0,8,173,4,25,40,19,40
	.word	42632
	.byte	20,0,0,3
	.word	45355
	.byte	13
	.byte	'SENT',0,40
	.word	45364
	.byte	2,35,0,0,3
	.word	45334
	.byte	17
	.byte	'Ifx_SRC_GSENT',0,8,176,4,3
	.word	45384
	.byte	14
	.byte	'_Ifx_SRC_GSMU',0,8,179,4,25,12,19,12
	.word	42701
	.byte	20,0,0,3
	.word	45432
	.byte	13
	.byte	'SMU',0,12
	.word	45441
	.byte	2,35,0,0,3
	.word	45412
	.byte	17
	.byte	'Ifx_SRC_GSMU',0,8,182,4,3
	.word	45460
	.byte	14
	.byte	'_Ifx_SRC_GSTM',0,8,185,4,25,24,19,24
	.word	42759
	.byte	20,2,0,3
	.word	45507
	.byte	13
	.byte	'STM',0,24
	.word	45516
	.byte	2,35,0,0,3
	.word	45487
	.byte	17
	.byte	'Ifx_SRC_GSTM',0,8,188,4,3
	.word	45535
	.byte	14
	.byte	'_Ifx_SRC_GVADC',0,8,191,4,25,192,2,19,128,1
	.word	42935
	.byte	20,7,0,3
	.word	45584
	.byte	13
	.byte	'G',0,128,1
	.word	45594
	.byte	2,35,0,19,160,1
	.word	195
	.byte	20,159,1,0,13
	.byte	'reserved_80',0,160,1
	.word	45611
	.byte	3,35,128,1,19,32
	.word	42831
	.byte	20,1,0,3
	.word	45645
	.byte	13
	.byte	'CG',0,32
	.word	45654
	.byte	3,35,160,2,0,3
	.word	45562
	.byte	17
	.byte	'Ifx_SRC_GVADC',0,8,196,4,3
	.word	45673
	.byte	14
	.byte	'_Ifx_SRC_GXBAR',0,8,199,4,25,4,3
	.word	43037
	.byte	13
	.byte	'XBAR',0,4
	.word	45722
	.byte	2,35,0,0,3
	.word	45701
	.byte	17
	.byte	'Ifx_SRC_GXBAR',0,8,202,4,3
	.word	45742
	.byte	14
	.byte	'ScuWdtPtrType',0,4,112,16,12,13
	.byte	'Wdtcon0Ptr',0,4
	.word	667
	.byte	2,35,0,13
	.byte	'WdtssrPtr',0,4
	.word	930
	.byte	2,35,4,13
	.byte	'WdtSaveValuePtr',0,4
	.word	263
	.byte	2,35,8,0,17
	.byte	'ScuWdtPtrType',0,4,120,3
	.word	45770
	.byte	19,12
	.word	242
	.byte	20,2,0
.L293:
	.byte	3
	.word	45876
.L294:
	.byte	3
	.word	45876
	.byte	19,48
	.word	45770
	.byte	20,3,0
.L295:
	.byte	11
	.word	45895
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L66:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,53,0,73,19,0,0,4,46,1,3,8,73
	.byte	19,54,15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60
	.byte	12,0,0,7,15,0,73,19,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,46,1,3,8,58,15,59,15,57,15,54,15,39,12
	.byte	63,12,60,12,0,0,10,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,11,38,0,73,19,0,0,12,23,1,58
	.byte	15,59,15,57,15,11,15,0,0,13,13,0,3,8,11,15,73,19,56,9,0,0,14,19,1,3,8,58,15,59,15,57,15,11,15,0,0,15,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,16,59,0,3,8,0,0,17,22,0,3,8,58,15,59,15,57,15,73,19,0,0,18,21,0
	.byte	54,15,0,0,19,1,1,11,15,73,19,0,0,20,33,0,47,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L67:
	.word	.L395-.L394
.L394:
	.half	3
	.word	.L397-.L396
.L396:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\tricore_general\\ssc\\inc',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\general\\tricore\\inc\\TC27xC',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\general\\tricore\\inc',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\BSW\\mcal_base\\general\\inc',0,0
	.byte	'Mcal_TcLib.h',0,1,0,0
	.byte	'IfxScu_regdef.h',0,2,0,0
	.byte	'Mcal.h',0,1,0,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0
	.byte	'Std_Types.h',0,4,0,0
	.byte	'IfxCpu_regdef.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,2,0,0,0
.L397:
.L395:
	.sdecl	'.debug_info',debug,cluster('Mcal_ResetENDINIT')
	.sect	'.debug_info'
.L68:
	.word	274
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L71,.L70
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_ResetENDINIT',0,1,245,5,6,1,1,1
	.word	.L41,.L180,.L40
	.byte	4
	.word	.L41,.L180
	.byte	5
	.byte	'CoreID',0,1,247,5,10
	.word	.L181,.L182
	.byte	5
	.byte	'Ctr',0,1,248,5,10
	.word	.L181,.L183
	.byte	5
	.byte	'CtrRedn',0,1,249,5,10
	.word	.L181,.L184
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_ResetENDINIT')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_ResetENDINIT')
	.sect	'.debug_line'
.L70:
	.word	.L399-.L398
.L398:
	.half	3
	.word	.L401-.L400
.L400:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L401:
	.byte	5,21,7,0,5,2
	.word	.L41
	.byte	3,250,5,1,5,39,9
	.half	.L402-.L41
	.byte	1,5,28,9
	.half	.L356-.L402
	.byte	3,8,1,5,34,9
	.half	.L403-.L356
	.byte	3,2,1,5,9,9
	.half	.L404-.L403
	.byte	1,5,33,9
	.half	.L405-.L404
	.byte	1,5,52,9
	.half	.L358-.L405
	.byte	3,1,1,5,23,9
	.half	.L406-.L358
	.byte	1,5,51,9
	.half	.L407-.L406
	.byte	1,5,22,9
	.half	.L408-.L407
	.byte	1,5,3,9
	.half	.L409-.L408
	.byte	3,4,1,5,27,7,9
	.half	.L410-.L409
	.byte	3,2,1,5,3,9
	.half	.L12-.L410
	.byte	3,3,1,5,26,7,9
	.half	.L411-.L12
	.byte	3,2,1,5,28,9
	.half	.L13-.L411
	.byte	3,3,1,5,3,9
	.half	.L359-.L13
	.byte	1,5,27,9
	.half	.L412-.L359
	.byte	1,5,28,9
	.half	.L413-.L412
	.byte	1,5,3,9
	.half	.L414-.L413
	.byte	1,5,27,9
	.half	.L415-.L414
	.byte	1,5,35,9
	.half	.L416-.L415
	.byte	1,5,32,9
	.half	.L417-.L416
	.byte	3,1,1,5,3,9
	.half	.L418-.L417
	.byte	1,5,31,9
	.half	.L419-.L418
	.byte	1,5,32,9
	.half	.L420-.L419
	.byte	1,5,3,9
	.half	.L357-.L420
	.byte	1,5,31,9
	.half	.L421-.L357
	.byte	1,5,39,9
	.half	.L422-.L421
	.byte	1,5,1,9
	.half	.L423-.L422
	.byte	3,3,1,7,9
	.half	.L72-.L423
	.byte	0,1,1
.L399:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_ResetENDINIT')
	.sect	'.debug_ranges'
.L71:
	.word	-1,.L41,0,.L72-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SetENDINIT')
	.sect	'.debug_info'
.L73:
	.word	272
	.half	3
	.word	.L74
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L76,.L75
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_SetENDINIT',0,1,231,6,6,1,1,1
	.word	.L45,.L185,.L44
	.byte	4
	.word	.L45,.L185
	.byte	5
	.byte	'CoreID',0,1,233,6,10
	.word	.L181,.L186
	.byte	5
	.byte	'Ctr',0,1,234,6,10
	.word	.L181,.L187
	.byte	5
	.byte	'CtrRedn',0,1,235,6,10
	.word	.L181,.L188
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SetENDINIT')
	.sect	'.debug_abbrev'
.L74:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SetENDINIT')
	.sect	'.debug_line'
.L75:
	.word	.L425-.L424
.L424:
	.half	3
	.word	.L427-.L426
.L426:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L427:
	.byte	5,21,7,0,5,2
	.word	.L45
	.byte	3,236,6,1,5,39,9
	.half	.L428-.L45
	.byte	1,5,34,9
	.half	.L362-.L428
	.byte	3,1,1,5,9,9
	.half	.L429-.L362
	.byte	1,5,33,9
	.half	.L430-.L429
	.byte	1,5,52,9
	.half	.L363-.L430
	.byte	3,1,1,5,23,9
	.half	.L431-.L363
	.byte	1,5,51,9
	.half	.L432-.L431
	.byte	1,5,22,9
	.half	.L433-.L432
	.byte	1,5,3,9
	.half	.L434-.L433
	.byte	3,3,1,5,27,7,9
	.half	.L435-.L434
	.byte	3,2,1,5,32,9
	.half	.L16-.L435
	.byte	3,5,1,5,7,9
	.half	.L364-.L16
	.byte	1,5,31,9
	.half	.L436-.L364
	.byte	1,5,3,9
	.half	.L437-.L436
	.byte	1,5,30,7,9
	.half	.L438-.L437
	.byte	3,2,1,5,5,9
	.half	.L439-.L438
	.byte	1,5,29,9
	.half	.L440-.L439
	.byte	1,5,30,9
	.half	.L441-.L440
	.byte	1,5,5,9
	.half	.L442-.L441
	.byte	1,5,29,9
	.half	.L443-.L442
	.byte	1,5,37,9
	.half	.L444-.L443
	.byte	1,5,34,9
	.half	.L445-.L444
	.byte	3,1,1,5,5,9
	.half	.L446-.L445
	.byte	1,5,33,9
	.half	.L447-.L446
	.byte	1,5,34,9
	.half	.L448-.L447
	.byte	1,5,5,9
	.half	.L449-.L448
	.byte	1,5,33,9
	.half	.L450-.L449
	.byte	1,5,41,9
	.half	.L451-.L450
	.byte	1,5,32,9
	.half	.L17-.L451
	.byte	3,3,1,5,7,9
	.half	.L452-.L17
	.byte	1,5,31,9
	.half	.L453-.L452
	.byte	1,5,3,9
	.half	.L454-.L453
	.byte	1,5,25,7,9
	.half	.L455-.L454
	.byte	3,2,1,5,27,9
	.half	.L18-.L455
	.byte	3,4,1,5,1,9
	.half	.L456-.L18
	.byte	3,1,1,7,9
	.half	.L77-.L456
	.byte	0,1,1
.L425:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SetENDINIT')
	.sect	'.debug_ranges'
.L76:
	.word	-1,.L45,0,.L77-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SafetyModifyAccess')
	.sect	'.debug_info'
.L78:
	.word	269
	.half	3
	.word	.L79
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L81,.L80
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_SafetyModifyAccess',0,1,181,8,6,1,1,1
	.word	.L53,.L189,.L52
	.byte	4
	.byte	'NewPassword',0,1,181,8,43
	.word	.L190,.L191
	.byte	4
	.byte	'NewReload',0,1,181,8,68
	.word	.L192,.L193
	.byte	5
	.word	.L53,.L189
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SafetyModifyAccess')
	.sect	'.debug_abbrev'
.L79:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SafetyModifyAccess')
	.sect	'.debug_line'
.L80:
	.word	.L458-.L457
.L457:
	.half	3
	.word	.L460-.L459
.L459:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L460:
	.byte	5,6,7,0,5,2
	.word	.L53
	.byte	3,180,8,1,5,26,9
	.half	.L371-.L53
	.byte	3,2,1,5,43,9
	.half	.L368-.L371
	.byte	1,5,1,9
	.half	.L372-.L368
	.byte	3,1,1,7,9
	.half	.L82-.L372
	.byte	0,1,1
.L458:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SafetyModifyAccess')
	.sect	'.debug_ranges'
.L81:
	.word	-1,.L53,0,.L82-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_CpuWdtModifyAccess')
	.sect	'.debug_info'
.L83:
	.word	290
	.half	3
	.word	.L84
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L86,.L85
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_CpuWdtModifyAccess',0,1,219,8,6,1,1,1
	.word	.L55,.L194,.L54
	.byte	4
	.byte	'NewPassword',0,1,219,8,43
	.word	.L195,.L196
	.byte	4
	.byte	'NewReload',0,1,219,8,68
	.word	.L197,.L198
	.byte	5
	.word	.L55,.L194
	.byte	6
	.byte	'CoreId',0,1,221,8,9
	.word	.L199,.L200
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_CpuWdtModifyAccess')
	.sect	'.debug_abbrev'
.L84:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_CpuWdtModifyAccess')
	.sect	'.debug_line'
.L85:
	.word	.L462-.L461
.L461:
	.half	3
	.word	.L464-.L463
.L463:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L464:
	.byte	5,6,7,0,5,2
	.word	.L55
	.byte	3,218,8,1,5,26,9
	.half	.L377-.L55
	.byte	3,2,1,5,19,9
	.half	.L465-.L377
	.byte	1,5,45,9
	.half	.L466-.L465
	.byte	1,5,56,9
	.half	.L373-.L466
	.byte	3,1,1,5,1,9
	.half	.L376-.L373
	.byte	3,1,1,7,9
	.half	.L87-.L376
	.byte	0,1,1
.L462:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_CpuWdtModifyAccess')
	.sect	'.debug_ranges'
.L86:
	.word	-1,.L55,0,.L87-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SafetyCheckAccess')
	.sect	'.debug_info'
.L88:
	.word	271
	.half	3
	.word	.L89
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L91,.L90
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_SafetyCheckAccess',0,1,129,9,6,1,1,1
	.word	.L57,.L201,.L56
	.byte	4
	.byte	'CheckPassword',0,1,129,9,42
	.word	.L202,.L203
	.byte	4
	.byte	'CheckTimer',0,1,129,9,69
	.word	.L204,.L205
	.byte	5
	.word	.L57,.L201
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SafetyCheckAccess')
	.sect	'.debug_abbrev'
.L89:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SafetyCheckAccess')
	.sect	'.debug_line'
.L90:
	.word	.L468-.L467
.L467:
	.half	3
	.word	.L470-.L469
.L469:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L470:
	.byte	5,6,7,0,5,2
	.word	.L57
	.byte	3,128,9,1,5,27,9
	.half	.L381-.L57
	.byte	3,2,1,5,46,9
	.half	.L378-.L381
	.byte	1,5,1,9
	.half	.L382-.L378
	.byte	3,1,1,7,9
	.half	.L92-.L382
	.byte	0,1,1
.L468:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SafetyCheckAccess')
	.sect	'.debug_ranges'
.L91:
	.word	-1,.L57,0,.L92-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_CpuWdtCheckAccess')
	.sect	'.debug_info'
.L93:
	.word	292
	.half	3
	.word	.L94
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L96,.L95
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_CpuWdtCheckAccess',0,1,166,9,6,1,1,1
	.word	.L59,.L206,.L58
	.byte	4
	.byte	'CheckPassword',0,1,166,9,42
	.word	.L207,.L208
	.byte	4
	.byte	'CheckTimer',0,1,166,9,69
	.word	.L209,.L210
	.byte	5
	.word	.L59,.L206
	.byte	6
	.byte	'CoreId',0,1,168,9,9
	.word	.L199,.L211
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_CpuWdtCheckAccess')
	.sect	'.debug_abbrev'
.L94:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_CpuWdtCheckAccess')
	.sect	'.debug_line'
.L95:
	.word	.L472-.L471
.L471:
	.half	3
	.word	.L474-.L473
.L473:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L474:
	.byte	5,6,7,0,5,2
	.word	.L59
	.byte	3,165,9,1,5,26,9
	.half	.L387-.L59
	.byte	3,2,1,5,19,9
	.half	.L475-.L387
	.byte	1,5,45,9
	.half	.L476-.L475
	.byte	1,5,55,9
	.half	.L383-.L476
	.byte	3,1,1,5,1,9
	.half	.L386-.L383
	.byte	3,1,1,7,9
	.half	.L97-.L386
	.byte	0,1,1
.L472:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_CpuWdtCheckAccess')
	.sect	'.debug_ranges'
.L96:
	.word	-1,.L59,0,.L97-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SafetyPwSequence')
	.sect	'.debug_info'
.L98:
	.word	245
	.half	3
	.word	.L99
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L101,.L100
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_SafetyPwSequence',0,1,193,9,8
	.word	.L181
	.byte	1,1,1
	.word	.L61,.L212,.L60
	.byte	4
	.byte	'Password',0,1,193,9,44
	.word	.L213,.L214
	.byte	5
	.word	.L61,.L212
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SafetyPwSequence')
	.sect	'.debug_abbrev'
.L99:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SafetyPwSequence')
	.sect	'.debug_line'
.L100:
	.word	.L478-.L477
.L477:
	.half	3
	.word	.L480-.L479
.L479:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L480:
	.byte	5,8,7,0,5,2
	.word	.L61
	.byte	3,192,9,1,5,34,9
	.half	.L389-.L61
	.byte	3,2,1,5,38,9
	.half	.L388-.L389
	.byte	1,5,5,9
	.half	.L390-.L388
	.byte	1,5,1,9
	.half	.L26-.L390
	.byte	3,1,1,7,9
	.half	.L102-.L26
	.byte	0,1,1
.L478:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SafetyPwSequence')
	.sect	'.debug_ranges'
.L101:
	.word	-1,.L61,0,.L102-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_CpuWdtPwSequence')
	.sect	'.debug_info'
.L103:
	.word	266
	.half	3
	.word	.L104
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L106,.L105
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_CpuWdtPwSequence',0,1,220,9,8
	.word	.L181
	.byte	1,1,1
	.word	.L63,.L215,.L62
	.byte	4
	.byte	'Password',0,1,220,9,44
	.word	.L216,.L217
	.byte	5
	.word	.L63,.L215
	.byte	6
	.byte	'CoreId',0,1,222,9,9
	.word	.L199,.L218
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_CpuWdtPwSequence')
	.sect	'.debug_abbrev'
.L104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_CpuWdtPwSequence')
	.sect	'.debug_line'
.L105:
	.word	.L482-.L481
.L481:
	.half	3
	.word	.L484-.L483
.L483:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L484:
	.byte	5,8,7,0,5,2
	.word	.L63
	.byte	3,219,9,1,5,26,9
	.half	.L392-.L63
	.byte	3,2,1,5,19,9
	.half	.L485-.L392
	.byte	1,5,45,9
	.half	.L486-.L485
	.byte	1,5,46,9
	.half	.L391-.L486
	.byte	3,1,1,5,3,9
	.half	.L393-.L391
	.byte	1,5,1,9
	.half	.L27-.L393
	.byte	3,1,1,7,9
	.half	.L107-.L27
	.byte	0,1,1
.L482:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_CpuWdtPwSequence')
	.sect	'.debug_ranges'
.L106:
	.word	-1,.L63,0,.L107-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_ResetCpuENDINIT')
	.sect	'.debug_info'
.L108:
	.word	415
	.half	3
	.word	.L109
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L111,.L110
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_ResetCpuENDINIT',0,1,187,3,6,1,1,1
	.word	.L33,.L219,.L32
	.byte	4
	.byte	'wdt',0,1,187,3,39
	.word	.L220,.L221
	.byte	5
	.word	.L33,.L219
	.byte	6
	.byte	'NewValCon0',0,1,189,3,10
	.word	.L181,.L222
	.byte	6
	.byte	'NewPw',0,1,190,3,10
	.word	.L181,.L223
	.byte	6
	.byte	'NewRel',0,1,191,3,10
	.word	.L181,.L224
	.byte	6
	.byte	'Temp',0,1,192,3,10
	.word	.L181,.L225
	.byte	6
	.byte	'dummy',0,1,193,3,19
	.word	.L226,.L227
	.byte	6
	.byte	'ScuWdtcon0Ptr',0,1,195,3,33
	.word	.L228,.L229
	.byte	6
	.byte	'ScuSsrPtr',0,1,197,3,33
	.word	.L230,.L231
	.byte	6
	.byte	'WdtTimPwSavePtr',0,1,199,3,11
	.word	.L232,.L233
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_ResetCpuENDINIT')
	.sect	'.debug_abbrev'
.L109:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_ResetCpuENDINIT')
	.sect	'.debug_line'
.L110:
	.word	.L488-.L487
.L487:
	.half	3
	.word	.L490-.L489
.L489:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L490:
	.byte	5,6,7,0,5,2
	.word	.L33
	.byte	3,186,3,1,5,46,9
	.half	.L308-.L33
	.byte	3,9,1,5,33,9
	.half	.L491-.L308
	.byte	1,5,46,9
	.half	.L492-.L491
	.byte	1,5,53,9
	.half	.L493-.L492
	.byte	1,5,46,9
	.half	.L309-.L493
	.byte	3,2,1,5,33,9
	.half	.L494-.L309
	.byte	1,5,46,9
	.half	.L495-.L494
	.byte	1,5,53,9
	.half	.L496-.L495
	.byte	1,5,46,9
	.half	.L310-.L496
	.byte	3,1,1,5,33,9
	.half	.L497-.L310
	.byte	1,5,46,9
	.half	.L498-.L497
	.byte	1,5,53,9
	.half	.L499-.L498
	.byte	1,5,30,9
	.half	.L311-.L499
	.byte	3,3,1,5,37,9
	.half	.L312-.L311
	.byte	3,3,1,5,10,9
	.half	.L314-.L312
	.byte	1,5,35,9
	.half	.L316-.L314
	.byte	3,3,1,5,28,9
	.half	.L315-.L316
	.byte	3,3,1,9
	.half	.L317-.L315
	.byte	3,1,1,5,31,9
	.half	.L313-.L317
	.byte	3,4,1,5,37,9
	.half	.L500-.L313
	.byte	1,5,35,9
	.half	.L319-.L500
	.byte	1,5,28,9
	.half	.L501-.L319
	.byte	3,1,1,5,32,9
	.half	.L502-.L501
	.byte	1,5,8,9
	.half	.L503-.L502
	.byte	1,5,20,9
	.half	.L504-.L503
	.byte	3,1,1,5,21,9
	.half	.L505-.L504
	.byte	3,2,1,5,14,9
	.half	.L506-.L505
	.byte	3,2,1,9
	.half	.L507-.L506
	.byte	3,1,1,5,20,9
	.half	.L508-.L507
	.byte	3,2,1,5,24,9
	.half	.L509-.L508
	.byte	3,3,1,5,9,9
	.half	.L318-.L509
	.byte	1,5,3,9
	.half	.L510-.L318
	.byte	3,1,1,5,1,9
	.half	.L6-.L510
	.byte	3,1,1,7,9
	.half	.L112-.L6
	.byte	0,1,1
.L488:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_ResetCpuENDINIT')
	.sect	'.debug_ranges'
.L111:
	.word	-1,.L33,0,.L112-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SetCpuENDINIT')
	.sect	'.debug_info'
.L113:
	.word	395
	.half	3
	.word	.L114
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L116,.L115
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_SetCpuENDINIT',0,1,254,3,6,1,1,1
	.word	.L35,.L234,.L34
	.byte	4
	.byte	'wdt',0,1,254,3,37
	.word	.L235,.L236
	.byte	5
	.word	.L35,.L234
	.byte	6
	.byte	'NewValCon0',0,1,128,4,10
	.word	.L181,.L237
	.byte	6
	.byte	'NewPw',0,1,129,4,10
	.word	.L181,.L238
	.byte	6
	.byte	'NewRel',0,1,130,4,10
	.word	.L181,.L239
	.byte	6
	.byte	'dummy',0,1,131,4,19
	.word	.L240,.L241
	.byte	6
	.byte	'ScuWdtcon0Ptr',0,1,133,4,33
	.word	.L228,.L242
	.byte	6
	.byte	'ScuSsrPtr',0,1,135,4,33
	.word	.L230,.L243
	.byte	6
	.byte	'WdtTimPwSavePtr',0,1,137,4,11
	.word	.L232,.L244
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SetCpuENDINIT')
	.sect	'.debug_abbrev'
.L114:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SetCpuENDINIT')
	.sect	'.debug_line'
.L115:
	.word	.L512-.L511
.L511:
	.half	3
	.word	.L514-.L513
.L513:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L514:
	.byte	5,6,7,0,5,2
	.word	.L35
	.byte	3,253,3,1,5,50,9
	.half	.L322-.L35
	.byte	3,8,1,5,37,9
	.half	.L515-.L322
	.byte	1,5,50,9
	.half	.L516-.L515
	.byte	1,5,57,9
	.half	.L517-.L516
	.byte	1,5,50,9
	.half	.L323-.L517
	.byte	3,2,1,5,37,9
	.half	.L518-.L323
	.byte	1,5,50,9
	.half	.L519-.L518
	.byte	1,5,57,9
	.half	.L520-.L519
	.byte	1,5,50,9
	.half	.L324-.L520
	.byte	3,1,1,5,37,9
	.half	.L521-.L324
	.byte	1,5,50,9
	.half	.L522-.L521
	.byte	1,5,57,9
	.half	.L523-.L522
	.byte	1,5,30,9
	.half	.L325-.L523
	.byte	3,3,1,5,37,9
	.half	.L326-.L325
	.byte	3,3,1,5,10,9
	.half	.L328-.L326
	.byte	1,5,35,9
	.half	.L330-.L328
	.byte	3,3,1,5,29,9
	.half	.L329-.L330
	.byte	3,3,1,9
	.half	.L331-.L329
	.byte	3,1,1,5,21,9
	.half	.L327-.L331
	.byte	3,3,1,5,14,9
	.half	.L524-.L327
	.byte	3,3,1,5,19,9
	.half	.L332-.L524
	.byte	3,3,1,5,38,9
	.half	.L525-.L332
	.byte	3,1,1,5,42,9
	.half	.L526-.L525
	.byte	1,5,21,9
	.half	.L527-.L526
	.byte	3,1,1,5,66,9
	.half	.L528-.L527
	.byte	3,127,1,5,36,9
	.half	.L529-.L528
	.byte	3,127,1,5,14,9
	.half	.L530-.L529
	.byte	1,9
	.half	.L531-.L530
	.byte	3,6,1,5,18,9
	.half	.L532-.L531
	.byte	3,1,1,5,37,9
	.half	.L533-.L532
	.byte	1,5,35,9
	.half	.L534-.L533
	.byte	1,5,21,9
	.half	.L535-.L534
	.byte	3,1,1,5,38,9
	.half	.L536-.L535
	.byte	1,5,19,9
	.half	.L537-.L536
	.byte	1,5,18,9
	.half	.L538-.L537
	.byte	3,1,1,5,67,9
	.half	.L539-.L538
	.byte	3,126,1,5,14,9
	.half	.L540-.L539
	.byte	1,9
	.half	.L541-.L540
	.byte	3,5,1,5,20,9
	.half	.L333-.L541
	.byte	3,1,1,5,24,9
	.half	.L542-.L333
	.byte	3,3,1,5,9,9
	.half	.L334-.L542
	.byte	1,5,3,9
	.half	.L543-.L334
	.byte	3,1,1,5,1,9
	.half	.L7-.L543
	.byte	3,1,1,7,9
	.half	.L117-.L7
	.byte	0,1,1
.L512:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SetCpuENDINIT')
	.sect	'.debug_ranges'
.L116:
	.word	-1,.L35,0,.L117-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_ResetSafetyENDINIT_Timed')
	.sect	'.debug_info'
.L118:
	.word	269
	.half	3
	.word	.L119
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L121,.L120
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_ResetSafetyENDINIT_Timed',0,1,204,7,6,1,1,1
	.word	.L49,.L245,.L48
	.byte	4
	.byte	'TimeOut',0,1,204,7,43
	.word	.L181,.L246
	.byte	5
	.word	.L49,.L245
	.byte	6
	.byte	'RetVal',0,1,206,7,18
	.word	.L199,.L247
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_ResetSafetyENDINIT_Timed')
	.sect	'.debug_abbrev'
.L119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_ResetSafetyENDINIT_Timed')
	.sect	'.debug_line'
.L120:
	.word	.L545-.L544
.L544:
	.half	3
	.word	.L547-.L546
.L546:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L547:
	.byte	5,30,7,0,5,2
	.word	.L49
	.byte	3,207,7,1,5,56,9
	.half	.L548-.L49
	.byte	1,5,3,9
	.half	.L367-.L548
	.byte	3,2,1,5,5,7,9
	.half	.L549-.L367
	.byte	3,7,1,5,33,9
	.half	.L550-.L549
	.byte	1,5,9,9
	.half	.L551-.L550
	.byte	3,2,1,5,38,9
	.half	.L552-.L551
	.byte	1,5,37,9
	.half	.L553-.L552
	.byte	1,5,5,9
	.half	.L554-.L553
	.byte	1,5,29,7,9
	.half	.L555-.L554
	.byte	3,2,1,9
	.half	.L23-.L555
	.byte	3,4,1,5,31,9
	.half	.L556-.L23
	.byte	1,5,27,9
	.half	.L22-.L556
	.byte	3,4,1,5,1,9
	.half	.L24-.L22
	.byte	3,3,1,7,9
	.half	.L122-.L24
	.byte	0,1,1
.L545:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_ResetSafetyENDINIT_Timed')
	.sect	'.debug_ranges'
.L121:
	.word	-1,.L49,0,.L122-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SetSafetyENDINIT_Timed')
	.sect	'.debug_info'
.L123:
	.word	225
	.half	3
	.word	.L124
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L126,.L125
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_SetSafetyENDINIT_Timed',0,1,128,8,6,1,1,1
	.word	.L51,.L248,.L50
	.byte	4
	.word	.L51,.L248
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SetSafetyENDINIT_Timed')
	.sect	'.debug_abbrev'
.L124:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SetSafetyENDINIT_Timed')
	.sect	'.debug_line'
.L125:
	.word	.L558-.L557
.L557:
	.half	3
	.word	.L560-.L559
.L559:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L560:
	.byte	5,7,7,0,5,2
	.word	.L51
	.byte	3,134,8,1,5,36,9
	.half	.L561-.L51
	.byte	1,5,35,9
	.half	.L562-.L561
	.byte	1,5,3,9
	.half	.L563-.L562
	.byte	1,5,28,7,9
	.half	.L564-.L563
	.byte	3,2,1,5,25,9
	.half	.L25-.L564
	.byte	3,3,1,5,3,9
	.half	.L565-.L25
	.byte	3,4,1,5,31,9
	.half	.L566-.L565
	.byte	1,5,25,9
	.half	.L567-.L566
	.byte	3,1,1,5,1,9
	.half	.L568-.L567
	.byte	3,2,1,7,9
	.half	.L127-.L568
	.byte	0,1,1
.L558:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SetSafetyENDINIT_Timed')
	.sect	'.debug_ranges'
.L126:
	.word	-1,.L51,0,.L127-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lCpuPwSequence')
	.sect	'.debug_info'
.L128:
	.word	348
	.half	3
	.word	.L129
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L131,.L130
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_lCpuPwSequence',0,1,232,2,16
	.word	.L181
	.byte	1,1
	.word	.L29,.L249,.L28
	.byte	4
	.byte	'wdt',0,1,232,2,49
	.word	.L250,.L251
	.byte	4
	.byte	'Password',0,1,232,2,67
	.word	.L252,.L253
	.byte	5
	.word	.L29,.L249
	.byte	6
	.byte	'Result',0,1,234,2,10
	.word	.L181,.L254
	.byte	6
	.byte	'ScuSsrPtr',0,1,236,2,31
	.word	.L230,.L255
	.byte	5
	.word	.L256,.L2
	.byte	6
	.byte	'lfsr',0,1,250,2,12
	.word	.L181,.L257
	.byte	6
	.byte	'bit',0,1,251,2,12
	.word	.L181,.L258
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lCpuPwSequence')
	.sect	'.debug_abbrev'
.L129:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lCpuPwSequence')
	.sect	'.debug_line'
.L130:
	.word	.L570-.L569
.L569:
	.half	3
	.word	.L572-.L571
.L571:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L572:
	.byte	5,30,7,0,5,2
	.word	.L29
	.byte	3,233,2,1,5,28,9
	.half	.L297-.L29
	.byte	1,5,56,9
	.half	.L296-.L297
	.byte	3,2,1,5,43,9
	.half	.L573-.L296
	.byte	1,5,56,9
	.half	.L574-.L573
	.byte	1,5,63,9
	.half	.L575-.L574
	.byte	1,5,23,9
	.half	.L299-.L575
	.byte	3,4,1,5,21,9
	.half	.L576-.L299
	.byte	1,5,25,9
	.half	.L577-.L576
	.byte	3,1,1,5,16,9
	.half	.L578-.L577
	.byte	1,5,14,9
	.half	.L579-.L578
	.byte	3,1,1,5,53,9
	.half	.L580-.L579
	.byte	3,126,1,5,19,9
	.half	.L298-.L580
	.byte	3,5,1,5,3,9
	.half	.L581-.L298
	.byte	1,5,26,7,9
	.half	.L256-.L581
	.byte	3,6,1,5,38,9
	.half	.L582-.L256
	.byte	1,5,31,9
	.half	.L583-.L582
	.byte	1,5,51,9
	.half	.L584-.L583
	.byte	1,5,44,9
	.half	.L585-.L584
	.byte	1,5,64,9
	.half	.L586-.L585
	.byte	1,5,57,9
	.half	.L587-.L586
	.byte	1,5,21,9
	.half	.L301-.L587
	.byte	3,1,1,5,27,9
	.half	.L588-.L301
	.byte	3,1,1,5,33,9
	.half	.L300-.L588
	.byte	1,5,43,9
	.half	.L302-.L300
	.byte	1,5,41,9
	.half	.L303-.L302
	.byte	1,5,3,9
	.half	.L2-.L303
	.byte	3,2,1,5,1,9
	.half	.L3-.L2
	.byte	3,1,1,7,9
	.half	.L132-.L3
	.byte	0,1,1
.L570:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lCpuPwSequence')
	.sect	'.debug_ranges'
.L131:
	.word	-1,.L29,0,.L132-.L29,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lCpuRelValue')
	.sect	'.debug_info'
.L133:
	.word	302
	.half	3
	.word	.L134
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L136,.L135
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_lCpuRelValue',0,1,152,3,15
	.word	.L181
	.byte	1,1
	.word	.L31,.L259,.L30
	.byte	4
	.byte	'wdt',0,1,152,3,45
	.word	.L260,.L261
	.byte	4
	.byte	'TimReload',0,1,152,3,63
	.word	.L262,.L263
	.byte	5
	.word	.L31,.L259
	.byte	6
	.byte	'Result',0,1,154,3,10
	.word	.L181,.L264
	.byte	6
	.byte	'ScuSsrPtr',0,1,156,3,31
	.word	.L230,.L265
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lCpuRelValue')
	.sect	'.debug_abbrev'
.L134:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lCpuRelValue')
	.sect	'.debug_line'
.L135:
	.word	.L590-.L589
.L589:
	.half	3
	.word	.L592-.L591
.L591:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L592:
	.byte	5,29,7,0,5,2
	.word	.L31
	.byte	3,153,3,1,5,56,9
	.half	.L304-.L31
	.byte	3,2,1,5,43,9
	.half	.L593-.L304
	.byte	1,5,56,9
	.half	.L594-.L593
	.byte	1,5,63,9
	.half	.L595-.L594
	.byte	1,5,19,9
	.half	.L305-.L595
	.byte	3,3,1,5,3,9
	.half	.L596-.L305
	.byte	1,5,46,7,9
	.half	.L597-.L596
	.byte	3,2,1,5,25,9
	.half	.L598-.L597
	.byte	1,5,52,9
	.half	.L599-.L598
	.byte	1,5,3,9
	.half	.L4-.L599
	.byte	3,2,1,5,1,9
	.half	.L5-.L4
	.byte	3,1,1,7,9
	.half	.L137-.L5
	.byte	0,1,1
.L590:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lCpuRelValue')
	.sect	'.debug_ranges'
.L136:
	.word	-1,.L31,0,.L137-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lCpuModifyAccess')
	.sect	'.debug_info'
.L138:
	.word	458
	.half	3
	.word	.L139
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L141,.L140
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_lCpuModifyAccess',0,1,203,4,13,1,1
	.word	.L37,.L266,.L36
	.byte	4
	.byte	'wdt',0,1,205,4,13
	.word	.L267,.L268
	.byte	4
	.byte	'NewPassword',0,1,206,4,14
	.word	.L269,.L270
	.byte	4
	.byte	'NewReload',0,1,207,4,14
	.word	.L271,.L272
	.byte	5
	.word	.L37,.L266
	.byte	6
	.byte	'NewValCon0',0,1,210,4,10
	.word	.L181,.L273
	.byte	6
	.byte	'NewPw',0,1,211,4,10
	.word	.L181,.L274
	.byte	6
	.byte	'NewRel',0,1,212,4,10
	.word	.L181,.L275
	.byte	6
	.byte	'NewTimer',0,1,213,4,10
	.word	.L181,.L276
	.byte	6
	.byte	'NewPwd',0,1,214,4,10
	.word	.L181,.L277
	.byte	6
	.byte	'CurrState',0,1,215,4,10
	.word	.L181,.L278
	.byte	6
	.byte	'dummy',0,1,216,4,19
	.word	.L279,.L280
	.byte	6
	.byte	'ScuWdtcon0Ptr',0,1,218,4,33
	.word	.L228,.L281
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lCpuModifyAccess')
	.sect	'.debug_abbrev'
.L139:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lCpuModifyAccess')
	.sect	'.debug_line'
.L140:
	.word	.L601-.L600
.L600:
	.half	3
	.word	.L603-.L602
.L602:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L603:
	.byte	5,13,7,0,5,2
	.word	.L37
	.byte	3,202,4,1,5,52,9
	.half	.L339-.L37
	.byte	3,16,1,5,39,9
	.half	.L604-.L339
	.byte	1,5,52,9
	.half	.L605-.L604
	.byte	1,5,59,9
	.half	.L606-.L605
	.byte	1,5,28,9
	.half	.L340-.L606
	.byte	3,4,1,5,29,9
	.half	.L336-.L340
	.byte	3,2,1,5,27,9
	.half	.L341-.L336
	.byte	3,1,1,9
	.half	.L343-.L341
	.byte	3,1,1,5,29,9
	.half	.L345-.L343
	.byte	3,1,1,5,27,9
	.half	.L346-.L345
	.byte	1,5,37,9
	.half	.L607-.L346
	.byte	3,3,1,5,10,9
	.half	.L347-.L607
	.byte	1,5,35,9
	.half	.L349-.L347
	.byte	3,3,1,5,28,9
	.half	.L348-.L349
	.byte	3,3,1,9
	.half	.L350-.L348
	.byte	3,1,1,5,21,9
	.half	.L608-.L350
	.byte	3,3,1,5,20,9
	.half	.L609-.L608
	.byte	3,3,1,5,3,9
	.half	.L610-.L609
	.byte	1,5,28,7,9
	.half	.L611-.L610
	.byte	3,2,1,5,22,9
	.half	.L8-.L611
	.byte	3,4,1,5,3,9
	.half	.L612-.L8
	.byte	1,5,14,7,9
	.half	.L613-.L612
	.byte	3,2,1,9
	.half	.L9-.L613
	.byte	3,4,1,9
	.half	.L351-.L9
	.byte	3,1,1,9
	.half	.L342-.L351
	.byte	3,4,1,5,27,9
	.half	.L352-.L342
	.byte	3,2,1,5,25,9
	.half	.L614-.L352
	.byte	1,5,28,9
	.half	.L615-.L614
	.byte	3,1,1,5,19,9
	.half	.L616-.L615
	.byte	1,5,17,9
	.half	.L617-.L616
	.byte	3,1,1,5,57,9
	.half	.L618-.L617
	.byte	3,126,1,5,14,9
	.half	.L619-.L618
	.byte	1,9
	.half	.L620-.L619
	.byte	3,5,1,9
	.half	.L353-.L620
	.byte	3,1,1,5,20,9
	.half	.L344-.L353
	.byte	3,3,1,5,24,9
	.half	.L621-.L344
	.byte	3,3,1,5,9,9
	.half	.L622-.L621
	.byte	1,5,3,9
	.half	.L623-.L622
	.byte	3,1,1,5,27,9
	.half	.L10-.L623
	.byte	3,3,1,5,1,9
	.half	.L624-.L10
	.byte	3,1,1,7,9
	.half	.L142-.L624
	.byte	0,1,1
.L601:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lCpuModifyAccess')
	.sect	'.debug_ranges'
.L141:
	.word	-1,.L37,0,.L142-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lCpuCheckAccess')
	.sect	'.debug_info'
.L143:
	.word	337
	.half	3
	.word	.L144
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L146,.L145
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_lCpuCheckAccess',0,1,177,5,13,1,1
	.word	.L39,.L282,.L38
	.byte	4
	.byte	'wdt',0,1,179,5,14
	.word	.L283,.L284
	.byte	4
	.byte	'CheckPassword',0,1,180,5,15
	.word	.L285,.L286
	.byte	4
	.byte	'CheckTimer',0,1,181,5,15
	.word	.L287,.L288
	.byte	5
	.word	.L39,.L282
	.byte	6
	.byte	'NewValCon0',0,1,184,5,11
	.word	.L181,.L289
	.byte	6
	.byte	'ScuWdtcon0Ptr',0,1,186,5,33
	.word	.L228,.L290
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lCpuCheckAccess')
	.sect	'.debug_abbrev'
.L144:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lCpuCheckAccess')
	.sect	'.debug_line'
.L145:
	.word	.L626-.L625
.L625:
	.half	3
	.word	.L628-.L627
.L627:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L628:
	.byte	5,42,7,0,5,2
	.word	.L39
	.byte	3,186,5,1,5,29,9
	.half	.L629-.L39
	.byte	1,5,42,9
	.half	.L630-.L629
	.byte	1,5,49,9
	.half	.L631-.L630
	.byte	1,5,38,9
	.half	.L354-.L631
	.byte	3,3,1,5,42,9
	.half	.L632-.L354
	.byte	1,5,14,9
	.half	.L355-.L632
	.byte	3,3,1,9
	.half	.L633-.L355
	.byte	3,3,1,5,21,9
	.half	.L634-.L633
	.byte	3,3,1,5,3,9
	.half	.L635-.L634
	.byte	1,5,16,7,9
	.half	.L636-.L635
	.byte	3,2,1,5,30,9
	.half	.L637-.L636
	.byte	3,1,1,5,16,9
	.half	.L638-.L637
	.byte	1,5,14,9
	.half	.L11-.L638
	.byte	3,3,1,5,20,9
	.half	.L639-.L11
	.byte	3,2,1,5,1,9
	.half	.L640-.L639
	.byte	3,2,1,7,9
	.half	.L147-.L640
	.byte	0,1,1
.L626:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lCpuCheckAccess')
	.sect	'.debug_ranges'
.L146:
	.word	-1,.L39,0,.L147-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lSetSafetyENDINIT')
	.sect	'.debug_info'
.L148:
	.word	219
	.half	3
	.word	.L149
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L151,.L150
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_lSetSafetyENDINIT',0,1,160,7,13,1,1
	.word	.L47,.L291,.L46
	.byte	4
	.word	.L47,.L291
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lSetSafetyENDINIT')
	.sect	'.debug_abbrev'
.L149:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lSetSafetyENDINIT')
	.sect	'.debug_line'
.L150:
	.word	.L642-.L641
.L641:
	.half	3
	.word	.L644-.L643
.L643:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L644:
	.byte	5,7,7,0,5,2
	.word	.L47
	.byte	3,162,7,1,5,43,9
	.half	.L645-.L47
	.byte	1,5,42,9
	.half	.L646-.L645
	.byte	1,5,3,9
	.half	.L647-.L646
	.byte	1,5,27,7,9
	.half	.L648-.L647
	.byte	3,2,1,5,7,9
	.half	.L19-.L648
	.byte	3,4,1,5,3,9
	.half	.L649-.L19
	.byte	1,5,5,7,9
	.half	.L650-.L649
	.byte	3,2,1,5,35,9
	.half	.L651-.L650
	.byte	1,5,5,9
	.half	.L652-.L651
	.byte	3,1,1,5,39,9
	.half	.L653-.L652
	.byte	1,5,7,9
	.half	.L20-.L653
	.byte	3,3,1,5,3,9
	.half	.L654-.L20
	.byte	1,5,25,7,9
	.half	.L655-.L654
	.byte	3,2,1,5,27,9
	.half	.L21-.L655
	.byte	3,4,1,5,1,9
	.half	.L656-.L21
	.byte	3,1,1,7,9
	.half	.L152-.L656
	.byte	0,1,1
.L642:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lSetSafetyENDINIT')
	.sect	'.debug_ranges'
.L151:
	.word	-1,.L47,0,.L152-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lResetSafetyENDINIT')
	.sect	'.debug_info'
.L153:
	.word	221
	.half	3
	.word	.L154
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1
	.word	.L156,.L155
	.byte	2
	.word	.L64
	.byte	3
	.byte	'Mcal_lResetSafetyENDINIT',0,1,178,6,13,1,1
	.word	.L43,.L292,.L42
	.byte	4
	.word	.L43,.L292
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lResetSafetyENDINIT')
	.sect	'.debug_abbrev'
.L154:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lResetSafetyENDINIT')
	.sect	'.debug_line'
.L155:
	.word	.L658-.L657
.L657:
	.half	3
	.word	.L660-.L659
.L659:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0,0,0,0,0
.L660:
	.byte	5,28,7,0,5,2
	.word	.L43
	.byte	3,185,6,1,5,7,9
	.half	.L661-.L43
	.byte	3,4,1,5,43,9
	.half	.L662-.L661
	.byte	1,5,42,9
	.half	.L663-.L662
	.byte	1,5,3,9
	.half	.L664-.L663
	.byte	1,5,27,7,9
	.half	.L665-.L664
	.byte	3,2,1,5,7,9
	.half	.L14-.L665
	.byte	3,3,1,5,3,9
	.half	.L666-.L14
	.byte	1,5,27,7,9
	.half	.L667-.L666
	.byte	3,2,1,5,3,9
	.half	.L15-.L667
	.byte	3,3,1,5,33,9
	.half	.L668-.L15
	.byte	1,5,3,9
	.half	.L669-.L668
	.byte	3,1,1,5,37,9
	.half	.L670-.L669
	.byte	1,5,1,9
	.half	.L671-.L670
	.byte	3,2,1,7,9
	.half	.L157-.L671
	.byte	0,1,1
.L658:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lResetSafetyENDINIT')
	.sect	'.debug_ranges'
.L156:
	.word	-1,.L43,0,.L157-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_ResetEndInitCounter')
	.sect	'.debug_info'
.L158:
	.word	199
	.half	3
	.word	.L159
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Mcal_ResetEndInitCounter',0,4,143,1,24
	.word	.L293
	.byte	5,3
	.word	Mcal_ResetEndInitCounter
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_ResetEndInitCounter')
	.sect	'.debug_abbrev'
.L159:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_ResetEndInitCounterRedn')
	.sect	'.debug_info'
.L160:
	.word	203
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Mcal_ResetEndInitCounterRedn',0,4,144,1,24
	.word	.L294
	.byte	5,3
	.word	Mcal_ResetEndInitCounterRedn
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_ResetEndInitCounterRedn')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SafetyResetEndInitCounter')
	.sect	'.debug_info'
.L162:
	.word	205
	.half	3
	.word	.L163
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Mcal_SafetyResetEndInitCounter',0,4,162,1,15
	.word	.L181
	.byte	5,3
	.word	Mcal_SafetyResetEndInitCounter
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SafetyResetEndInitCounter')
	.sect	'.debug_abbrev'
.L163:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SafetyResetEndInitCounterRedn')
	.sect	'.debug_info'
.L164:
	.word	209
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Mcal_SafetyResetEndInitCounterRedn',0,4,163,1,15
	.word	.L181
	.byte	5,3
	.word	Mcal_SafetyResetEndInitCounterRedn
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SafetyResetEndInitCounterRedn')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_WdgSafetyEndInitSem')
	.sect	'.debug_info'
.L166:
	.word	199
	.half	3
	.word	.L167
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Mcal_WdgSafetyEndInitSem',0,4,166,1,15
	.word	.L181
	.byte	5,3
	.word	Mcal_WdgSafetyEndInitSem
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_WdgSafetyEndInitSem')
	.sect	'.debug_abbrev'
.L167:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_WdgSafetyEndInitSemRedn')
	.sect	'.debug_info'
.L168:
	.word	203
	.half	3
	.word	.L169
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Mcal_WdgSafetyEndInitSemRedn',0,4,167,1,15
	.word	.L181
	.byte	5,3
	.word	Mcal_WdgSafetyEndInitSemRedn
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_WdgSafetyEndInitSemRedn')
	.sect	'.debug_abbrev'
.L169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Swdt_TimValue')
	.sect	'.debug_info'
.L170:
	.word	188
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Swdt_TimValue',0,4,200,1,15
	.word	.L181
	.byte	5,3
	.word	Swdt_TimValue
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Swdt_TimValue')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Wdt0_TimValue')
	.sect	'.debug_info'
.L172:
	.word	188
	.half	3
	.word	.L173
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Wdt0_TimValue',0,4,201,1,15
	.word	.L181
	.byte	5,3
	.word	Wdt0_TimValue
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Wdt0_TimValue')
	.sect	'.debug_abbrev'
.L173:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Wdt1_TimValue')
	.sect	'.debug_info'
.L174:
	.word	188
	.half	3
	.word	.L175
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Wdt1_TimValue',0,4,203,1,15
	.word	.L181
	.byte	5,3
	.word	Wdt1_TimValue
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Wdt1_TimValue')
	.sect	'.debug_abbrev'
.L175:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Wdt2_TimValue')
	.sect	'.debug_info'
.L176:
	.word	188
	.half	3
	.word	.L177
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'Wdt2_TimValue',0,4,205,1,15
	.word	.L181
	.byte	5,3
	.word	Wdt2_TimValue
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Wdt2_TimValue')
	.sect	'.debug_abbrev'
.L177:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('ScuWdtPtrList')
	.sect	'.debug_info'
.L178:
	.word	188
	.half	3
	.word	.L179
	.byte	4,1
	.byte	'..\\BSW\\mcal_base\\tricore_general\\ssc\\src\\Mcal_WdgLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Workspace_AURIX\\DEVICECONTROL_MCAL\\Debug\\',0,1,1,2
	.word	.L64
	.byte	3
	.byte	'ScuWdtPtrList',0,4,243,1,28
	.word	.L295
	.byte	5,3
	.word	ScuWdtPtrList
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('ScuWdtPtrList')
	.sect	'.debug_abbrev'
.L179:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_CpuWdtCheckAccess')
	.sect	'.debug_loc'
.L208:
	.word	-1,.L59,0,.L383-.L59
	.half	5
	.byte	144,34,157,32,0
	.word	.L385-.L59,.L386-.L59
	.half	5
	.byte	144,32,157,32,0
	.word	.L384-.L59,.L386-.L59
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
.L210:
	.word	-1,.L59,0,.L384-.L59
	.half	5
	.byte	144,34,157,32,32
	.word	.L387-.L59,.L386-.L59
	.half	5
	.byte	144,35,157,32,0
	.word	0,0
.L211:
	.word	-1,.L59,.L383-.L59,.L386-.L59
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
.L58:
	.word	-1,.L59,0,.L206-.L59
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_CpuWdtModifyAccess')
	.sect	'.debug_loc'
.L200:
	.word	-1,.L55,.L373-.L55,.L376-.L55
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
.L54:
	.word	-1,.L55,0,.L194-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L196:
	.word	-1,.L55,0,.L373-.L55
	.half	5
	.byte	144,34,157,32,0
	.word	.L375-.L55,.L376-.L55
	.half	5
	.byte	144,32,157,32,0
	.word	.L374-.L55,.L376-.L55
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
.L198:
	.word	-1,.L55,0,.L374-.L55
	.half	5
	.byte	144,34,157,32,32
	.word	.L377-.L55,.L376-.L55
	.half	5
	.byte	144,35,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_CpuWdtPwSequence')
	.sect	'.debug_loc'
.L218:
	.word	-1,.L63,.L391-.L63,.L393-.L63
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
.L62:
	.word	-1,.L63,0,.L215-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L217:
	.word	-1,.L63,0,.L391-.L63
	.half	5
	.byte	144,34,157,32,0
	.word	.L392-.L63,.L393-.L63
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_ResetCpuENDINIT')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L306-.L33
	.half	2
	.byte	138,0
	.word	.L306-.L33,.L219-.L33
	.half	2
	.byte	138,8
	.word	.L219-.L33,.L219-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L223:
	.word	-1,.L33,.L314-.L33,.L315-.L33
	.half	5
	.byte	144,33,157,32,0
	.word	.L316-.L33,.L313-.L33
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L224:
	.word	-1,.L33,.L315-.L33,.L317-.L33
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L222:
	.word	-1,.L33,.L312-.L33,.L313-.L33
	.half	5
	.byte	144,36,157,32,32
	.word	.L313-.L33,.L318-.L33
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L231:
	.word	-1,.L33,.L310-.L33,.L219-.L33
	.half	1
	.byte	109
	.word	0,0
.L229:
	.word	-1,.L33,.L309-.L33,.L219-.L33
	.half	1
	.byte	108
	.word	0,0
.L225:
	.word	-1,.L33,.L319-.L33,.L219-.L33
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L233:
	.word	-1,.L33,.L311-.L33,.L219-.L33
	.half	1
	.byte	111
	.word	0,0
.L227:
	.word	-1,.L33,0,.L219-.L33
	.half	2
	.byte	145,120
	.word	0,0
.L221:
	.word	-1,.L33,0,.L307-.L33
	.half	5
	.byte	144,34,157,32,0
	.word	.L308-.L33,.L219-.L33
	.half	5
	.byte	144,36,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_ResetENDINIT')
	.sect	'.debug_loc'
.L182:
	.word	-1,.L41,.L356-.L41,.L357-.L41
	.half	5
	.byte	144,36,157,32,0
	.word	.L361-.L41,.L13-.L41
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
.L183:
	.word	-1,.L41,.L358-.L41,.L359-.L41
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L184:
	.word	-1,.L41,.L360-.L41,.L12-.L41
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L40:
	.word	-1,.L41,0,.L180-.L41
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_ResetSafetyENDINIT_Timed')
	.sect	'.debug_loc'
.L48:
	.word	-1,.L49,0,.L245-.L49
	.half	2
	.byte	138,0
	.word	0,0
.L247:
	.word	-1,.L49,.L367-.L49,.L23-.L49
	.half	5
	.byte	144,33,157,32,0
	.word	.L22-.L49,.L24-.L49
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L246:
	.word	-1,.L49,0,.L367-.L49
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SafetyCheckAccess')
	.sect	'.debug_loc'
.L203:
	.word	-1,.L57,0,.L378-.L57
	.half	5
	.byte	144,34,157,32,0
	.word	.L380-.L57,.L201-.L57
	.half	5
	.byte	144,39,157,32,32
	.word	.L379-.L57,.L382-.L57
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
.L205:
	.word	-1,.L57,0,.L379-.L57
	.half	5
	.byte	144,34,157,32,32
	.word	.L381-.L57,.L382-.L57
	.half	5
	.byte	144,35,157,32,0
	.word	0,0
.L56:
	.word	-1,.L57,0,.L201-.L57
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SafetyModifyAccess')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L189-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L191:
	.word	-1,.L53,0,.L368-.L53
	.half	5
	.byte	144,34,157,32,0
	.word	.L370-.L53,.L189-.L53
	.half	5
	.byte	144,39,157,32,32
	.word	.L369-.L53,.L372-.L53
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
.L193:
	.word	-1,.L53,0,.L369-.L53
	.half	5
	.byte	144,34,157,32,32
	.word	.L371-.L53,.L372-.L53
	.half	5
	.byte	144,35,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SafetyPwSequence')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L212-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L214:
	.word	-1,.L61,0,.L388-.L61
	.half	5
	.byte	144,34,157,32,0
	.word	.L389-.L61,.L390-.L61
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SetCpuENDINIT')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L320-.L35
	.half	2
	.byte	138,0
	.word	.L320-.L35,.L234-.L35
	.half	2
	.byte	138,8
	.word	.L234-.L35,.L234-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	-1,.L35,.L328-.L35,.L329-.L35
	.half	5
	.byte	144,33,157,32,0
	.word	.L330-.L35,.L327-.L35
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L239:
	.word	-1,.L35,.L329-.L35,.L331-.L35
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L237:
	.word	-1,.L35,.L326-.L35,.L327-.L35
	.half	5
	.byte	144,36,157,32,32
	.word	.L327-.L35,.L332-.L35
	.half	5
	.byte	144,39,157,32,32
	.word	.L332-.L35,.L333-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	.L333-.L35,.L334-.L35
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L243:
	.word	-1,.L35,.L324-.L35,.L234-.L35
	.half	1
	.byte	109
	.word	0,0
.L242:
	.word	-1,.L35,.L323-.L35,.L234-.L35
	.half	1
	.byte	108
	.word	0,0
.L244:
	.word	-1,.L35,.L325-.L35,.L234-.L35
	.half	1
	.byte	111
	.word	0,0
.L241:
	.word	-1,.L35,0,.L234-.L35
	.half	2
	.byte	145,120
	.word	0,0
.L236:
	.word	-1,.L35,0,.L321-.L35
	.half	5
	.byte	144,34,157,32,0
	.word	.L322-.L35,.L234-.L35
	.half	5
	.byte	144,36,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SetENDINIT')
	.sect	'.debug_loc'
.L186:
	.word	-1,.L45,.L362-.L45,.L185-.L45
	.half	5
	.byte	144,36,157,32,0
	.word	.L366-.L45,.L18-.L45
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
.L187:
	.word	-1,.L45,.L363-.L45,.L364-.L45
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L188:
	.word	-1,.L45,.L365-.L45,.L16-.L45
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L44:
	.word	-1,.L45,0,.L185-.L45
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SetSafetyENDINIT_Timed')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L248-.L51
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lCpuCheckAccess')
	.sect	'.debug_loc'
.L286:
	.word	-1,.L39,0,.L282-.L39
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
.L288:
	.word	-1,.L39,0,.L282-.L39
	.half	5
	.byte	144,35,157,32,0
	.word	0,0
.L38:
	.word	-1,.L39,0,.L282-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L289:
	.word	-1,.L39,.L355-.L39,.L282-.L39
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L290:
	.word	-1,.L39,.L354-.L39,.L282-.L39
	.half	1
	.byte	111
	.word	0,0
.L284:
	.word	-1,.L39,0,.L282-.L39
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lCpuModifyAccess')
	.sect	'.debug_loc'
.L278:
	.word	-1,.L37,.L343-.L37,.L344-.L37
	.half	5
	.byte	144,37,157,32,0
	.word	0,0
.L36:
	.word	-1,.L37,0,.L335-.L37
	.half	2
	.byte	138,0
	.word	.L335-.L37,.L266-.L37
	.half	2
	.byte	138,8
	.word	.L266-.L37,.L266-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L270:
	.word	-1,.L37,0,.L336-.L37
	.half	5
	.byte	144,34,157,32,32
	.word	.L338-.L37,.L266-.L37
	.half	5
	.byte	144,38,157,32,0
	.word	0,0
.L274:
	.word	-1,.L37,.L347-.L37,.L348-.L37
	.half	5
	.byte	144,33,157,32,0
	.word	.L349-.L37,.L266-.L37
	.half	5
	.byte	144,36,157,32,32
	.word	0,0
.L277:
	.word	-1,.L37,.L346-.L37,.L266-.L37
	.half	5
	.byte	144,36,157,32,0
	.word	0,0
.L275:
	.word	-1,.L37,.L348-.L37,.L350-.L37
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L272:
	.word	-1,.L37,0,.L336-.L37
	.half	5
	.byte	144,35,157,32,0
	.word	.L339-.L37,.L266-.L37
	.half	5
	.byte	144,39,157,32,0
	.word	0,0
.L276:
	.word	-1,.L37,.L345-.L37,.L342-.L37
	.half	5
	.byte	144,38,157,32,32
	.word	0,0
.L273:
	.word	-1,.L37,.L341-.L37,.L342-.L37
	.half	5
	.byte	144,39,157,32,32
	.word	.L351-.L37,.L352-.L37
	.half	5
	.byte	144,38,157,32,32
	.word	.L352-.L37,.L353-.L37
	.half	5
	.byte	144,32,157,32,0
	.word	.L353-.L37,.L344-.L37
	.half	5
	.byte	144,39,157,32,32
	.word	.L353-.L37,.L266-.L37
	.half	5
	.byte	144,37,157,32,0
	.word	0,0
.L281:
	.word	-1,.L37,.L340-.L37,.L266-.L37
	.half	1
	.byte	111
	.word	0,0
.L280:
	.word	-1,.L37,0,.L266-.L37
	.half	2
	.byte	145,120
	.word	0,0
.L268:
	.word	-1,.L37,0,.L336-.L37
	.half	5
	.byte	144,34,157,32,0
	.word	.L337-.L37,.L266-.L37
	.half	5
	.byte	144,37,157,32,32
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lCpuPwSequence')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L249-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L253:
	.word	-1,.L29,0,.L296-.L29
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
.L254:
	.word	-1,.L29,.L297-.L29,.L298-.L29
	.half	5
	.byte	144,34,157,32,32
	.word	.L298-.L29,.L300-.L29
	.half	5
	.byte	144,33,157,32,0
	.word	.L303-.L29,.L249-.L29
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L255:
	.word	-1,.L29,.L299-.L29,.L249-.L29
	.half	1
	.byte	111
	.word	0,0
.L258:
	.word	-1,.L29,.L301-.L29,.L302-.L29
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L257:
	.word	0,0
.L251:
	.word	-1,.L29,0,.L249-.L29
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lCpuRelValue')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L259-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L264:
	.word	-1,.L31,.L304-.L31,.L259-.L31
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L265:
	.word	-1,.L31,.L305-.L31,.L259-.L31
	.half	1
	.byte	111
	.word	0,0
.L263:
	.word	-1,.L31,0,.L259-.L31
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
.L261:
	.word	-1,.L31,0,.L259-.L31
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lResetSafetyENDINIT')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L292-.L43
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lSetSafetyENDINIT')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L291-.L47
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L672:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,26,8,27,8,30,8,29,8,28,8,16,8,17,8,24,8,25,8,31,8,32,8,33,8,34,8,35,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Mcal_lCpuPwSequence')
	.sect	'.debug_frame'
	.word	24
	.word	.L672,.L29,.L249-.L29
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_lCpuRelValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L672,.L31,.L259-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_ResetCpuENDINIT')
	.sect	'.debug_frame'
	.word	36
	.word	.L672,.L33,.L219-.L33
	.byte	4
	.word	(.L306-.L33)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L219-.L306)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Mcal_SetCpuENDINIT')
	.sect	'.debug_frame'
	.word	36
	.word	.L672,.L35,.L234-.L35
	.byte	4
	.word	(.L320-.L35)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L234-.L320)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Mcal_lCpuModifyAccess')
	.sect	'.debug_frame'
	.word	36
	.word	.L672,.L37,.L266-.L37
	.byte	4
	.word	(.L335-.L37)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L266-.L335)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Mcal_lCpuCheckAccess')
	.sect	'.debug_frame'
	.word	24
	.word	.L672,.L39,.L282-.L39
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_ResetENDINIT')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L41,.L180-.L41
	.sdecl	'.debug_frame',debug,cluster('Mcal_lResetSafetyENDINIT')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L43,.L292-.L43
	.sdecl	'.debug_frame',debug,cluster('Mcal_SetENDINIT')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L45,.L185-.L45
	.sdecl	'.debug_frame',debug,cluster('Mcal_lSetSafetyENDINIT')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L47,.L291-.L47
	.sdecl	'.debug_frame',debug,cluster('Mcal_ResetSafetyENDINIT_Timed')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L49,.L245-.L49
	.sdecl	'.debug_frame',debug,cluster('Mcal_SetSafetyENDINIT_Timed')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L51,.L248-.L51
	.sdecl	'.debug_frame',debug,cluster('Mcal_SafetyModifyAccess')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L53,.L189-.L53
	.sdecl	'.debug_frame',debug,cluster('Mcal_CpuWdtModifyAccess')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L55,.L194-.L55
	.sdecl	'.debug_frame',debug,cluster('Mcal_SafetyCheckAccess')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L57,.L201-.L57
	.sdecl	'.debug_frame',debug,cluster('Mcal_CpuWdtCheckAccess')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L59,.L206-.L59
	.sdecl	'.debug_frame',debug,cluster('Mcal_SafetyPwSequence')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L61,.L212-.L61
	.sdecl	'.debug_frame',debug,cluster('Mcal_CpuWdtPwSequence')
	.sect	'.debug_frame'
	.word	12
	.word	.L672,.L63,.L215-.L63

; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1249  #if (IFX_MCAL_USED == STD_ON)
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1250  /*Memory Map of the Code*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1251  #define MCAL_WDGLIB_STOP_SEC_CODE
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1252  /*
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1253    Allows to map variables, constants and code of modules to individual
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1254    memory sections.
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1255  */
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1256  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1257   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1258  #include "MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1259  #else
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1260  #define IFX_MCAL_WDGLIB_STOP_SEC_CODE_ASIL_B
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1261  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1262   allowed only for MemMap.h*/
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1263  #include "Ifx_MemMap.h"
; ..\BSW\mcal_base\tricore_general\ssc\src\Mcal_WdgLib.c	  1264  #endif

	; Module end
